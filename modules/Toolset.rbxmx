<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">true</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="ModuleScript" referent="RBXFAA1C0364DBF4497BE1DB0DD235A5051">
		<Properties>
			<BinaryString name="AttributesSerialize"></BinaryString>
			<Content name="LinkedSource"><null></null></Content>
			<string name="Name">Toolset</string>
			<string name="ScriptGuid">{62AC1353-3A55-46D7-9299-67A045490BAD}</string>
			<ProtectedString name="Source"><![CDATA[local RepStorage = game:GetService("ReplicatedStorage")
local Collections = game:GetService("CollectionService")
local StarterPack = game:GetService("StarterPack")
local ServerStorage = game:GetService("ServerStorage")
local StarterPlayer = game:GetService("StarterPlayer")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local Physics = game:GetService("PhysicsService")

local OverwriteTable = nil
local OverwriteIncompatibleSettings = nil

function Load(Settings)
	local GlobalTable = {}

	local SettingsScript = script.DefaultSettings
	local ModSettings = require(SettingsScript.ModifiableSettingsArrays)
	local Directories = script.Directories
	local NewSettings = require(SettingsScript)

	OverwriteTable(NewSettings, Settings)

	SettingsScript.Name = "BB_Settings"
	SettingsScript.Parent = RepStorage

	OverwriteIncompatibleSettings(NewSettings)

	-- Handle ThemePacks
	local themes = Directories.ReplicatedStorage.Themes
	for _, Module in pairs(NewSettings.Themes.ThemePacks) do
		local ThemePack = require(Module)
		if type(ThemePack) == "userdata" then
			if ThemePack:IsA("Folder") then
				for _, Theme in pairs(ThemePack:GetChildren()) do
					if Theme:IsA("Folder") then
						local current = themes:FindFirstChild(Theme.Name)
						if current then
							warn("Theme with same name found, overriding:", current)
							pcall(game.Destroy, current)
						end

						Theme.Parent = themes
					else
						warn("Theme inside themepack must be a folder, not adding:", Theme)
					end
				end
			else
				warn("Improper class for themepack: class must be a folder")
			end
		else
			warn("Improper type for themepack: type() must return userdata (folder)")
		end
	end

	-- Set physics properties (these are all used entirely locally)
	local PhysicsTable = {
		ToolHandles = {
			PlayerParts = false;
			ToolHandles = false;
			Default = false;
		};
		Superballs = {
			PlayerParts = false;
			Superballs = false;
			Pellets = false;
			JumpyPellets = false;
		};
		JumpySuperballs = {
			JumpySuperballs = false;
			PlayerParts = true;
			Superballs = false;
			Pellets = false;
			JumpyPellets = false;
		};
		Pellets = {
			PlayerParts = false;
			JumpyPellets = false;
		};
		JumpyPellets = {
			PlayerParts = true;
		};
		Paintballs = {
			PlayerParts = false;
			Superballs = false;
			JumpySuperballs = false;
			Pellets = false;
			JumpyPellets = false;
		};
		BombJumpBombs = {};
		RideableRockets = {
			Default = false;
			Superballs = false;
			JumpySuperballs = false;
			Pellets = false;
			Paintballs = false;
			JumpyPellets = false;
		};
		PlayerParts = {
			RideableRockets = true;
			BombJumpBombs = false;
		};
	}

	for Group, _ in pairs(PhysicsTable) do
		Physics:RegisterCollisionGroup(Group)
	end

	for Group, Table in pairs(PhysicsTable) do
		for OtherGroup, Collidable in pairs(Table) do
			Physics:CollisionGroupSetCollidable(Group, OtherGroup, Collidable)
		end
	end

	-- Return settings upon client request
	local CallbacksReparented = false
	local CallbacksReparented_ = Instance.new("BindableEvent")
	Directories.ReplicatedStorage.ToolNetworking.AcquireSettings.OnServerInvoke = function()
		if CallbacksReparented == false then
			CallbacksReparented_.Event:Wait()
		end
		return NewSettings
	end

	-- Remove filtered weapons
	for _, Tool in pairs(script.Directories.StarterPack:GetChildren()) do
		local Tool_Filtered = table.find(NewSettings.WeaponsFiltered, Tool.Name) ~= nil
		if Tool_Filtered ~= NewSettings.WeaponsFilterType then
			Tool.Parent = ServerStorage
		end
	end

	-- If existent, parent weapons to custom directory
	if NewSettings.CustomWeaponsDirectory then
		for _,Tool in pairs(script.Directories.StarterPack:GetChildren()) do
			Tool.Parent = Settings.CustomWeaponsDirectory
		end
		script.Directories.StarterPack:Destroy()
	end

	local repStorage = Directories.ReplicatedStorage

	local TimeValue = repStorage.SERVER_TIME
	local Remotes = repStorage.ToolNetworking
	local Modules = repStorage.ToolModules
	local ProjectileFolder = Directories.Workspace.Projectiles
	local ActiveFolder = ProjectileFolder.Active
	local BufferFolder = ProjectileFolder.Buffers -- for trowels

	-- Distribute objects
	require(script.DistributeObjects)(script.Directories)

	-- Construct global table
	GlobalTable.Settings = NewSettings
	GlobalTable.Modules = Modules
	GlobalTable.Remotes = Remotes
	GlobalTable.ProjectileFolder = ProjectileFolder
	GlobalTable.MasterTimeTable = {}
	GlobalTable.ProjectileCounts = {}
	GlobalTable.ServerTime = TimeValue

	-- Handle callbacks
	local Callbacks = SettingsScript:WaitForChild("Callbacks")
	Callbacks.Parent = Modules

	local approved = {}
	for name, module in pairs(NewSettings.Callbacks) do
		if typeof(module) == "Instance"
			and module:IsA("ModuleScript")
			and type(require(module)) == "function" then
			table.insert(approved, module)
			module.Name = name
			module.Parent = Callbacks
		end
	end

	for _, child in pairs (Callbacks:GetChildren()) do
		if not table.find(approved, child) then
			child:Destroy() -- delete unnecessary extrenuous modules
		end
	end

	CallbacksReparented = true
	CallbacksReparented_:Fire()
	game:GetService("Debris"):AddItem(CallbacksReparented_, 0)

	-- Functions to load weapons and data for players
	local function CreateProjectileFolders(Player)
		local PlayerBufferFolder = Instance.new("Folder")
		PlayerBufferFolder.Name = Player.Name
		PlayerBufferFolder.Parent = BufferFolder

		local PlayerActiveFolder = Instance.new("Folder")
		PlayerActiveFolder.Name = Player.Name
		PlayerActiveFolder.Parent = ActiveFolder
	end

	local function AddBufferValues(Player)
		local Buffers = Player:FindFirstChild("Buffers")
		if not Buffers then
			StarterPlayer:FindFirstChild("Buffers"):Clone().Parent = Player
		end
	end

	local function LoadModule(Tool,Buffers,Player,Character)
		local ServerFolder = Tool:WaitForChild("Server",1)
		local ServerModule = ServerFolder and ServerFolder:FindFirstChildWhichIsA("ModuleScript")
		if ServerModule then
			--print("Initializing:",Tool.Name,"| For:",Player.Name)
			require(ServerModule):Init(NewSettings, Modules, Buffers, Player, Character, ProjectileFolder)
		end
	end

	local function AddCharacter(Player, Character)
		local Buffers = Player:WaitForChild("Buffers")
		--[[if not Character then
			return
		end]]

		if not Collections:HasTag(Character, "ToolsLoaded") then
			local Backpack = Player:WaitForChild("Backpack")
			Collections:AddTag(Character, "ToolsLoaded")

			-- Ensure player has weapons
			local spawnedWithout = 0
			if not NewSettings.CustomWeaponsDirectory then
				for _, tool in pairs (StarterPack:GetChildren()) do
					if not Backpack:FindFirstChild(tool.Name) then
						spawnedWithout += 1
						tool:Clone().Parent = Backpack
					end
				end
			end

			if spawnedWithout > 0 then
				--print(Player.Name.." spawned without", spawnedWithout, "tools.")
			end

			-- Load weapon
			for _,Tool in pairs(Backpack:GetChildren()) do
				task.spawn(LoadModule, Tool, Buffers, Player, Character)
			end
		end
	end

	local function AddPlayer(Player)
		local emptyTable = {
			Superballs = 0;
			Rockets = 0;
			Pellets = 0;
			Bombs = 0;
			Walls = 0;
			Paintballs = 0;
		}

		local directory = _G.BB and _G.BB or GlobalTable
		directory.MasterTimeTable[Player.Name] = {}
		directory.ProjectileCounts[Player.Name] = emptyTable

		local Theme = Instance.new("StringValue")
		Theme.Name = "Theme"
		Theme.Value = "Normal"
		Theme.Parent = Player
		task.spawn(CreateProjectileFolders,Player)
		task.spawn(AddBufferValues,Player)
	end

	local function RemovePlayer(Player)
		local PlayerBufferFolder = BufferFolder:WaitForChild(Player.Name,1)
		local PlayerActiveFolder = ActiveFolder:WaitForChild(Player.Name,1)
		if PlayerBufferFolder then
			PlayerBufferFolder:Destroy()
		end
		if PlayerActiveFolder then
			PlayerActiveFolder:Destroy()
		end
		_G.BB.ProjectileCounts[Player.Name] = nil
	end

	-- Release global table
	GlobalTable.LoadModule = LoadModule
	GlobalTable.InitializeServer = AddCharacter
	_G.BB = GlobalTable

	-- Load player modules
	require(script.LoadPlayerModules)(AddPlayer, RemovePlayer, AddCharacter)


	-- Distribute checker script to ensure players have mandatory client scripts
	for _, Player in pairs (Players:GetPlayers()) do
		if not Player:WaitForChild("PlayerGui"):FindFirstChild("Checker") then
			StarterGui.Checker:Clone().Parent = Player.PlayerGui
		end
	end

	-- Create security part that is used in Explosion and PSPV
	local SecurityPart = Instance.new("Part")
	SecurityPart.Shape = Enum.PartType.Ball
	SecurityPart.Transparency = 1
	SecurityPart.CanCollide = false
	SecurityPart.Anchored = true
	SecurityPart.Parent = workspace
	SecurityPart.Touched:Connect(function() end)

	-- Initialize & hook up remotes
	require(Modules.Explosion):RegisterEvents()
	require(Modules.Hit):RegisterEvents()
	require(Modules.Security):Init(SecurityPart, script.SecurityDummy, TimeValue)
	require(script.CustomPhysicsReplicator):Init(Remotes, Modules)

	script.Parent = game:GetService("ServerScriptService")
end


function GetValueFromPathArray(Table, PathArray, Depth)
	if not Depth then
		Depth = 1
	end
	for Key,Value in pairs(Table) do
		if Key == PathArray[Depth] then
			if typeof(Value) == "table" then
				return GetValueFromPathArray(Value, PathArray, Depth + 1)
			else
				return Value
			end
		end
	end
end

function ClearArray(Array)
	while #Array > 0 do
		table.remove(Array)
	end
end

function OverwriteTable(To, From, PathArray)
	if PathArray == nil then
		PathArray = {}
	end
	if typeof(From) == "table" and typeof(To) == "table" then
		for Key, Value in pairs(From) do

			if typeof(Value) == "table" then
				OverwriteTable(To[Key], Value)
			else
				if To[Key] == nil and type(Key) ~= "number" then
					warn("Key not found in default settings (attempting to override):", Key, Value)
				end
				To[Key] = Value
			end
		end
	end
end

function OverwriteIncompatibleSettings(T)
	if T.InstantDamage then
		if (
			T.Security.Initial.Deactivate
				or T.Security.Update.Deactivate
				or T.Security.Hit.Deactivate
			) and T.Security.Master then

			warn("InstantDamage disabled (not compatible with Deactivate settings in Security).")
			T.InstantDamage = false
		end
	end
	if T.SlingClimb and T.Doomspire.SlingFly then
		T.SlingClimb = false
	end
end

return Load

--[[
	Under _G.BB (Server):
	- Settings: The default settings that were overriden by the requirer's changes
	- Modules: Directory of the modules used by the toolset
	- Remotes: Directory of the remotes used by the toolset
	- ProjectileFolder: Directory of the projectiles (would be physics folders from server's POV)
	- ServerTime: Number value that holds the last tick of the last heartbeat
	- MasterTimeTable: Dictionary that CFrames of chracters every heartbeat when PSPV is on
	- ProjectileCounts: Dictionary with tool names as keys and the fire count as values
	- InitializeServer: A function that ensures the player has the necessary weapons and loads their server modules
	- LoadModule: A function that loads the server modules of a specific weapon
]]]]></ProtectedString>
			<int64 name="SourceAssetId">6101328137</int64>
			<BinaryString name="Tags"></BinaryString>
		</Properties>
		<Item class="Folder" referent="RBXC1F0E49888314463BDA9599875B0319C">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<string name="Name">Directories</string>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBX73C5C5509B714864A7A567696889858F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">ReplicatedStorage</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBX3A0855CD0D314E3D9585FBAE36CE5B5E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolNetworking</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="RemoteEvent" referent="RBX0EA7BA42CC9A459FB80DFA1436832144">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Explosion</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBX211715CF5D024D6388B678404B977138">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Hit</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBX0D9652E8D3B34B72849F46CA90DC2515">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">UpdatePhysics</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBXCEDB6AF8225541DE83B88B304274027F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Ping</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteFunction" referent="RBXFF9F6BD97F9B419B8D9D68BF2825B411">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">AcquireSettings</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="BindableEvent" referent="RBXFCF94DFF468745B09F661EDEC8A1C052">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">ThemeActivation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBX016C56CAB988470F90AFBCE913B50CC8">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Delete</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Folder" referent="RBXA52F4C205FAF4E0F8024B4233F784B68">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolModules</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ModuleScript" referent="RBX49B6E0A83F7E45C093F565629A30B28F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Aesthetics</string>
							<string name="ScriptGuid">{87FE0F6A-0A5A-4BD8-94AF-0C974ED58D55}</string>
							<ProtectedString name="Source"><![CDATA[-- GloriedRage
-- Module used for determining aesthetics of explosions and hit indicators.
local Aesthetics = {}

local repStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")
local Physics = game:GetService("PhysicsService")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")

-- Yield for themes folder
local ThemesFolder = repStorage:WaitForChild("Themes")

local BrightnessRange = {
	Min = .15,
	Max = .85
}

local swordTrailLoop = nil

Aesthetics.TrailTypes  = {
	"Trail",
	"Fire",
	"ParticleEmitter",
	"Smoke",
	"Beam"
}


local function themesOn()
	return _G.BB.Local and _G.BB.Local.Themes
end

local function themesHighGraphics()
	return _G.BB.Local and _G.BB.Local.ThemesHighGraphics
end

local function returnRandomBrickColor(ctable)
	return BrickColor.new(ctable[math.random(1, #ctable)])
end

function Aesthetics:HasNeutralColors(Player)

	local teamName = Player.Team and Player.Team.Name

	if not _G.BB.Settings.AutoTeamColors then
		return true
	end

	if _G.BB.Settings.ThemeOverrides then
		local theme = Player:FindFirstChild("Theme")

		-- do not override if theme is normal/default theme
		if theme and theme.Value ~= _G.BB.Settings.Themes.DefaultTheme then
			return true
		end
	end

	return Player.Neutral or table.find(_G.BB.Settings.TeamsFiltered, teamName)
end

function Aesthetics:DetermineTheme(Player)
	local themeVal = Player:WaitForChild("Theme")
	local theme = themeVal and themeVal.Value

	local base = (themesOn() and themeVal) and theme or _G.BB.Settings.Themes.DefaultTheme
	local teamColor = not self:HasNeutralColors(Player) and "Team Color"

	return teamColor or base or _G.BB.Settings.Themes.DefaultTheme
end

function Aesthetics:GetThemeObject(Player, ObjectName)
	local Theme = self:DetermineTheme(Player)

	local ThemeFolder = (Theme and Theme ~= "Team Color")
		and ThemesFolder:FindFirstChild(Theme)
		or ThemesFolder:FindFirstChild("Normal")

	local Object = ThemeFolder and ThemeFolder:FindFirstChild(ObjectName)

	return Object,Theme
end

function Aesthetics:RandomColor()
	return Color3.new(
		math.random(BrightnessRange.Min*1000,BrightnessRange.Max*1000)/1000,
		math.random(BrightnessRange.Min*1000,BrightnessRange.Max*1000)/1000,
		math.random(BrightnessRange.Min*1000,BrightnessRange.Max*1000)/1000
	)
end

function Aesthetics:GetColorAtTime(Sequence, Time)

	local LowerBound, UpperBound = Sequence.Keypoints[1], Sequence.Keypoints[#Sequence.Keypoints]

	for i = 1, #Sequence.Keypoints do
		local Keypoint = Sequence.Keypoints[i]
		if Time - Keypoint.Time >= 0 and Time - Keypoint.Time < Time - LowerBound.Time then
			LowerBound = Keypoint
		end
		if Keypoint.Time - Time >= 0 and Keypoint.Time - Time < UpperBound.Time - Time then
			UpperBound = Keypoint
		end
	end

	Time = Time - LowerBound.Time

	return LowerBound.Value:Lerp(UpperBound.Value, Time)
end

--Handle animated textures
local function animateTexture(t)
	local uSpeed = t:FindFirstChild("UOffsetSpeed") and t.UOffsetSpeed.Value or 0
	local vSpeed = t:FindFirstChild("VOffsetSpeed") and t.VOffsetSpeed.Value or 0

	if uSpeed == 0 and vSpeed == 0 then return end

	if uSpeed ~= 0 then
		local tweenInfo = TweenInfo.new(uSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1, false, 0)
		local uTween = TweenService:Create(t, tweenInfo, {OffsetStudsU = 30})
		uTween:Play()
		t.Destroying:Connect(function() uTween:Destroy() end)
	end

	if vSpeed ~= 0 then
		local tweenInfo = TweenInfo.new(vSpeed, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, -1, false, 0)
		local vTween = TweenService:Create(t, tweenInfo, {OffsetStudsV = 30})
		vTween:Play()
		t.Destroying:Connect(function() vTween:Destroy() end)
	end

end

function Aesthetics:HandleSBHandle(Player, handle, colorEvent, initial)

	local ThemeValue = Player:WaitForChild("Theme")

	local function themeChanged()
		-- Update handle
		local Folder, Theme = self:GetThemeObject(Player, "Superball")
		local Part = Folder:FindFirstChildWhichIsA("Part")
		handle.Material = Part.Material
		handle.Reflectance = Part.Reflectance
		handle.Transparency = Part.Transparency

		if initial then
			for _,v in pairs(handle:GetChildren()) do
				if v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Texture") then
					v:Destroy()
				end
			end

			for _,v in pairs(Part:GetChildren()) do
				if v:IsA("Texture") then
					local vv = v:Clone()
					vv.Parent = handle
					if vv:FindFirstChild("UOffsetSpeed") or vv:FindFirstChild("VOffsetSpeed") then
						animateTexture(vv)
					end
				end
			end
		end

		local NonCustomThemes = {
			_G.BB.Settings.Themes.DefaultTheme,
			"Team Color",
		}

		handle.Color = (themesOn() and not table.find(NonCustomThemes, Theme))
			and (Part.Color)
			or Theme == "Team Color"
			and Player.TeamColor.Color
			or (_G.BB.Settings.Themes.RandomSuperballColors
				and self:RandomColor()
				or Part.Color)

		colorEvent:FireServer(handle.Color, handle.Transparency, handle.Reflectance, handle.Material)
	end

	themeChanged()

	if initial then
		ThemeValue.Changed:Connect(themeChanged)
		_G.BB.Remotes:WaitForChild("ThemeActivation").Event:Connect(themeChanged)
	end
end

function Aesthetics:HandleSword(Player, handle, Server)
	local ThemeValue = Player:WaitForChild("Theme")
	local Connection

	local function ColorSword()
		local Folder = self:GetThemeObject(Player, "Sword")

		local HandleRef = Folder:FindFirstChildWhichIsA("Part")
		handle.Color = HandleRef.Color
		handle.Reflectance = HandleRef.Reflectance
		handle.Transparency = HandleRef.Transparency
		handle.Material = HandleRef.Material

		local Mesh = HandleRef:FindFirstChildWhichIsA("SpecialMesh")
		local myMesh = handle:WaitForChild("Mesh", 3)
		if myMesh then
			myMesh.TextureId = Mesh.TextureId
			myMesh.VertexColor = Mesh.VertexColor
		end
	end

	local function AssignColors()
		ColorSword()
		local HasTrail = self:CreateSwordTrail(handle,Player)
		if not Server and (HasTrail or not _G.BB.Local.Themes) then
			if not Connection then
				Connection = handle.DescendantAdded:Connect(function(Child)
					if Child.Name == "ServerTrail" then
						game:GetService('Debris'):AddItem(Child,0)
					end
				end)
			end

			for _,Child in pairs(handle:GetDescendants()) do
				if Child.Name == "ServerTrail" then
					Child:Destroy()
				end
			end
		end
	end

	local function themeChanged()
		for _,Child in pairs(handle:GetDescendants()) do
			if table.find(Aesthetics.TrailTypes,Child.ClassName) then
				Child:Destroy()
			end
		end
		AssignColors()
	end

	if not Server then
		_G.BB.Remotes:WaitForChild("ThemeActivation").Event:Connect(themeChanged)
	end

	AssignColors()

	ThemeValue.Changed:Connect(themeChanged)
end

function Aesthetics:ToggleThemes(value)
	if _G.BB == nil then
		warn("Global table not found, yielding.")
		while _G.BB == nil do
			task.wait()
		end
	end

	local Themes


	if value == nil or type(value) ~= "boolean" then
		Themes = not _G.BB.Local.Themes
	else
		Themes = value
	end

	_G.BB.Local.Themes = Themes


	_G.BB.Remotes:WaitForChild("ThemeActivation"):Fire()

	if swordTrailLoop then
		swordTrailLoop:Disconnect()
	end

	if Themes then
		return
	end

	-- Run through every single player and toggle their trail off every render step
	swordTrailLoop = RunService.RenderStepped:Connect(function()
		for _, Plr in pairs (Players:GetPlayers()) do
			if Plr.Character and Plr ~= Players.LocalPlayer then
				local Sword = Plr.Character:FindFirstChild("Sword") or Plr.Backpack:FindFirstChild("Sword")
				if Sword then
					local Handle = Sword:FindFirstChild("Handle")
					if Handle then
						for _, Desc in pairs (Handle:GetDescendants()) do
							if table.find(Aesthetics.TrailTypes,Desc.ClassName) then
								game:GetService("Debris"):AddItem(Desc,0)
							end
						end
					end
				end
			end
		end
	end)

	return Themes
end


function Aesthetics:CreateSwordTrail(Handle, Creator, Server)

	local Reference,Theme = Aesthetics:GetThemeObject(Creator,"Sword")
	local Children = Reference:FindFirstChildWhichIsA("Part"):GetChildren()

	local AddedTrail = false
	for _,Trail in pairs(Children) do
		if not (Trail and Trail.ClassName and table.find(Aesthetics.TrailTypes,Trail.ClassName)) then
			--warn("No trail for",Creator,"with theme",Theme)
			continue
		end
		AddedTrail = true

		if Trail:IsA("Trail") then -- could also be a fire
			Trail = Trail:Clone()

			if Theme == "Team Color" then
				Handle.Color = Creator.TeamColor
			end

			if Theme == "Team Color" or Theme == "Normal" then
				Trail.Color = Aesthetics:CustomColorSequence(Handle.Color)
			end

			Trail.Attachment0 = Handle:WaitForChild("A0")
			Trail.Attachment1 = Handle:WaitForChild("A1")
			Trail.FaceCamera = false
			Trail.Enabled = false
			Trail.Name = Server and "ServerTrail" or "ClientTrail"
			Trail.Parent = Handle

		elseif table.find(Aesthetics.TrailTypes,Trail.ClassName) then

			for _,Child in pairs(Handle:GetChildren()) do

				if Child:IsA("Attachment")then

					Trail = Trail:Clone()
					Trail.Enabled = false
					Trail.Name = Server and "ServerTrail" or "ClientTrail"
					Trail.Parent = Child
				end
			end
		end
	end
	return AddedTrail
end


function Aesthetics:ToggleSwordTrail(handle,Activation)
	for _,Child in pairs(handle:GetDescendants()) do

		if table.find(Aesthetics.TrailTypes,Child.ClassName)then

			coroutine.wrap(function()

				if not Activation then
					task.wait(.1)
				end

				if not (Activation and not themesHighGraphics()) then --If HighGraphics == false, trail can be disabled but not enabled
					Child.Enabled = Activation
				end
			end)()
		end
	end
end

local function lowerVal(value)

	local a = math.max(value - 70, 0)
	local b = value * .5

	return math.min(a, b)
end

function Aesthetics:CustomColorSequence(baseColor3)

	local darkColor3 = Color3.new(
		lowerVal(baseColor3.r),
		lowerVal(baseColor3.g),
		lowerVal(baseColor3.b)
	)

	return ColorSequence.new(baseColor3, darkColor3)
end

function Aesthetics:ApplyWallColors(Brick, randomColor)
	if not Brick:IsA("Part") then
		return
	end

	local Creator = Brick.creator.Value
	local BrickIndex = tonumber(Brick.Name)
	local Folder, Theme = Aesthetics:GetThemeObject(Creator, "Trowel")
	local Part = Folder:FindFirstChildWhichIsA("Part")

	local Gradient = Folder:FindFirstChildWhichIsA("UIGradient")
	local RowNum = math.ceil(BrickIndex / _G.BB.Settings.Trowel.BricksPerRow)
	local Alpha = (RowNum - 1) / (_G.BB.Settings.Trowel.BricksPerColumn - 1)

	Brick.Transparency = Part.Transparency
	Brick.Reflectance = Part.Reflectance
	Brick.Material = Part.Material

	local RandomColor = Theme == "Normal" and _G.BB.Settings.Themes.RandomWallColors
	local Color = RandomColor and randomColor or self:GetColorAtTime(Gradient.Color, 1 - Alpha)

	Brick.Color = Theme == "Team Color" and Creator.TeamColor.Color or Color
end

function Aesthetics:HandleProjectileVisuals(Creator, Part, Theme)
	Aesthetics:AddTrail(Creator, Part)

	if not themesHighGraphics() then
		for _,v in pairs(Part:GetChildren()) do
			if v:IsA("Fire") or v:IsA("Sparkles") or v:IsA("ParticleEmitter") or v:IsA("Smoke") then
				v:Destroy()
			end
		end
	end

	for _,v in pairs(Part:GetChildren()) do
		if v:IsA("Texture") and (v:FindFirstChild("UOffsetSpeed") or v:FindFirstChild("VOffsetSpeed")) then
			animateTexture(v)
		end
	end
end

function Aesthetics:AddTrail(Creator, Part)
	if not themesHighGraphics() then --themesOn
		return
	end

	local Theme = self:DetermineTheme(Creator)

	if table.find(_G.BB.Settings.Themes.TrailsOmitted,Theme) then
		return
	end

	local Children = Part:GetChildren()
	for _,Trail in pairs(Children) do

		if not (Trail and Trail.ClassName and table.find(self.TrailTypes, Trail.ClassName)) then
			--warn("No trail for", Creator, "with theme", Theme)
			continue
		end

		Trail = Trail:Clone()

		if Theme == "Team Color" or Theme == "Normal" then
			Trail.Color = self:CustomColorSequence(Part.Color)
		end

		local Size = Part.Size.X/2

		if Trail:IsA("Trail") then -- could also be a fire
			local a0 = Instance.new("Attachment")
			a0.Name = "0"
			a0.Position = Vector3.new(-Size,0,0)
			a0.Parent = Part

			local a1 = Instance.new("Attachment")
			a1.Name = "1"
			a1.Position = -Vector3.new(-Size,0,0)
			a1.Parent = Part
			Trail.Attachment0 = a0
			Trail.Attachment1 = a1
		end

		Trail.Parent = Part
	end
end

function Aesthetics:PaintballColor(Hit, Color)
	local oldColor = Hit.Color

	local originalColor = Hit:FindFirstChild("OriginalColor")

	if originalColor then
		oldColor = originalColor.Value
	else
		local val = Instance.new("Color3Value")
		val.Name = "OriginalColor"
		val.Value = oldColor
		val.Parent = Hit
	end

	Hit.Color = Color


	local Mesh = Hit:FindFirstChildWhichIsA("FileMesh")
	local part = Hit:IsA("Part")
	local functionUponReset = nil

	local reset = _G.BB.Settings.PaintballGun.ColorResetTime > 0
	local timeUntilRemove = _G.BB.Settings.PaintballGun.ColorResetTime
	local timeUntilTween = timeUntilRemove - 3
	local tweenDuration = timeUntilRemove - timeUntilTween

	local plr = Players:GetPlayerFromCharacter(Hit.Parent)
	local hum = Hit.Parent:FindFirstChildWhichIsA("Humanoid")
	local hrp = Hit.Name == "HumanoidRootPart"

	-- Only a tween if _G.BB.Local.Themes is true.
	local tweenInfo = TweenInfo.new(
		tweenDuration, -- Time
		Enum.EasingStyle.Linear, -- EasingStyle
		Enum.EasingDirection.Out, -- EasingDirection
		0, -- RepeatCount (when less than zero the tween will loop indefinitely)
		false, -- Reverses (tween will reverse once reaching it's goal)
		0 -- DelayTime
	)

	if Hit:IsA("MeshPart") and not hum then
		local oldId = Hit.TextureID
		Hit.TextureID = ""

		functionUponReset = function()
			Hit.TextureID = oldId
		end

	elseif Mesh then
		local oldId = Mesh.TextureId
		Mesh.TextureId = ""

		functionUponReset = function()
			Mesh.TextureId = oldId
		end

	elseif hum and Hit.Name ~= "Head" then
		local guiArray = {}

		for _, gui in pairs (script.PaintballGUIs:GetChildren()) do

			local new = gui:Clone()
			new.Frame.BackgroundColor3 = Color

			local current = Hit:FindFirstChild(gui.Name)
			if current then
				current:Destroy()
			end

			new.Parent = Hit

			if reset then
				Debris:AddItem(new, timeUntilRemove)
			end

			table.insert(guiArray, new)
		end

		functionUponReset = function()
			if themesHighGraphics() then --themesOn
				for _, gui in pairs(guiArray) do

					local tween = TweenService:Create(gui.Frame, tweenInfo, {BackgroundTransparency = 1})
					tween:Play()
				end
			end
		end

	elseif Hit:IsA("UnionOperation") then
		Hit.UsePartColor = true
	end

	if reset then

		local stillReset = true
		local conn

		conn = Hit.Changed:Connect(function(property)
			if property == "Color" then
				if Hit.OriginalColor.Value ~= Hit.Color then
					stillReset = false
					if functionUponReset then
						functionUponReset()
					end
					conn:Disconnect()
				end
			end
		end)

		task.delay(timeUntilTween, function()
			if conn then
				conn:Disconnect()
			end

			if stillReset then
				if themesHighGraphics() then --themesOn
					local tween = TweenService:Create(Hit, tweenInfo, {Color = oldColor})
					tween:Play()
				else
					Hit.Color = oldColor
				end

				if functionUponReset then
					functionUponReset()
				end
			end
		end)
	end
end

function Aesthetics:ExplodePaintball(Paintball)

	Paintball.Anchored = true
	Paintball.Transparency = 1
	Paintball.CanCollide = false

	for _,v in pairs(Paintball:GetChildren()) do
		if v:IsA("ParticleEmitter") then
			v.Enabled = false
		end
	end

	for i = 1, math.random(2, 3) do
		local DebrisPart = Instance.new("Part")

		DebrisPart.CollisionGroup = "Paintballs"

		DebrisPart.Name = "PaintballDebris"
		DebrisPart.Size = Vector3.new(1,0.4,1)
		DebrisPart.BrickColor = Paintball.BrickColor

		-- yuck
		local RandomDistance = Vector3.new(
			math.random(-10, 10) / 10,
			math.random(0, 10) / 10,
			math.random(-10, 10) / 10
		).Unit * (math.random(10, 20) / 10)

		DebrisPart.CFrame = CFrame.lookAt(Paintball.Position + RandomDistance, Paintball.Position)

		DebrisPart.Velocity = 15 * RandomDistance
		DebrisPart.Parent = workspace
		Debris:AddItem(DebrisPart, math.random(3, 5))
	end

	Debris:AddItem(Paintball,1.5)
end

function Aesthetics:CreateCustomExplosion(Player, ExplosionPart)

	local HighGraphics = themesHighGraphics() --themesOn()

	local ParticleFolder, Theme = self:GetThemeObject(Player, "ExplosionParticles")
	local ExplosionFolder = ParticleFolder.Parent.Explosion

	local performantBase = ExplosionFolder:FindFirstChild("Base") or {
		Color = ExplosionPart.Color,
		Material = Enum.Material.SmoothPlastic,
		Transparency = .5,
	}

	local aestheticBase = ExplosionFolder:FindFirstChild("Theme") or {
		Color = ExplosionPart.Color,
		Material = Enum.Material.Neon,
		Transparency = .7,
	}

	local ExplosionBase = HighGraphics and aestheticBase or performantBase
	local baseTime = ExplosionFolder:FindFirstChild("BaseTime")
	local themeTime = ExplosionFolder:FindFirstChild("ThemeTime")

	local TIME = HighGraphics and (themeTime and themeTime.Value or .6)
		or (baseTime and baseTime.Value or .3)

	--[[local Fire = ExplosionPart:FindFirstChildWhichIsA("Fire")
	if Fire then
		Debris:AddItem(Fire, 0)
	end]]
	for _,v in pairs(ExplosionPart:GetChildren()) do
		if v:IsA("Fire") then
			v.Enabled = false
			Debris:AddItem(v, 1) --?
		elseif v:IsA("ParticleEmitter") then
			v.Enabled = false
			Debris:AddItem(v, v.Lifetime.Max) --?
		end
	end

	local radius = ExplosionPart.Size.X / 2
	ExplosionPart.Name = Player.Name.."'s Client Explosion"
	ExplosionPart.Shape = Enum.PartType.Ball
	ExplosionPart.Anchored = true
	ExplosionPart.CanCollide = false
	ExplosionPart.CastShadow = false
	ExplosionPart.Color = Theme == "Team Color" and Player.TeamColor.Color or ExplosionBase.Color
	ExplosionPart.Material = ExplosionBase.Material
	ExplosionPart.Transparency = ExplosionBase.Transparency
	ExplosionPart.BottomSurface = Enum.SurfaceType.Smooth
	ExplosionPart.TopSurface = Enum.SurfaceType.Smooth
	ExplosionPart.LeftSurface = Enum.SurfaceType.Smooth
	ExplosionPart.RightSurface = Enum.SurfaceType.Smooth
	ExplosionPart.FrontSurface = Enum.SurfaceType.Smooth
	ExplosionPart.BackSurface = Enum.SurfaceType.Smooth

	if HighGraphics then

		-- Either use default Roblox explosion or
		-- use custom explosions.

		if _G.BB.Settings.Themes.UseRobloxExplosions then

			ExplosionPart.Transparency = 1

			local Explosion = Instance.new("Explosion")
			Explosion.Name = Player.Name.."'s Aesthetic Explosion"
			Explosion.BlastPressure = 0
			Explosion.BlastRadius = radius
			Explosion.DestroyJointRadiusPercent = 0
			Explosion.ExplosionType = Enum.ExplosionType.NoCraters
			Explosion.Position = ExplosionPart.Position
			Explosion.Parent = workspace

			Debris:AddItem(Explosion, 5)
		else

			-- Prepare aesthetic objects
			for _,Object in pairs(ParticleFolder:GetChildren()) do

				local Object = Object:Clone()

				if Object:IsA("ParticleEmitter") then

					Object.Speed = NumberRange.new((Object.Speed.Min/2) * radius, (Object.Speed.Max / 2) * radius)
					Object.Rate = (Object.Rate / 2) * radius

					if Theme == "Team Color" then
						Object.Color = self:CustomColorSequence(ExplosionPart.Color)
					end

				elseif Object:IsA("Smoke") then

					Object.Size = radius * 2.2

				elseif Object:IsA("Folder") then

					local partDecals = Object:GetChildren()

					for _, Decal in pairs (partDecals) do
						Decal.Parent = ExplosionPart
					end
				end

				Object.Parent = ExplosionPart
			end

			-- Begin tweening
			local function PlayTweens()
				for _,Object in pairs (ExplosionPart:GetChildren()) do

					if Object:IsA("Decal") then
						TweenService:Create(Object, TweenInfo.new(TIME, Enum.EasingStyle.Linear), {Transparency = 1}):Play()

					elseif Object:IsA("Smoke") then
						TweenService:Create(Object,TweenInfo.new(TIME, Enum.EasingStyle.Linear), {Opacity = 0}):Play()

					elseif Object:IsA("ParticleEmitter") then
						Object:Emit(Object.Rate)
					end
				end
			end

			task.spawn(PlayTweens)

			TweenService:Create(ExplosionPart, TweenInfo.new(TIME, Enum.EasingStyle.Linear), {Transparency = 1}):Play()

		end
	end

	local function CleanUp()
		ExplosionPart.Size = Vector3.new(.01,.01,.01)
		ExplosionPart.Transparency = 1

		for _,Child in pairs(ExplosionPart:GetChildren()) do

			if Child:IsA("ParticleEmitter") or Child:IsA("Smoke") or Child:IsA("Decal") then
				Child:Destroy()
			end
		end
	end

	task.delay(TIME, CleanUp)
	Debris:AddItem(ExplosionPart, 5)
end

local function doOutline(Part, color)

	local Outline = Instance.new("SelectionBox")
	Outline.SurfaceColor3 = color
	Outline.Transparency = 1
	Outline.SurfaceTransparency=0
	Outline.Parent = Part
	Outline.Adornee = Outline.Parent

	local Tween = TweenService:Create(Outline, TweenInfo.new(1), {SurfaceTransparency=1})
	Tween:Play()

	local function RemoveOutline()
		Tween.Completed:Wait()
		Outline:Destroy()
	end

	coroutine.wrap(RemoveOutline)()
end

function Aesthetics:CreateVisual(hitPart, player, highlightEntireCharacter)
	if not _G.BB.Local.VisualHitIndicators then
		return
	end

	if not _G.BB.Local.Themes then
		return
	end

	if hitPart == nil or hitPart.Parent == nil then
		return
	end

	local color = self:GetThemeObject(player,"HitColor").Value

	if highlightEntireCharacter then
		for _,Part in pairs(hitPart.Parent:GetChildren()) do
			if Part:IsA("Part") and Part.Name~="HumanoidRootPart" then
				doOutline(Part,color)
			end
		end
	else
		doOutline(hitPart,color)
	end
end

function Aesthetics:RegisterClientEvents()
	local localPlayer = game:GetService("Players").LocalPlayer
	local hitRemote = _G.BB.Remotes.Hit

	hitRemote.OnClientEvent:connect(function(plr, hit, expl)
		if plr ~= localPlayer then
			self:CreateVisual(hit,plr,expl)
		end
	end)
end

return Aesthetics]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Folder" referent="RBX2D914C4901A7429C829234284C16666B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">PaintballGUIs</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="SurfaceGui" referent="RBX7AC4FCE181E04650882675FBEE7D774A">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">5</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Front</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBXA828A719E78E439684156FA181CBA18F">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="SurfaceGui" referent="RBX6B51C9C236D34CFEB1ECD75319AFD6AB">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">2</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Back</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBX4F95331B34D14B9892B558BCEF7F00DE">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="SurfaceGui" referent="RBX97833177319E4E658D7F2A1E5D0B98EE">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">4</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Bottom</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBX7B6EBE5647A643A0AE10001470B40434">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="SurfaceGui" referent="RBX174D15DDA981438D9FDF562BDA9F6E74">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">0</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Right</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBX5B1C95D3007F46D59F584A4371FDBDAF">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="SurfaceGui" referent="RBX042388902AEA40BE87A0DE5A95C2F06C">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">1</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Top</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBX304F93EC9E894425BAF6FADD1DD0C3D8">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
							<Item class="SurfaceGui" referent="RBX44FB9DB168D04F108A4EE8C35F7AD58B">
								<Properties>
									<bool name="Active">true</bool>
									<Ref name="Adornee">null</Ref>
									<bool name="AlwaysOnTop">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<float name="Brightness">1</float>
									<Vector2 name="CanvasSize">
										<X>800</X>
										<Y>600</Y>
									</Vector2>
									<bool name="ClipsDescendants">true</bool>
									<bool name="Enabled">true</bool>
									<token name="Face">3</token>
									<float name="LightInfluence">1</float>
									<string name="Name">Left</string>
									<float name="PixelsPerStud">50</float>
									<bool name="ResetOnSpawn">true</bool>
									<Ref name="RootLocalizationTable">null</Ref>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<token name="SizingMode">1</token>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="ToolPunchThroughDistance">0</float>
									<token name="ZIndexBehavior">1</token>
									<float name="ZOffset">0</float>
								</Properties>
								<Item class="Frame" referent="RBX2A198CB2DBD946BE8A0539381A552FEC">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0</X>
											<Y>0</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">0</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">1</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<int name="LayoutOrder">0</int>
										<string name="Name">Frame</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0</XS>
											<XO>0</XO>
											<YS>0</YS>
											<YO>0</YO>
										</UDim2>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>1</XS>
											<XO>0</XO>
											<YS>1</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<token name="Style">0</token>
										<BinaryString name="Tags"></BinaryString>
										<bool name="Visible">true</bool>
										<int name="ZIndex">5</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXCBBC1869E64549788E223AD53B1F1A63">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Kill</string>
							<string name="ScriptGuid">{35E43F6D-9C0B-41AB-8132-5B5D236AAA03}</string>
							<ProtectedString name="Source"><![CDATA[local Kill = {}
local Debris = game:GetService("Debris")

local function findFiltered(name)
	return table.find(_G.BB.Settings.TeamsFiltered, name)
end

local callbacks = {}

local Tags = {
	Rocket = "rbxasset://Textures/Rocket.png";
	Bomb = "rbxasset://Textures/Bomb.png";
	Sword = "rbxasset://Textures/Sword128.png";
	PaintballGun = "rbxasset://Textures/PaintballIcon.png";
	Slingshot = "rbxasset://Textures/Slingshot.png";
	Superball = "rbxasset://Textures/Superball.png";
}

function Kill:CanDamage(player, hitHumanoid, SelfKill, DeadException)
	--print(2.7, hitHumanoid:GetFullName())
	if player:FindFirstChild("CanDamage") and player.CanDamage.Value == false then
		return false
	end

	-- Must have an active character
	local character = player.Character
	if not character then
		return false;
	end

	-- Must have a humanoid
	local humanoid = character:FindFirstChildWhichIsA("Humanoid")
	if not humanoid then
		return false
	end

	-- Hit player must have a character/char can't be nil
	local hitCharacter = hitHumanoid.Parent
	if not hitCharacter then
		return false
	end

	local otherPlr = game.Players:GetPlayerFromCharacter(hitCharacter)

	-- Already dead or godded
	if (hitHumanoid.Health <= 0) and not DeadException then
		return false
	end

	-- Player has a forcefield.
	if hitCharacter:FindFirstChildWhichIsA("ForceField",true) then
		return false
	end

	---- Manipulated humanoid, could be godded
	if not _G.BB.Settings.AllowHumanoidChanges then
		if (((humanoid.MaxHealth ~= 100) or (humanoid.WalkSpeed~=16) or humanoid.JumpPower~=50))
			or character:FindFirstChildWhichIsA("ForceField",true) then
			return false
		end
	end

	-- Died, projectile is roaming around though
	if (humanoid.Health <= 0) and not _G.BB.Settings.WeaponsDamageAfterDeath then
		--print("Can't damage after death")
		return false
	end

	-- NPC
	-- The only reason this causes no weird behaviour is because all
	-- conditions after that are reserved for players (teams, etc).
	-- i.e. an afterlife check after this condition would yield unintended results.
	if not otherPlr then
		return true
	end

	-- Callback functions available to add after module loads
	for _, func in ipairs(callbacks) do
		if not func(player, otherPlr) then
			return false
		end
	end

	-- Self kill
	if player == otherPlr then
		return SelfKill
	end

	local t1 = player.TeamColor
	local t2 = otherPlr.TeamColor
	local t1Name
	local t2Name

	-- Firing player could be a spectator and shouldn't deal damage
	if not player.Neutral and player.Team ~= nil  then
		t1Name = player.Team.Name
		if _G.BB.Settings.SpectatorTeamActive
			and t1Name == _G.BB.Settings.SpectatorTeamName then
			return false
		end
	end

	-- Hit player could be a spectator and shouldn't take damage
	if not otherPlr.Neutral and otherPlr.Team ~= nil then
		t2Name = otherPlr.Team.Name
		if _G.BB.Settings.SpectatorTeamActive
			and t2Name == _G.BB.Settings.SpectatorTeamName then
			return false
		end
	end

	-- For FFA scenarios
	if player.Neutral or otherPlr.Neutral then
		return true
	end

	-- Team kill
	if t1 == t2 then
		-- Ensure they are not on a "neutral team"
		if _G.BB.Settings.IgnoreCertainTeams then
			return findFiltered(t1Name) or findFiltered(t2Name)
		end

		return _G.BB.Settings.TeamKill
	end

	return true
end

function Kill:TagHumanoid(player, humanoid, obj, projectileType)
	local currentTag = humanoid:FindFirstChild("creator");
	local tag = obj and obj:FindFirstChild("creator")
	local Lifetime = _G.BB.Settings.TagLifetime

	if currentTag and currentTag:IsA("ObjectValue") then
		pcall(game.Destroy, currentTag)
	end

	local NewTag = tag and tag:Clone() or Instance.new("ObjectValue")
	NewTag.Name = "creator"
	NewTag.Value = player
	NewTag:SetAttribute("WeaponImageId", Tags[projectileType])
	NewTag:SetAttribute("ProjectileType", projectileType)

	local FolderRef = Instance.new("ObjectValue")
	FolderRef.Name = "FolderRef"
	FolderRef.Value = obj
	FolderRef.Parent = NewTag
	--NewTag:SetAttribute("WeaponType", projectileType)

	local weapon = player:WaitForChild("Backpack"):FindFirstChild(projectileType) or player.Character:FindFirstChild(projectileType)

	local newWeaponTag = NewTag:FindFirstChild("Weapon") or Instance.new("ObjectValue")
	newWeaponTag.Name = "Weapon"
	newWeaponTag.Value = weapon
	newWeaponTag.Parent = NewTag

	local newWeaponStringTag = NewTag:FindFirstChild("WeaponType") or Instance.new("StringValue")
	newWeaponStringTag.Name = "WeaponType"
	newWeaponStringTag.Value = projectileType
	newWeaponStringTag.Parent = NewTag

	--[[
	creator.Value = Player object
	creator.Weapon.Value = Tool object
	creator.WeaponType.Value = String of weapon type
	]]

	NewTag.Parent = humanoid

	--print(
	--	"\n PATH:", NewTag:GetFullName(),
	--	"\n VALUE:", NewTag.Value,
	--	"\n WEAPON OBJECT:", NewTag.Weapon.Value,
	--	"\n WEAPON STRING:", NewTag.WeaponType.Value
	--)

	Debris:AddItem(NewTag, Lifetime)
end

function Kill:AddDamageRule(func)
	local index = table.find(callbacks, func)
	if index then
		warn("Function rule already exists.")
		return
	end
	table.insert(callbacks, func)
end

function Kill:RemoveDamageRule(func)
	local index = table.find(callbacks, func)
	if index == nil then
		warn("No damage rule found for input function.")
		return
	end
	table.remove(callbacks, index)
end


return Kill]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX532A38FF952E4EDE84154900B2D71084">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Explosion</string>
							<string name="ScriptGuid">{EBCB1566-92DE-4129-B2AD-3848F2637069}</string>
							<ProtectedString name="Source"><![CDATA[local Explosion = {}

local Players = game:GetService("Players")
local repStorage = game:GetService("ReplicatedStorage")
local Collections = game:GetService("CollectionService")

local Kill = require(_G.BB.Modules:WaitForChild("Kill"))
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))
local PSPV = require(_G.BB.Modules.Security:WaitForChild("PSPV"))

local WeldTracker = require(script:WaitForChild("WeldTracker"))
local Force = require(script:WaitForChild("Force"))

local ExplosionCallback = require(_G.BB.Modules.Callbacks.ExplodeMaster)
local BreakJointsCallback = require(_G.BB.Modules.Callbacks.BreakJoints)

local hitRemote = _G.BB.Remotes:WaitForChild("Hit") -- Hit indication
local explodeRemote = _G.BB.Remotes:WaitForChild("Explosion")

local Settings = _G.BB.Settings

local Debris = game:GetService("Debris")

local Limbs = {
	"LeftFoot",
	"LeftLowerLeg",
	"LeftUpperLeg",

	"RightFoot",
	"RightLowerLeg",
	"RightUpperLeg",

	"LeftHand",
	"LeftLowerArm",
	"LeftUpperArm",

	"Left Arm",
	"Right Arm",
	"Left Leg"
}

local DeadlyLimbs = {
	"RightHand",
	"RightLowerArm",
	"RightUpperArm",

	"HumanoidRootPart",
	"UpperTorso",
	"LowerTorso",

	"Right Arm",
	"Torso",

	"Head"
}




local function verifyTableElement(Table,Element)
	if not table.find(Table,Element) then
		table.insert(Table,Element)
		return true
	else
		return false
	end
end


local function isDeadlyLimb(part)
	return table.find(DeadlyLimbs,part.Name) ~= nil
end

local function canFlingPart(Part)
	local Model = Part:FindFirstAncestorWhichIsA("Model")
	return not (
		Part.Anchored
			or Part:FindFirstAncestorWhichIsA("Tool")
			or Part:FindFirstAncestorWhichIsA("Accessory")
			or Part:FindFirstChild("PhysicsFolder")
			or (Model and Model:FindFirstChildWhichIsA("Humanoid"))

	)
end

local function ClientFling(Part, Humanoid, Position, Explosion)
	-- Do not fling self if setting is off.
	local Mass = Part:GetMass()
	local LocalPlayer = Players.LocalPlayer
	local HitPlayer = Humanoid and Players:GetPlayerFromCharacter(Humanoid.Parent)
	local Creator = Explosion.creator.Value
	local ProjectileType = Explosion.ProjectileType.Value
	local Damage = Settings[ProjectileType].Damage
	local SelfDamage = Settings[ProjectileType].SelfDamage
	local Radius = Settings[ProjectileType].Radius
	local ExplosionForce = Settings[ProjectileType].ExplosionForce
	local ForceFactorOnSelf = Settings.Explosions.ForceFactorOnSelf

	local IsBomb = Part.Name == LocalPlayer.Name.."'s Bomb"
	if (HitPlayer == Creator and Creator == LocalPlayer and Settings.Explosions.FlingYou) then

		Force:ExertDirectionally(Position, Part, Radius, ExplosionForce * ForceFactorOnSelf, Mass)

	elseif (IsBomb and Settings.Explosions.FlingBombs) then

		Force:ExertDirectionally(Position,Part,Radius,ExplosionForce,Mass)

	elseif not IsBomb and canFlingPart(Part) and Settings.Explosions.FlingParts then

		--If you fired the rocket/bomb, apply impulse to all debris.
		--You don't always netown it, but it shouldn't do anything in that case.
		for _, Weld in pairs(WeldTracker:GetWeldsByPart(Part)) do
			if BreakJointsCallback(Weld,Creator) then
				Weld:Destroy()
			end
		end

		Force:ExertLocally(Position, Part, Radius, ExplosionForce, Mass)
	end
end

-- Used in rocket and bomb client scripts
function Explosion:HandleHitDetection(Explosion, HitPart, RocketPosition, DirectHitCFrames)
	local player = Players.LocalPlayer
	local localHum = player.Character.Humanoid

	local ProjectileType = Explosion.ProjectileType.Value
	local Damage = Settings[ProjectileType].Damage
	local SelfDamage = Settings[ProjectileType].SelfDamage

	-- Grab parts
	local TempConnection = Explosion.Touched:Connect(function() end)
	local TouchingParts = Explosion:GetTouchingParts()
	TempConnection:Disconnect()

	if HitPart and not table.find(TouchingParts,HitPart) then
		table.insert(TouchingParts,HitPart)
	end

	Explosion.Active.Value = false -- Stop sending updates

	-- Rocket sends new distance, bomb sends cframe
	local ExplData = Explosion.Position
	if ProjectileType == "Rocket" then
		ExplData = (Explosion.Position - Explosion.Origin.Value.Position).Magnitude
	end

	-- Determine what sounds to play, grab character positional data, + client dmg
	local HitCharacterCFrames = {}
	local Humanoids = {}
	local Killed = false
	local Blocked = false
	for i,Part in pairs(TouchingParts) do

		if ExplosionCallback(Part, Explosion.creator.Value) == false then
			continue
		end

		local Humanoid = Part.Parent:FindFirstChildWhichIsA("Humanoid")
		local position = RocketPosition and RocketPosition or Explosion.Position

		if Humanoid then
			if Kill:CanDamage(player,Humanoid,SelfDamage) then

				if not HitCharacterCFrames[Humanoid.Parent.Name] then
					HitCharacterCFrames[Humanoid.Parent.Name] = PSPV:CreateCharacterCFrameTable(Humanoid)
				end

				if not Settings.Explosions.LimbRemoval or isDeadlyLimb(Part) then
					if verifyTableElement(Humanoids, Humanoid) then

						-- Instantaneous damage for firer
						if Settings.InstantDamage then
							if ((Humanoid.Health-Damage)<=0) then
								if (Humanoid.Health == Humanoid.MaxHealth) then --Fix health not updating if target player is full health
									task.delay(3, function() if math.abs(Humanoid.Health - .1) < 1e6 then Humanoid.Health = Humanoid.MaxHealth end end)
								end
								Humanoid.Health = .1
							else
								Humanoid:TakeDamage(Damage)
							end
						end

						Killed = ((Humanoid.Health-Damage)<=0) and not player.Character:IsAncestorOf(Humanoid)

						Aesthetics:CreateVisual(Humanoid.Parent.PrimaryPart,player,true)
					end
				end
			else
				Blocked = not player.Character:IsAncestorOf(Humanoid)
			end
		end

		ClientFling(Part, Humanoid, position, Explosion)
	end

	if not Settings.Security.PSPV then
		HitCharacterCFrames = {}
	end

	-- Play sound
	if Killed then
		if _G.BB.Local.Hit~="None" then
			_G.BB.ClientObjects.Sounds.Hit[_G.BB.Local.Hit]:Play()
		end
	elseif Blocked then
		if _G.BB.Local.BlockedHit ~="None" then
			_G.BB.ClientObjects.Sounds.Blocked[_G.BB.Local.BlockedHit]:Play()
		end
	end

	local ID_array = {Explosion.ProjectileType.Value, Explosion.Count.Value}

	explodeRemote:FireServer(
		ID_array,
		ExplData,
		HitPart,
		TouchingParts,
		DirectHitCFrames,
		HitCharacterCFrames
	)

end

-- Used in client Extrapolation module
function Explosion:ExtrapolateExplosion(ExtrapolatedProjectile, PhysicsFolder)

	PhysicsFolder.Exploded.Value = true

	local Radius = _G.BB.Settings[PhysicsFolder.ProjectileType.Value].Radius
	ExtrapolatedProjectile.Size = Vector3.new(Radius*2,Radius*2,Radius*2)

	local ProjectileType = PhysicsFolder.ProjectileType.Value
	local Damage = Settings[ProjectileType].Damage
	local SelfDamage = Settings[ProjectileType].SelfDamage

	local SoundName

	if ProjectileType == "Bomb" then
		SoundName = _G.BB.Local.BombExplosion

		ExtrapolatedProjectile.Position = PhysicsFolder.LatestPosition.Value
		ExtrapolatedProjectile.Tick:Destroy()
	elseif ProjectileType == "Rocket" then
		SoundName = _G.BB.Local.RocketExplosion

		ExtrapolatedProjectile.CFrame = (
			PhysicsFolder.Origin.Value
				+ (PhysicsFolder.Origin.Value.lookVector
					* PhysicsFolder.LatestDistance.Value
				)
		)
		ExtrapolatedProjectile.Swoosh:Destroy()
	end

	-- Client explosion sound
	local Sounds = ExtrapolatedProjectile:WaitForChild("Boom")
	local Sound = Sounds:FindFirstChild(SoundName)
	Sound.Parent = ExtrapolatedProjectile
	Sound:Play()

	Aesthetics:CreateCustomExplosion(PhysicsFolder.creator.Value, ExtrapolatedProjectile)

	local connection = ExtrapolatedProjectile.Touched:Connect(function() end)
	local CollectedParts = ExtrapolatedProjectile:GetTouchingParts()
	connection:Disconnect()

	for _,Part in pairs (CollectedParts) do

		if ExplosionCallback(Part, PhysicsFolder.creator.Value) == false then
			continue
		end

		local CharacterModel = Part:FindFirstAncestorOfClass("Model")
		local Humanoid = CharacterModel and CharacterModel:FindFirstChildOfClass("Humanoid")

		ClientFling(Part,Humanoid,ExtrapolatedProjectile.Position,PhysicsFolder)
	end

	Debris:AddItem(ExtrapolatedProjectile,5)
end

function Explosion:HandleHumanoid(PhysicsFolder, Humanoid, CharPartArray, ExplosionPosition)
	-- When LimbRemoval is on, only hits to the torso/hrp, head, and right
	-- arm deal certain damage.

	local ProjectileType = PhysicsFolder.ProjectileType.Value
	local Damage = Settings[ProjectileType].Damage
	local SelfDamage = Settings[ProjectileType].SelfDamage
	local Radius = Settings[ProjectileType].Radius
	local ExplosionForce = Settings[ProjectileType].ExplosionForce

	local Player = PhysicsFolder.creator.Value
	local FirerHumanoid = Player.Character and Player.Character:FindFirstChild("Humanoid")
	local HitPlayer = Players:GetPlayerFromCharacter(Humanoid.Parent)
	local Damaged = false

	for _, Part in pairs(CharPartArray) do
		if Kill:CanDamage(Player, Humanoid, SelfDamage) then

			if not Settings.Explosions.LimbRemoval or isDeadlyLimb(Part)then
				if not Damaged then
					Damaged = true
					Kill:TagHumanoid(Player, Humanoid, PhysicsFolder, ProjectileType)
					Humanoid:TakeDamage(Settings[ProjectileType].Damage)
					hitRemote:FireAllClients(Player,Humanoid.Parent.PrimaryPart, true)
				end

			elseif Settings.Explosions.LimbRemoval then
				-- Break limb off (Try to prevent wild fling issue)
				Part:BreakJoints()
				Part.Massless = true
				Part.Parent = workspace
			end
		end

		if  _G.BB.Settings.Explosions.FlingEnemies then
			if Kill:CanDamage(Player, Humanoid, false, true) then

				--print("Flinging hum:",Part,Humanoid.Parent)
				Force:ExertDirectionally(ExplosionPosition, Part, Radius, ExplosionForce, Part:GetMass())
			end
		end
	end
end

function Explosion:BlowUpPart(PhysicsFolder, Part, ExplosionPosition)
	local Humanoid = Part.Parent:FindFirstChildWhichIsA("Humanoid") or Part.Parent.Parent:FindFirstChildWhichIsA("Humanoid")
	local Character = Humanoid and Humanoid.Parent
	local Player = Players:GetPlayerFromCharacter(Part.Parent)
	local ProjectileType = PhysicsFolder.ProjectileType.Value
	local Creator = PhysicsFolder.creator.Value

	if Collections:HasTag(Part, _G.BB.Settings.Explosions.ExclusionTag) then
		return
	end

	if Part.Parent:IsA("Tool") then
		return
	elseif Part.Parent:IsA("Accessory") and Humanoid then
		if not Kill:CanDamage(Creator, Humanoid, false) then
			return
		end
	end

	if Part.Anchored then return end

	-- Teammates trowel's are protected, unless setting is off
	if Collections:HasTag(Part,"TrowelWallBrick") and Settings.Explosions.ProtectTeammateWalls then
		local OwnerValue = Part.creator.Value
		if OwnerValue.Character then
			local ownerHumanoid = OwnerValue.Character:FindFirstChild("Humanoid")
			if ownerHumanoid and not Kill:CanDamage(PhysicsFolder.creator.Value,ownerHumanoid,true) then
				return
			end
		end
	end

	local firingPlayer = PhysicsFolder.creator.Value
	local PartJointsBroken = false

	-- Break joints assuming settings is on, and humanoid is either dead,
	-- nil, or LR is on
	local destroyed = 0
	local welds = WeldTracker:GetWeldsByPart(Part)
	for _, Weld in pairs(welds) do
		if BreakJointsCallback(Weld, Creator) then
			Weld:Destroy()
			destroyed += 1
		end
	end

	-- Ensure mass is below threshold & fling
	local Mass = Part:GetMass()

	if Settings.Explosions.FlingParts and destroyed == #welds then
		--print("Flinging part:",Part,Part.Parent)
		Force:Exert(ExplosionPosition,Part,Settings[ProjectileType].Radius,Settings[ProjectileType].ExplosionForce ,Mass)
	end

	-- Destroy
	if Mass < Settings[ProjectileType].MaxMassToDestroy
		and not Part:IsA("SpawnLocation")
		and not Humanoid
		and (Settings.Explosions.DestroyParts
			or (
				Collections:HasTag(Part,"TrowelWallBrick")
				and Settings.Explosions.DestroyTrowelWallsOverride
			)
		) then
		Part:Destroy()
	end

	if Settings.Explosions.DebrisTime > 0 then
		Debris:AddItem(Part, Settings.Explosions.DebrisTime)
	end
end

-- Server
function Explosion:RegisterEvents()
	--[[
		When the explosion is from a rocket, "ExplPosData" is
		the distance from the origin.

		Otherwise if explosion is from a bomb, "ExplPosData" is
		the client's last seen cframe.
	]]

	local Security = require(_G.BB.Modules.Security)

	explodeRemote.OnServerEvent:Connect(function(
		playerFired,
		ID_array,
		ExplPosData,
		HitPart,
		Parts,
		DirectHitCharacterData,
		RadiusCharacterData
	)

		local PhysicsFolder = Security:GetPhysicsFolder(ID_array, playerFired, true)
		if not PhysicsFolder then
			return
		end

		local ProjectileType = PhysicsFolder:FindFirstChild("ProjectileType")
		local Creator = PhysicsFolder:FindFirstChild("creator")

		local ExplosionPosition = ExplPosData
		local RocketCFrame

		if ProjectileType.Value == "Rocket" then
			local Origin = PhysicsFolder.Origin.Value
			local ExplosionCFrame = (Origin) and (Origin + Origin.lookVector * ExplPosData)

			RocketCFrame = CFrame.new(ExplosionCFrame.Position - 2*ExplosionCFrame.LookVector, ExplosionCFrame.Position)
			ExplosionPosition = ExplosionCFrame.Position
		end

		local approvedHumanoids, approvedParts = Security:ApproveExplode(
			PhysicsFolder,
			ExplPosData,
			Parts,
			HitPart,
			DirectHitCharacterData,
			RadiusCharacterData,
			RocketCFrame
		)

		if not approvedHumanoids or not approvedParts then
			return
		end

		-- Rocket sends distance as its final update. Bomb send position.
		local value = ProjectileType.Value == "Bomb" and "LatestPosition" or "LatestDistance"
		PhysicsFolder[value].Value = ExplPosData

		-- Tell clients that this projectile has exploded
		PhysicsFolder.Active.Value = false

		-- Blow up only the approved parts
		for _, Part in pairs(approvedParts) do
			local function BlowUpPart()
				self:BlowUpPart(PhysicsFolder, Part, ExplosionPosition)
			end
			task.spawn(BlowUpPart)
		end

		for Humanoid, CharPartArray in pairs(approvedHumanoids) do
			local function BlowUpPlayer()
				self:HandleHumanoid(PhysicsFolder, Humanoid, CharPartArray, ExplosionPosition)
			end
			task.spawn(BlowUpPlayer)
		end

		-- Remove explosion
		task.delay(2, function() PhysicsFolder:Destroy() end)

		if Settings.Bomb.TeleportOnExplode
			and not Settings.Bomb.SelfDamage
			and ProjectileType.Value == "Bomb" then
			Creator.Value.Character:MoveTo(ExplosionPosition)
		end
	end)
end

return Explosion]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXC5E9B5D40ADA4E77AAE1380A31D20CEF">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Force</string>
								<string name="ScriptGuid">{4AB84363-CFD8-4F37-8BCA-2B9EF0623CE6}</string>
								<ProtectedString name="Source"><![CDATA[local Force = {}
local Collections = game:GetService("CollectionService")
local Debris = game:GetService("Debris")

local function getExplosionImpulseValues(ExplosionPosition, Part, BlastRadius, Pressure, Mass)
	--This technically encompasses limbs and accessories...
	--...But isn't there a cleaner way?
	local IsInCharacter = (
		(Part.Parent:FindFirstChildWhichIsA("Humanoid")
		) or
			(Part.Parent.Parent:FindFirstChildWhichIsA("Humanoid")
			)
	)

	local delta = Part.Position - ExplosionPosition
	local normal = (delta == Vector3.new(0,0,0))
		and Vector3.new(0,1,0)
		or  delta.unit

	local r = delta.magnitude
	local radius = Part.Size.magnitude / 2
	local surfaceArea = radius * radius
	local impulse = normal * Pressure * surfaceArea * (1.0 / 4560.0)

	local frac, mass
	if IsInCharacter then
		frac = 2-- - math.max(0, math.min(1, (r-2)/BlastRadius))
		mass = 0
		local parts = Part:GetConnectedParts(true)
		for _,p in pairs(parts) do
			mass += p.Mass
		end
	else
		frac = 1
		mass = Part.Mass
	end

	local currentVelocity = Part.Velocity
	local deltaVelocity = impulse / mass
	local accelNeeded = workspace.Gravity

	local rotImpulse = impulse * 0.5 * radius
	local currentRotVelocity = Part.RotVelocity
	local momentOfInertia = (2 * Part:GetMass() * radius * radius / 5) -- moment of inertia = 2/5*m*r^2 (assuming roughly spherical)
	local deltaRotVelocity = rotImpulse / momentOfInertia
	local torqueNeeded = 20 * momentOfInertia

	accelNeeded = accelNeeded * 10 * frac
	torqueNeeded = torqueNeeded * 10 * frac

	return deltaVelocity, accelNeeded, deltaRotVelocity, torqueNeeded
end

--https://devforum.roblox.com/t/explosion-visible-true-false/6170/31
function Force:Exert(ExplosionPosition, Part, BlastRadius, Pressure, Mass)

	if Part and workspace:IsAncestorOf(Part) and (Part:GetNetworkOwner() == nil) then

		local dV, accel, dRV, torque = getExplosionImpulseValues(
			ExplosionPosition, Part, BlastRadius, Pressure, Mass
		)

		local dt = 0.1

		local force = accel * Part.Mass
		local bodyV = Instance.new('BodyVelocity')
		bodyV.velocity = Part.Velocity + dV
		bodyV.maxForce = Vector3.new(force, force, force)
		Collections:AddTag(bodyV,"BodyMoverServer")
		bodyV.Parent = Part
		Debris:AddItem(bodyV, dt)

		local rot = Instance.new('BodyAngularVelocity')
		rot.Name = "BodyAngularVelocityServer"
		rot.angularvelocity = Part.RotVelocity + dRV
		rot.maxTorque = Vector3.new(torque, torque, torque)
		Collections:AddTag(rot,"BodyMoverServer")
		rot.Parent = Part
		Debris:AddItem(rot, dt)
	end
end

-- No rotational force
function Force:ExertDirectionally(ExplosionPosition, Part, BlastRadius, Pressure, Mass)
	if Part then
		local dV, accel, dRV, torque = getExplosionImpulseValues(
			ExplosionPosition, Part, BlastRadius, Pressure, Mass
		)
		local dt = 0.1

		--Boost for player and bomb
		dV *= 1.5

		local IsInCharacter = (
			(Part.Parent:FindFirstChildWhichIsA("Humanoid")
			) or
				(Part.Parent.Parent:FindFirstChildWhichIsA("Humanoid")
				)
		)

		if IsInCharacter then
			local mul = 1.5
			dV = Vector3.new(dV.X * mul, dV.Y, dV.Z * mul)
		end


		--[[
		local maxSpeed = math.sqrt(3*accel^2) * dt
		print(dV.Magnitude, maxSpeed)
		if dV.Magnitude > maxSpeed then
			dV = dV.Unit * maxSpeed
		end
		]]

		local dx, dy, dz = dV.X, dV.Y, dV.Z

		--[[
		local maxSpeed = accel * dt

		if dx > maxSpeed then dx = maxSpeed end
		if dx < -maxSpeed then dx = -maxSpeed end
		if dy > maxSpeed then dy = maxSpeed end
		if dy < -maxSpeed then dy = -maxSpeed end
		if dz > maxSpeed then dz = maxSpeed end
		if dz < -maxSpeed then dz = -maxSpeed end
		]]


		local maxSpeed = accel * dt
		local maxSpeedXZ = maxSpeed * 1.5

		if dx > maxSpeedXZ then dx = maxSpeedXZ end
		if dx < -maxSpeedXZ then dx = -maxSpeedXZ end
		if dy > maxSpeed then dy = maxSpeed end
		if dy < -maxSpeed then dy = -maxSpeed end
		if dz > maxSpeedXZ then dz = maxSpeedXZ end
		if dz < -maxSpeedXZ then dz = -maxSpeedXZ end

		dV = Vector3.new(dx, dy, dz)

		Part.Velocity = Part.Velocity + dV

	end
end

function Force:ExertLocally(ExplosionPosition,Part, BlastRadius, Pressure,Mass)
	if Part then
		local dV, accel, dRV, torque = getExplosionImpulseValues(
			ExplosionPosition, Part, BlastRadius, Pressure, Mass
		)

		local force = accel * Part.Mass
		--Get rid of bodymover later
		local bodyV = Instance.new('BodyVelocity', Part)
		bodyV.velocity = Part.Velocity + dV
		bodyV.maxForce = Vector3.new(force, force, force)
		game.Debris:AddItem(bodyV, 0.1)

		--Get rid of bodymover later
		local rot = Instance.new('BodyAngularVelocity', Part)
		rot.angularvelocity = Part.RotVelocity + dRV
		rot.maxTorque = Vector3.new(torque, torque, torque)
		game.Debris:AddItem(rot, 0.1)
	end
end


return Force
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXECD10284380A4E9B8D5481332248D3E1">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">WeldTracker</string>
								<string name="ScriptGuid">{50941870-3C03-4E16-B4FD-BAF76C078F0F}</string>
								<ProtectedString name="Source"><![CDATA[-- Thegameboy

local WeldTracker = {}
WeldTracker.__index = WeldTracker

function WeldTracker.new(root)
	return setmetatable({
		root = root;
		didStart = false;
		activeWelds = {};
		weldsByPart = {};
	}, WeldTracker)
end

function WeldTracker:Start()
	if self.didStart then return end
	self.didStart = true

	local activeWelds = self.activeWelds
	local weldsByPart = self.weldsByPart
	local weldToCons = {}

	local function onDescendantAdded(i)
		local class = i.ClassName
		if class ~= "WeldConstraint" and class ~= "Weld" and class ~= "Snap" then return end
		activeWelds[i] = true

		local part0 = i.Part0
		local function onPart0Changed()
			if weldsByPart[part0] then
				weldsByPart[part0][i] = nil
			end

			local newPart = i.Part0
			if newPart then
				weldsByPart[newPart] = weldsByPart[newPart] or {}
				weldsByPart[newPart][i] = true
			end
			part0 = newPart
		end

		local part1 = i.Part1
		local function onPart1Changed()
			if weldsByPart[part1] then
				weldsByPart[part1][i] = nil
			end

			local newPart = i.Part1
			if newPart then
				weldsByPart[newPart] = weldsByPart[newPart] or {}
				weldsByPart[newPart][i] = true
			end
			part1 = newPart
		end

		local cons = {}
		weldToCons[i] = cons

		table.insert(cons, i:GetPropertyChangedSignal("Part0"):Connect(onPart0Changed))
		table.insert(cons, i:GetPropertyChangedSignal("Part1"):Connect(onPart1Changed))
		onPart0Changed()
		onPart1Changed()
	end

	self.root.DescendantAdded:Connect(onDescendantAdded)
	for _, i in pairs(self.root:GetDescendants()) do
		onDescendantAdded(i)
	end

	self.root.DescendantRemoving:Connect(function(i)
		local class = i.ClassName
		if class ~= "WeldConstraint" and class ~= "Weld" and class ~= "Snap" then return end
		activeWelds[i] = nil

		local part0 = i.Part0
		if part0 then
			local welds = weldsByPart[part0]
			welds[i] = nil
		end

		local part1 = i.Part1
		if part1 then
			local welds = weldsByPart[part1]
			welds[i] = nil
		end

		for _, con in pairs(weldToCons[i]) do
			con:Disconnect()
		end
		weldToCons[i] = nil
	end)
end

function WeldTracker:GetWelds()
	return self.activeWelds
end

function WeldTracker:GetWeldsByPart(part)
	local entry = self.weldsByPart[part]
	if entry == nil then
		return {}
	end

	local array = {}
	for weld in pairs(entry) do
		table.insert(array, weld)
	end

	return array
end

local singleton = WeldTracker.new(workspace)
singleton:Start()
return singleton]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBX4A71B3696D794F769AA8663AD55DC574">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Security</string>
							<string name="ScriptGuid">{DBD30B76-F65F-4D1F-B15E-11DBE38B53BF}</string>
							<ProtectedString name="Source"><![CDATA[local Security = {}

local Debris = game:GetService("Debris")
local Players = game:GetService("Players")

local INTERP_CONSTANT = .138

local function findFolder(Player,Type)
	return workspace:FindFirstChild("Projectiles"):FindFirstChild(Type):FindFirstChild(Player.Name)
end

local countsKeys = {
	Superball = "Superballs";
	Rocket = "Rockets";
	PaintballGun = "Paintballs";
	Bomb = "Bombs";
	Trowel = "Walls";
	Slingshot = "Pellets";
}

function Security:GetPhysicsFolder(ID_array, PlayerFired, DontWarn)
	local ActiveFolder = findFolder(PlayerFired, "Active")

	local PhysicsFolder = ActiveFolder:FindFirstChild(ID_array[1]..ID_array[2])

	local success, err = pcall(function()
		assert(PhysicsFolder, "PhysicsFolder does not exist.")

		assert(#PhysicsFolder:GetChildren() > 0, "PhysicsFolder has no children.")

		assert(PhysicsFolder.creator.Value == PlayerFired, "Creator value does not match firing player, value:", PhysicsFolder.creator.Value)
		assert(PhysicsFolder.Active.Value == true, "PhysicsFolder is inactive!")
	end)

	if success then
		return PhysicsFolder
	elseif err then
		if not DontWarn then
			warn(
				"\n Error verifying PhysicsFolder...",
				"\n ID:",PlayerFired.Name.." "..ID_array[1]..ID_array[2],
				--"\n Count:", _G.BB.ProjectileCounts[PlayerFired.Name][countsKeys[ID_array[1]]],
				"\n Error:",err
			)
			--for _, obj in pairs(ActiveFolder:GetChildren()) do
			--	print(obj.Name)
			--end
		end
		return false
	end
end

function Security:ApproveActivation(Player, name, server)

	local Character = Player.Character

	local tool = Character and Character:FindFirstChildWhichIsA("Tool")

	if tool == nil then
		--print(Player, name, "NO TOOL FOUND", Character)
		return false
	end

	if tool and name then
		if tool.Name ~= name then
			--print(Player, name, "WRONG TOOL FOUND")
			return false
		end
	end

	if tool.Enabled == false or not tool:FindFirstChild("Activation") then
		--print(Player, name, "TOOL NOT ENABLED")
		return false
	end

	local deathCheck = true

	if server then
		deathCheck = _G.BB.Settings.Security.Master
	end

	if Character.Humanoid.Health > 0 or not deathCheck then
		if (tool.Name == "Sword" or tool.Name == "Trowel")
			or not Character:FindFirstChildWhichIsA("ForceField") then
			return tool
		else
			--print(Player, name, "FORCEFIELDED")
		end
	else
		--print(Player, name, "PLAYER DEAD")
	end
end

-- approves initial positions, velocities, etc
function Security:ApproveInit(PhysicsFolder, handle)

	local projectileType = PhysicsFolder.ProjectileType.Value
	local creator = PhysicsFolder.creator.Value

	local character = creator.Character
	local head = character.Head

	local Settings = _G.BB.Settings

	if not self:ApproveActivation(creator, projectileType, true) then
		--print(PhysicsFolder.Name, "denied activation approval.")
		return false
	end

	if Settings.Security.Master then
		if projectileType == "Slingshot" then

			local initPos = PhysicsFolder.LatestPosition.Value
			--local initVel = PhysicsFolder.LatestVelocity.Value
			--local initTime = PhysicsFolder.LatestTime.Value

			local MovementVector = head.Velocity * INTERP_CONSTANT
			local projPos = head.Position + MovementVector

			local vector2 = Vector2.new(initPos.X, initPos.Z)
			local vector1 = Vector2.new(projPos.X, projPos.Z)

			local Magnitude2D = (vector2 - vector1).Magnitude
			local Magnitude3D = (initPos - projPos).Magnitude

			local Cushion2D = Settings.Slingshot.SpawnDistance + 5
			local Cushion3D = Settings.Slingshot.SpawnDistance * 3

			if Magnitude2D > Cushion2D or Magnitude3D > Cushion3D then

				if Settings.Security.Initial.Warn then
					warn(
						"\n High initial displacement: "..PhysicsFolder.UniqueID.Value,
						"\n 2D Distance: "..Magnitude2D,
						"\n 3D Distance:"..Magnitude3D -- might as well print this too
					)
				end

				if Settings.Security.Initial.Deactivate then
					Debris:AddItem(PhysicsFolder,0)
					PhysicsFolder:Destroy()
					return false
				end
			end

		else

			local initPos = projectileType == "Rocket"
				and PhysicsFolder.Origin.Value.Position
				or PhysicsFolder.LatestPosition.Value

			--local initVel = PhysicsFolder.LatestVelocity.Value
			--local initTime = PhysicsFolder.LatestTime.Value

			-- Check velocity
			--[[
			local Vector = initVel.Magnitude--/initCF.LookVector
			local Average = (Vector.X + Vector.Y + Vector.Z)/3
			local Difference =math.abs(Average-Settings.Superball.Speed)
			if Difference>Settings.Security.Initial.SuperballVelocity then
				if Settings.Security.Initial.Warn then
					warn(
						"\n Bad initial velocity: "..PhysicsFolder.UniqueID.Value,
						"\n Vector speed:",Vector,
						"\n Average: "..Average,
						"\n Difference: "..Difference
					)
				end
				if Settings.Security.Initial.Deactivate then
					PhysicsFolder:Destroy()
					self.BufferObjectValue.Value = nil
					self:CreatePhysicsFolder();
					return
				end
			end
			]]

			local vector2 = Vector2.new(initPos.X, initPos.Z)
			local vector1 = Vector2.new(head.Position.X, head.Position.Z)

			local Magnitude2D = (vector2 - vector1).Magnitude
			local Magnitude3D = (initPos - head.Position).Magnitude

			local limit2d = Settings.Security.Initial[projectileType.."2D"]
			local limit3d = Settings.Security.Initial[projectileType.."3D"]

			if Magnitude2D > limit2d or Magnitude3D > limit3d then
				if Settings.Security.Initial.Warn then
					warn(
						"\n High initial displacement: "..PhysicsFolder.UniqueID.Value,
						"\n 2D Distance: "..Magnitude2D,
						"\n 3D Distance:"..Magnitude3D -- might as well print this too
					)
				end
				if Settings.Security.Initial.Deactivate then
					PhysicsFolder:Destroy()
					return false
				end
			end
		end
	end

	return true
end

function Security:ApproveUpdate(PhysicsFolder, InfoArray, UpdateSet, DeltaTime)
	local Parabola = require(script.Parabola)

	local RemoteSender = PhysicsFolder.creator.Value
	local ProjectileType = PhysicsFolder.ProjectileType.Value

	if _G.BB.Settings.Security.Master then

		if ProjectileType == "Superball" or ProjectileType == "Slingshot" or ProjectileType == "PaintballGun" then
			local LatestPosition = PhysicsFolder.LatestPosition
			local LatestVelocity = PhysicsFolder.LatestVelocity
			local LatestTime = PhysicsFolder.LatestTime

			local p0 = LatestPosition.Value
			local v0 = LatestVelocity.Value
			local p1 = InfoArray[2]
			local PositionMagnitude = (p1 - p0).Magnitude

			local fallout = _G.BB.Settings.Security.Fallout[ProjectileType]
			local g = Vector3.new(0, -workspace.Gravity, 0)

			if not PhysicsFolder.Hacking.Value
				and not Parabola:Check(p0, v0, g, p1, fallout) then

				if UpdateSet.Warn then
					warn("Projectile Path Verification failed: Position update rejected.")
				end

				if UpdateSet.Deactivate then
					PhysicsFolder.Hacking.Value = true
					PhysicsFolder.Active.Value = false
							--[[local sbpre = game.ReplicatedStorage.SBVis:Clone()
							sbpre.Parent = game.Workspace
							sbpre.BrickColor = BrickColor.new("Bright red")
							sbpre.Position = p1

							local sbpost = game.ReplicatedStorage.SBVis:Clone()
							sbpost.Parent = game.Workspace
							sbpost.BrickColor = BrickColor.new("Bright green")
							sbpost.Position = p0]]

					return false
				end
			end

		elseif ProjectileType == "Rocket" then
			local LatestDistance = PhysicsFolder.LatestDistance
			--local LatestVelocity = PhysicsFolder.LatestVelocity

			local OldDistance = LatestDistance.Value
			--local OldVelocity = LatestVelocity.Value
			local NewDistance = InfoArray[2]

			local Difference = NewDistance - OldDistance

			if (Difference > UpdateSet.Rocket or Difference < 0) then
				if UpdateSet.Warn then
					warn(
						"\n Bad distance change: "..PhysicsFolder.Name,
						"\n Difference: "..Difference
						--"\n DT: "..DeltaTime
					)
				end
				if UpdateSet.Deactivate then
					PhysicsFolder.Exploded.Value = true
					PhysicsFolder.Active.Value = false
					return false
				end
			elseif Difference == 0 then
				if UpdateSet.Warn then
					warn(
						"\n Zero distance change: "..PhysicsFolder.Name,
						"\n Difference: "..Difference
						--"\n DT: "..DeltaTime
					)
				end
			end

		elseif ProjectileType == "Bomb" then
			local Position1 = PhysicsFolder.LatestPosition.Value
			local Position2 = InfoArray[2]
			local PositionMagnitude = (Position2-Position1).Magnitude

			if PositionMagnitude > UpdateSet.Bomb then
				if UpdateSet.Warn then
					warn(
						"\n High displacement:",PhysicsFolder.Name,
						"\n Magnitude:",PositionMagnitude,
						"\n Velocity:",PhysicsFolder.LatestVelocity.Value
						--"\n DT:",DeltaTime
					)
				end
				if UpdateSet.Deactivate then
					PhysicsFolder.Active.Value = false
					return false
				end
			end

			local Velocity1 = PhysicsFolder.LatestVelocity.Value
			local Velocity2 = InfoArray[3]
			local VelocityMagnitude = (Velocity2-Velocity1).Magnitude
				if VelocityMagnitude>UpdateSet.BombVelocity then
					if UpdateSet.Warn then
						warn(
							"\n High acceleration: "..PhysicsFolder.Name,
							"\n Magnitude: "..VelocityMagnitude,
							"\n New velocity:",Velocity2,
							"\n Old velocity:",Velocity1
							--"\n DT:",DeltaTime
						)
					end
					if UpdateSet.Deactivate then
						PhysicsFolder.Active.Value = false
						return false
					end
				end


			local Time =  InfoArray[4]
			local CurrentTime = PhysicsFolder.LatestTime.Value
			-- DeltaTime = Time since last update
			if not(Time > (CurrentTime + .05) and (DeltaTime + CurrentTime - Time < .5)) then
				if UpdateSet.Warn then
					warn(
						"\n Bad incoming time: "..PhysicsFolder.Name,
						"\n Time: "..Time,
						"\n CurrentTime:",CurrentTime,
						"\n DT:",DeltaTime
					)
				end
				if UpdateSet.Deactivate then
					PhysicsFolder.Active.Value = false
					return false
				end
			end

		end

	end

	return true
end

function Security:ApproveExplode(PhysicsFolder, ExplPosData, Parts, HitPart, DirectHitCharacterData, RadiusCharacterData, RocketCFrame)
	local Settings = _G.BB.Settings

	local Kill = require(_G.BB.Modules.Kill)
	local PSPV = self.PSPV
	local ExplosionCallback = require(_G.BB.Modules.Callbacks.ExplodeMaster)

	local ProjectileType = PhysicsFolder.ProjectileType.Value
	local playerFired = PhysicsFolder.creator.Value

	local directCharData = DirectHitCharacterData
	local Radius = Settings[ProjectileType].Radius
	local Multiplier = Settings.Security.Hit.RadiusMultiplier -- Current default 5, 5*4=20 for rocket

	local ExplosionPosition = ExplPosData

	local ID = playerFired.Name.."_"..PhysicsFolder.Name

	local SecurityPart = self.SecurityPart

	if Settings.Security.Master then
		-- Verify rocket hit a part

		if ProjectileType == "Rocket" then
			if HitPart then
				local Humanoid = HitPart.Parent:FindFirstChildWhichIsA("Humanoid")
				if (Humanoid
					and Players:GetPlayerFromCharacter(Humanoid.Parent)
					and Kill:CanDamage(playerFired,Humanoid,false)
					and Humanoid.RigType == Enum.HumanoidRigType.R6
					and Humanoid.Health>0)  then
					local HitPlayer = Players:GetPlayerFromCharacter(Humanoid.Parent)

					local TrueHit = PSPV:Verify(directCharData,{RocketCFrame},Vector3.new(1, 1, 4),Enum.PartType.Block,HitPlayer.Name,PhysicsFolder)
					if not TrueHit then
						if Settings.Security.Hit.Warn then
							warn("PSPV failed for direct rocket hit:",ID,"Hit player:",HitPlayer)
						end
						if Settings.Security.Hit.Deactivate then
							PhysicsFolder.Active.Value = false
							task.delay(2, function() PhysicsFolder:Destroy() end)
							return false
						end
					end
				elseif not Humanoid then
					SecurityPart.Shape = Enum.PartType.Block
					SecurityPart.Size = Vector3.new(1, 1, 4)
					SecurityPart.CFrame = RocketCFrame
					local CollectedParts = SecurityPart:GetTouchingParts()
					SecurityPart.Shape = Enum.PartType.Block
					if not table.find(CollectedParts,HitPart) then
						if Settings.Security.Hit.Warn then
							warn("Rocket's HitPart not touching rocket for",ID,"Hit:", HitPart:GetFullName())
						end
					end
				end
			else
				if Settings.Security.Hit.Warn then
					warn("Rocket's HitPart is nil for",ID)
				end
			end

			-- Ensure rocket did not explode too far away
			local OldDistance = PhysicsFolder.LatestDistance.Value
			local Difference = ExplPosData-OldDistance
			if Difference>Settings.Security.Hit.RocketExplode then
				if Settings.Security.Hit.Warn then
					warn(
						"\n High explosion displacement: "..ID,
						"\n New distance: "..ExplPosData,
						"\n Old distance: "..OldDistance,
						"\n Difference: "..Difference
					)
				end
				if Settings.Security.Hit.Disable then
					PhysicsFolder.Active.Value = false
					task.delay(2, function() PhysicsFolder:Destroy() end)
					return false
				end
			end
		elseif ProjectileType == "Bomb" then
			if Settings.Security.Master then
				local LastTime = PhysicsFolder.LatestTime.Value
				-- Ensure bomb did not explode too quickly
				if LastTime<Settings.Security.Hit.BombTime then
					if Settings.Security.Hit.Warn then
						warn(
							"\n Quick explosion: "..ID,
							"\n LastTime: "..LastTime
						)
					end
					if Settings.Security.Hit.Disable then
						PhysicsFolder.Active.Value = false
						task.delay(2, function() PhysicsFolder:Destroy() end)
						return false
					end
				end
			end
		end
	end

	-- Grab parts in same vicinity
	local CollectedParts = {}
	if Settings.Security.Master then
		SecurityPart.Size = Vector3.new(Radius*2,Radius*2,Radius*2)
		SecurityPart.Position = ExplosionPosition
		CollectedParts = SecurityPart:GetTouchingParts()
	end

	local Humanoids = {}
	local ApprovedParts = {}

	-- Check distance from explosion, make exception for large parts
	for _, Part in pairs(Parts) do
		-- Verify part
		if not Part or not workspace:IsAncestorOf(Part) or Part.Anchored then
			continue
		end

		if ExplosionCallback(Part, PhysicsFolder.creator.Value) == false then
			continue
		end

		-- Create a dictionary with humanoids
		-- Humanoids[Humanoid] = {CharPart,CharPart2}
		local Humanoid = Part.Parent:FindFirstChildWhichIsA("Humanoid")
		if Humanoid then
			if not Humanoids[Humanoid] then
				Humanoids[Humanoid] = {Part}
			else
				table.insert(Humanoids[Humanoid],Part)
			end
			continue
		end


		--[[
		Makes an exception for large, moving parts that were not collected
		by the Server explosion.

		** This stinks and is probably unnecessary
		]]
		if Settings.Security.Master and not table.find(CollectedParts, Part) then
			local DistanceBetweenCenters = (ExplosionPosition - Part.Position).Magnitude
			local AverageDistanceFromCenter = (Part.Size.X / 2 + Part.Size.Y / 2 + Part.Size.Z / 2) / 3

			-- Constraint is really only necessary for large, moving parts but whatever
			if DistanceBetweenCenters > Radius * Multiplier and AverageDistanceFromCenter + Radius < Radius * Multiplier then
				if Part.Name ~= "Handle" then
					if Settings.Security.Hit.Warn then
						local FullName = Part:GetFullName()

						warn("--------------------",
							"\n Part is far from explosion: "..ID,
							"\n Distance: "..DistanceBetweenCenters,
							"\n Part: "..FullName,
							"\n Part pos: ",Part.Position,
							"\n Expl pos: ",ExplosionPosition,
							"\n Part average from center: "..AverageDistanceFromCenter
						)
					end
					if Settings.Security.Hit.Disable then
						-- Part is not blown up and any possible humanoid is not damaged
						continue
					end
				end
			end
		end
		table.insert(ApprovedParts,Part)
	end

	--[[
	This is our security check for hit characters. It uses
	a system called Past Server Position Verification (coined
	by GFink).
	]]
	local ApprovedHumanoids = {}
	for Humanoid,CharPartArray in pairs(Humanoids) do
		local HitPlayer = Players:GetPlayerFromCharacter(Humanoid.Parent)
		if HitPlayer
			and Kill:CanDamage(playerFired, Humanoid, false)
			and Humanoid.RigType == Enum.HumanoidRigType.R6
			and Settings.Security.Master
			and Humanoid.Health > 0 then

			local TrueHit = PSPV:Verify(
				{RadiusCharacterData[HitPlayer.Name]},
				{CFrame.new(ExplosionPosition)},
				Vector3.new(Radius*2, Radius*2, Radius*2),
				Enum.PartType.Ball,
				HitPlayer.Name,
				PhysicsFolder
			)

			-- Approve
			if TrueHit then
				ApprovedHumanoids[Humanoid] = CharPartArray
			else
				warn("PSPV failed: Past character position not touching EXPLOSION.","\n Hit position:",ExplosionPosition)
			end
		else
			ApprovedHumanoids[Humanoid] = CharPartArray
		end
	end

	return ApprovedHumanoids, ApprovedParts
end

function Security:ApproveHit(PhysicsFolder, HitPlayer, HitPart, p1, v1, t1, CharacterData, ClientPhysicsFPS)
	local PSPV = self.PSPV
	local Parabola = self.Parabola

	local ka, kb, kc, kd, ke, kf, Lm, Mm -- Ewwww
	local HitPosition, HitVelocity, HitTime, SameParabola
	local HitPositionCandidates = {}

	local creator = PhysicsFolder.creator.Value
	local ProjectileType = PhysicsFolder.ProjectileType.Value

	local LatestPosition = PhysicsFolder:FindFirstChild("LatestPosition")
	local LatestVelocity = PhysicsFolder:FindFirstChild("LatestVelocity")
	local LatestTime = PhysicsFolder:FindFirstChild("LatestTime")

	local p0 = LatestPosition.Value
	local v0 = LatestVelocity.Value
	local t0 = LatestTime.Value

	if _G.BB.Settings.Security.Master then
		local Hacking = PhysicsFolder:FindFirstChild("Hacking")

		local Accel = Vector3.new(0, 0, 0)

		local VectorForce = PhysicsFolder:FindFirstChild("VectorForce")
		local Mass = PhysicsFolder:FindFirstChild("Mass")
		if VectorForce and Mass then
			Accel = VectorForce.Value / Mass.Value
		end

		Accel += Vector3.new(0, -workspace.Gravity, 0)

		HitPosition, HitVelocity, HitTime, SameParabola, ka, kb, kc, kd, ke, kf, Lm, Mm = Parabola:FindTouchPoint(Accel,   p0, v0, t0,   p1, v1, t1)
		HitPositionCandidates = {CFrame.new(HitPosition)}

		if SameParabola then
			HitPosition, HitVelocity, HitTime = p1,v1,t1
			if not Parabola:Check(p0, v0, Accel, p1, _G.BB.Settings.Security.Fallout[ProjectileType]) then

				if _G.BB.Settings.Security.Hit.Warn then
					warn("Projectile Touch Verification failed: Same-parabola touch position REJECTED.")

					if HitPlayer then
						warn("Failed when hitting a player:", HitPlayer.Name, HitPart.Name)
					end
				end

				if _G.BB.Settings.Security.Hit.Deactivate then
					if Hacking then
						Hacking.Value = true
					end
					PhysicsFolder.Active.Value = false
					return false
				end
			end

			-- Post-touch position is confirmed, now we need to find candidates for the touch pos.
			-- Physics get throttled at FPS < 15.
			ClientPhysicsFPS = math.max(ClientPhysicsFPS, 15)
			HitPositionCandidates = {}
			for i = 0, 4 do
				local HitTimeCandidate = t1 - (i/4) * (1 / ClientPhysicsFPS)
				local HitPosCandidate,_ = Parabola:Eval(p1, v1, Vector3.new(0, -workspace.Gravity, 0), t1, HitTimeCandidate)
				table.insert(HitPositionCandidates, CFrame.new(HitPosCandidate))
			end
		end

		local DELTA_T = t1-HitTime

		if (t1-t0 > 0) then
			if (not Hacking or Hacking.Value == false)
				and not SameParabola
				and (Parabola:Check(p0, v0, Accel, HitPosition, _G.BB.Settings.Security.Fallout[ProjectileType]) == false) then

				if _G.BB.Settings.Security.Hit.Warn then
					warn("Projectile Touch Verification for".." failed: Normal touch position REJECTED.")

					if HitPlayer then
						warn("Failed when hitting a player:",HitPlayer.Name, HitPart.Name)
					end
				end
				if _G.BB.Settings.Security.Hit.Deactivate then
					if Hacking then
						Hacking.Value = true
					end
					PhysicsFolder.Active.Value = false
					return false
				end
			elseif not SameParabola then
				PhysicsFolder.LatestPosition.Value = p1
				PhysicsFolder.LatestVelocity.Value = v1
				PhysicsFolder.LatestTime.Value = t1
			end
		end

		-- No current PSPV security offered for NPCs.
		if HitPlayer then
			local Size = ProjectileType == "Superball" and Vector3.new(2,2,2) or Vector3.new(1,1,1)
			local TrueHit = PSPV:Verify(
				CharacterData,
				HitPositionCandidates,
				Size,
				Enum.PartType.Ball,
				HitPlayer.Name,
				PhysicsFolder,
				SameParabola)

			if not TrueHit then
				if _G.BB.Settings.Security.Hit.Warn then
					warn("PSPV failed: Past character position not touching projectile hit position.","SameParabola:",SameParabola)
				end
				if _G.BB.Settings.Security.Hit.Deactivate then
					PhysicsFolder.Active.Value = false
					return false
				end
			end
		end
	end

	return true
end

function Security:ApproveFuturePositions(Player,LocalCFrames)
	if not _G.BB.Settings.Security.Master then
		return true
	end
	if not _G.BB.Settings.Security.FuturePositionApproval then
		return true
	end
	local AlottedTime = _G.BB.Settings.Security.AllowedTime
	local Distance = _G.BB.Settings.Security.AcceptableDistance
	-- approve character position (occurs post-hit)
	local Character  = Player.Character
	if not Character then
		return false
	end
	local start = tick()
	local c
	local approved = {}
	local bestMags = {0,0,0}
	-- player has 1 second to get to that position
	c = game:GetService("RunService").Heartbeat:Connect(function()
		if tick()-start>.2 and #approved~=3 then
			warn(Player.Name," never reached future positions.",#approved)
			-- Do something here
			c:Disconnect()
		end
		for i,v in pairs(LocalCFrames) do
			if approved[i] then
				continue
			end
			local Mag = (v[2].Head.Position-Character.PrimaryPart.Position).Magnitude
			if Mag<bestMags[i] then
				bestMags[i]  = Mag
			end
			if Mag<Distance then
				approved[i] = true
			end
		end
		if #approved == 3 then
			--print("Approved future positions for",Player.Name)
			c:Disconnect()
		end
	end)
end

function Security:ApproveHandlePositions(Player,LocalCFrames)
	if not _G.BB.Settings.Security.Master then
		return true
	end
	for _,frametable in pairs(LocalCFrames) do
		local char = frametable[2]
		local cf = char.Sword
		if cf then
			local mag = (cf.Position - char.Head.Position).Magnitude
			if mag > 3.8 then
				warn("High handle-root distance for:",Player)
				return false
			end
		end
	end
	return true
end

function Security:Init(SecurityPart, SecurityDummy, TimeValue)
	self.SecurityPart = SecurityPart

	self.Parabola = require(script:WaitForChild("Parabola"))
	self.PSPV = require(script:WaitForChild("PSPV"))

	self.PSPV:Init(SecurityPart, SecurityDummy, TimeValue)
end

return Security
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXFE327B0B4A9849CFA6A1EA912CE862C3">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Parabola</string>
								<string name="ScriptGuid">{809A45D7-3988-4901-A742-B3808BB76A23}</string>
								<ProtectedString name="Source"><![CDATA[-- tyzone
-- Used by Hit and CustomPhysicsReplicator


local ParabolaModule = {}

local function CubeRoot(x) -- Get the cube root while preserving the negative or positive operand
	local Multiplier = x > 0 and 1 or -1
	return Multiplier * (x * Multiplier)^(1/3)
end

local function CubicRoots(A, B, C, D) -- Parameters are coefficients of a cubic polynomial ax^3 + bx^2 + cx + d = 0
	-- Use the cubic formula here to solve for x (in our case, t) - https://math.vanderbilt.edu/schectex/courses/cubic/cubic.gif
	local O = -B/(3*A)
	local P = (3*A*C - B^2) / (3*A^2)
	local Q = (2*B^3 - 9*A*B*C + 27*A*A*D) / (27*A^3)

	local Delta = -4*P^3 - 27*Q^2

	local z0, z1, z2
	if Delta < 0 then
		local k0, k1, k2
		k0 = -Q/2
		k1 = (Q^2)/4
		k2 = (P^3)/27


		--k1 + k2 is always positive here
		local sqrtsum = math.sqrt(k1 + k2)

		z0 = CubeRoot(k0 + sqrtsum) + CubeRoot(k0 - sqrtsum)
		--local z0 = (math.abs(k0) + math.sqrt(k1 + k2))^0.3333 + (math.abs(k0) - math.sqrt(k1 + k2))^0.3333
		--if k0 < 0 then z0 = -z0 end
	else
		local M = 2*math.sqrt(-P/3)
		local Phi = math.acos(3*Q/(M*P))
		z0 = M*math.cos(Phi/3)
		z1 = M*math.cos((Phi + 2*math.pi)/3)
		z2 = M*math.cos((Phi + 4*math.pi)/3)
	end
	return z0 + O, z1 and z1 + O, z2 and z2 + O
	-- z1 and z2 only exist if Delta is 0 or greater, so we do 'z1 and z1 + O' to return nil before trying to add nil and a number
end

local h = 1/240

local function ClosestTime(p0, v0, a, p1)
	local dp = p0 - p1

	local vOff = v0 + .5 * h * a

	a *= 0.5

	--We only use those for verification right now
	local QA, QB, QC, QD, QE
	QA = a.Y^2 --yes
	QB = 2*a.Y*vOff.Y --yes
	QC = vOff:Dot(vOff) + 2*a.Y*dp.Y
	QD = 2*vOff:Dot(dp)
	QE = dp:Dot(dp)

	local A,B,C,D
	A = 4*QA
	B = 3*QB
	C = 2*QC
	D = QD

	local function quartic(t)
		return QA*t^4 + QB*t^3 + QC*t^2 + QD*t + QE
	end

	local roots = {CubicRoots(A,B,C,D)}
	table.sort(roots,
		function(t1, t2)
			return quartic(t1) < quartic(t2)
		end
	)
	return roots[1]
end

local function getOffset(a, t)

	return .5 * h * a * t
end

function ParabolaModule:ClosestVector(...)
	local t = ClosestTime(...)
	local p0, v0, a = ...

	return
		p0 + (v0 * t) + (0.5 * a * t^2) + getOffset(a,t), -- Position at time t
		v0 + (a * t), -- Velocity at time t
		t -- Time t (probably will not be used)
end

function ParabolaModule:Eval(...)
	local p0, v0, a, t0, t1 = ...
	local dt = t1-t0
	return
		p0 + (v0 * dt) + (0.5 * a * dt^2) + getOffset(a,dt), -- Position at time t
		v0 + (a * dt)
end

function ParabolaModule:Check(...)
	local ClosestPosition = self:ClosestVector(...)
	local _, _, _, p1, AllowedFallout = ...
	local Dist = (ClosestPosition - p1).Magnitude
	local safe = Dist <= AllowedFallout
	if not safe then
		--print(Dist,(Dist <= AllowedFallout and "<" or ">"),tostring(AllowedFallout))
		--print(ClosestPosition)
		--print(p1)
	end
	return safe
end

--[[ Tyzone
Uses "average" of two parabolas to find the true touch position of the projectile.
Why not just use Projectile.Position at the moment of touch? Physics is computed at
4x the speed of touch events firing. Means that the position could be up to 4 frames off,
which is intolerable for our security system.
]]
function ParabolaModule:FindTouchPoint(a,   p0, v0, t0,   p1, v1, t1)
	--[[
	The coefficients get too large if we use arbitrary values for time.
	This can cause floating point errors.
	We're only interested in time differences, so we set t0=0 for this calculation.
	We revert this change at the very end of the function.
	]]

	--local ERROR_CONSTANT = 0.0020387359836901

	--TODO: the "a" in the function params only accounts for the bodyforce.
	--The "a" in our formula should account for gravity + bodyforce.

	local dt = t1 - t0
	local off = getOffset(a, dt)


	local ka = 0.5 * a
	local kb = v0
	local kc = p0

	local kd = ka
	local ke = v1 - a * dt
	local kf = p1 - v1 * dt + 0.5 * a * dt^2
	kf = kf - off

	--[[
	local ka = 0.5 * a
	local kb = v0
	local kc = p0

	local kd = ka
	local ke = v1 - a * dt
	local kf = p1 - v1 * dt + 0.5*a*dt^2 - off*dt
	]]

	local L = ke - kb
	local M = kf - kc

	local SameParabola = (L.Magnitude < 10e-1 and M.Magnitude < 0.1)
	--print("SameParabola =",SameParabola,"(",L.Magnitude,",",M.Magnitude,",",v0.Magnitude,")")

	local tTouch = (M:Dot(L)) / (L:Dot(L))

	if (L*tTouch + M).Magnitude > (-L*tTouch + M).Magnitude then
		tTouch = -tTouch
	end

	local idt0 = tTouch
	local pTouch0 = p0 + (v0 * idt0) + (ka * idt0^2) + getOffset(a, idt0)
	--[[
	local idt1Candidates = {
		tTouch - dt,
		(tTouch - dt) * 3/4,
		(tTouch - dt) * 2/4,
		(tTouch - dt) * 1/4,
	}
	local bestPTouch = nil
	local bestDistance = math.huge
	for _,w in pairs(idt1Candidates) do
		local pCandidate = p1 + (v1 * w) + (kd * w^2) + getOffset(a, w)
		local ClosestPosition = self:ClosestVector(p0, v0, a, pCandidate)
		local Dist = (ClosestPosition - p).Magnitude

	end]]
	local idt1 = tTouch - dt
	local pTouch1 = p1 + (v1 * idt1) + (kd * idt1^2) + getOffset(a, idt1)
	local vTouch = v1 + a * idt1

	--print(off * idt1)

	--[[
	print("COEFFICIENTS")
	print(ka.magnitude, kb.magnitude, kc.magnitude)
	print(kd.magnitude, ke.magnitude, kf.magnitude)

	print("Position:",CFrameIWant.Position)
	print("Position 2:",p3)

	local s0 = game.ReplicatedStorage.SBVis:Clone()
	s0.Parent = game.Workspace
	s0.CFrame = CFrame.new(pTouch0)
	s0.BrickColor = BrickColor.new("Bright red")

	local s1 = game.ReplicatedStorage.SBVis:Clone()
	s1.Parent = game.Workspace
	s1.CFrame = CFrame.new(pTouch1)
	s1.BrickColor = BrickColor.new("Bright blue")
	]]

	if ((p0-p1).magnitude < 10e-3) and ((v0-v1).magnitude < 10e-3) then
		pTouch1 = p1
		vTouch = v1
		tTouch = (t0 + t1) / 2
		SameParabola = true
	end

	return pTouch1, vTouch, tTouch + t0, SameParabola, ka, kb, kc, kd, ke, kf, L.Magnitude, M.Magnitude
	-- everything past the fourth arg is for debugging purposes only
end

return ParabolaModule]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX2D4A59EB6C594A59BEBF66B0C3BDBFD2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">PSPV</string>
								<string name="ScriptGuid">{B0A9B42F-BAC0-4ED2-B803-269873FDDC21}</string>
								<ProtectedString name="Source"><![CDATA[-- Past Server Position Verification
local PSPV = {}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local MaxDistances = {
	["Head"] = 1.6,
	["Right Arm"] = 2,
	["Left Arm"]= 2,
	["Left Leg"]= 2.3,
	["Right Leg"]= 2.3,
	["Torso"] = .1,
	["HumanoidRootPart"] = .1
}

local DefaultHRP = Vector3.new(2,2,1)

local function findTimeFromRoot(ClientRootPosition,HitPlayerName,ClientSeenTime)
	local ReturningTable
	local BestMagnitude = 100
	local BestTimeDifference = 1

	--print("Evaluating with client time stamp:",ClientSeenTime)

	for  _,RecordedCharData in pairs(_G.BB.MasterTimeTable[HitPlayerName]) do

		local RecordedRootPosition = RecordedCharData[2]["HumanoidRootPart"].Position
		local RecordedTime = RecordedCharData[1]

		local TimeDifference = math.abs(ClientSeenTime - RecordedCharData[1])
		local Magnitude = (ClientRootPosition - RecordedRootPosition).Magnitude

		if ((Magnitude > 0.1 and Magnitude < BestMagnitude) or Magnitude <= 0.1) and TimeDifference < BestTimeDifference then
			--print("Mag:",BestMagnitude,"TD:",BestTimeDifference)
			BestMagnitude = Magnitude
			BestTimeDifference = TimeDifference
			ReturningTable = RecordedCharData
		end

	end
	--[[ Debug
	local ReportMag = math.round(BestMagnitude*100)/100
	local ReportTD = math.round(BestTimeDifference*100000000)/100000000
	local Frames = math.floor((BestTimeDifference/(1/60)) + 0.5)
	local Steps = Frames*4
	print("Selected time stamp: ",ReturningTable[1],"Mag:",ReportMag,"TD:",ReportTD,"Frames:",Frames,"Steps:",Steps)
	]]
	return ReturningTable[1], ReturningTable[2] -- Time + Character data table
end

function PSPV:Verify(CharacterDataFrames, ProjectileCFrames, ProjectileSize, ProjectileShape, HitPlayerName, PhysicsFolder, SameParabola)
	if not _G.BB.Settings.Security.PSPV then
		return true
	end
	local info = PhysicsFolder and PhysicsFolder.UniqueID.Value or "Sword"

	--print(" >> PSPV","\n 1, Beginning PSPV for",info)

	--[[ Details
		CharacterDataFrames = {
			{Time, CFrameTable}, -- Post touch
			{Time, CFrameTable}, -- pre frame (if nec.)
			{Time, CFrameTable}, -- pre touch (if nec.)
		}
		Time = game.ReplicatedStorage.SERVER_TIME.Value
		Updated by server every heartbeat with time()
		CFrameTable = {
			Torso = CFrame
			Right Arm = CFrame
			etc
		}
	]]

	local ServerCFrames = {}

	-- Verify time
	for i,CharacterData in pairs(CharacterDataFrames) do

		-- Prevent long lag shadow hits
		local Now = time()
		local Lag = Now-CharacterData[1]
		if Lag>1 then -- Sorry BLOODTUSSK
			warn("\n\t Sent client time too old:","Client time:",CharacterData[1],"Now:",Now,"Lag:", math.round(Lag*100)/100)
			if PhysicsFolder then
				warn(
					"\tID:",PhysicsFolder.UniqueID.Value
				)
				PhysicsFolder.Active.Value = false
			end
			--return false
		end

		local SentRootPosition = CharacterData[2]["HumanoidRootPart"].Position
		local MatchingServerTime, ServerCFramesAtFrame = findTimeFromRoot(
			SentRootPosition,
			HitPlayerName,
			CharacterData[1] -- Time
		)

		-- For reference when verifying limb positions
		ServerCFrames[i] = ServerCFramesAtFrame

		-- Comparing server time when character was
		-- at client seen position to client's seen time.
		local TimeDifference = CharacterData[1] - MatchingServerTime

		if (TimeDifference>.33) then
			warn("\n\tPSPV failed time verification with dT:",TimeDifference,"\nServer time:",MatchingServerTime)
			if PhysicsFolder then
				warn(
					"\tID:",PhysicsFolder.UniqueID.Value
				)
				PhysicsFolder.Active.Value = false
			end
			return false
		end
	end

	--[[ Debug
	print("3, time difference of "..TimeDifference.." passed")

	local F = Instance.new("Folder")
	local Now = math.round(time()*100)/100
	F.Name = PhysicsFolder and PhysicsFolder.UniqueID.Value or "SwordHit"..Now
	F.Parent = workspace
	SecurityPart.Color = SameParabola and Color3.new(1, 0.941176, 0.278431) or Color3.new(0.615686, 0, 1)
	print("4, SameParabola = ",SameParabola)
	SecurityPart.Touched:Connect(function() end)
	SecurityPart.Parent = F


	 Position dummy projectile + character
	SecurityPart.Transparency = 0

	table.insert(CharacterCFrames,ServerCFrames)
	local Colors = {Color3.fromRGB(0, 170, 0),Color3.fromRGB(147, 147, 147),Color3.fromRGB(255, 255, 255)}
	local First
	]]

	local TrueHit = false
	local SecurityPart = self.SecurityPart
	local SecurityDummy = self.SecurityDummy
	SecurityPart.Size = ProjectileSize + Vector3.new(.35,.35,.35)
	SecurityPart.Shape = ProjectileShape

	-- Loop through character candidates (may contain candidates for
	-- multiple players, i.e., from a bomb explosion).
	for i,CharacterData in pairs(CharacterDataFrames) do
		local CharacterCFrames = CharacterData[2]

		--[[ Debug
		SecurityDummy.Parent = F

		if i == 1 then
			First = SecurityDummy
		end
		]]

		local Player = game.Players:FindFirstChild(HitPlayerName)

		-- Position limbs
		for PartName,PartCF in pairs(CharacterCFrames) do
			local Part = SecurityDummy:FindFirstChild(PartName)

			--[[ Inactive check
			-- Supposed to verify limb positions/distances
			if ServerFrames[i][PartName] then
				local ServerPart = ServerFrames[i][PartName]
				print(PartName,(PartCF.Position-ServerPart.Position).Magnitude)
			end

			local HRP = CharacterCFrames.HumanoidRootPart
			local Magnitude = (HRP.Position-PartCF.Position).Magnitude
			if MaxDistances[PartName] and (Magnitude>MaxDistances[PartName]) and Part then
				warn(PartName,"far from Root Part, will not be used in PSPV check,")
				continue
				--return false
			end
			if string.find(PartName,"Leg") then
				if (PartCF.Position.Y>(HRP.Position.Y-1.5)) then
					warn("Not counting",PartName)
					continue
					--return false
				end
			end
			]]
			if Part then
				Part.Size = Player.Character[PartName].Size -- Use server size
				Part.CFrame = PartCF -- Use firing client's seen position
				--Part.Transparency = 0
				--Part.Color = Colors[i]
			end
		end
		--local name = 1

		-- Position projectile candidates
		for _,CF in pairs(ProjectileCFrames) do
			-- Position
			SecurityPart.CFrame = CF

			--[[ Debug
			local visualPart
			if SameParabola then
				visualPart = SecurityPart:Clone()
				visualPart.Name = "Candidate projectile "..name
				visualPart.Parent = F
				visualPart.CFrame = CF
				visualPart.Color = Color3.new(0.172549, 0.0823529, 0.0196078)
				name = name + 1
			end
			]]

			-- See if projectile is touching a limb
			local CollectedParts = SecurityPart:GetTouchingParts()
			for _,CharacterPart in pairs(SecurityDummy:GetChildren()) do
				if table.find(CollectedParts,CharacterPart) then
					--if visualPart and not TrueHit then
					--	visualPart.Color = Color3.new(0.615686, 1, 0) -- Touches sent frame
					--end
					TrueHit = true
				end
			end
		end
	end

	--[[ Debug
	if First then
		for _,DebugPart in pairs(First:GetChildren()) do
			DebugPart.Color = TrueHit and Color3.new(0.00784314, 0.490196, 0) or Color3.new(1, 0, 0.0156863)
			DebugPart.Transparency = 0
		end
	end

	if TrueHit then
		F:Destroy()
	end
	]]
	return TrueHit
end

function PSPV:CreateCharacterCFrameTable(Source)
	if not _G.BB.Settings.Security.PSPV then
		return
	end
	local Character = Source:IsA("Player") and Source.Character or Source:IsA("Humanoid") and Source.Parent
	if not Character then
		warn("Not generating character cframes (could not find char), any hit on this player will not count. ")
		return
	end
	-- Grab character positional data at current seen server time
	local CharacterCFrame = {}
	for _,CharPart in pairs(Character:GetChildren()) do
		if CharPart:IsA("Part") then
			CharacterCFrame[CharPart.Name] = CharPart.CFrame
		elseif CharPart:IsA("Tool") and CharPart.Name == "Sword" then
			if CharPart:FindFirstChild("Handle") then
				CharacterCFrame[CharPart.Name] = CharPart.Handle.CFrame
			end
		end
	end
	local Time = _G.BB.ServerTime.Value
	return {Time,CharacterCFrame}
end

function PSPV:CreateCharFrameTables(Player)
	if not _G.BB.Settings.Security.PSPV then
		return
	end
	--assert(Player:IsA("Player"),"Arg1 must be a player obj.")
	--assert(TimeTable,"No time scope!")
	local PostFrameData = self:CreateCharacterCFrameTable(Player)
	local PreFrameData1 = _G.BB.SlaveTimeTable[Player.Name] and _G.BB.SlaveTimeTable[Player.Name][1]
	local PreFrameData2 = _G.BB.SlaveTimeTable[Player.Name] and _G.BB.SlaveTimeTable[Player.Name][2]
	--[[
		_G.BB.SlaveTimeTable[PlayerName] = {
			FrameData = {Time,CFrameTable} -- older
			FrameData = {Time,CFrameTable}
		}
	]]

	return {PostFrameData,PreFrameData1,PreFrameData2}
end

function PSPV:Init(SecurityPart, SecurityDummy, ServerTimeValue)

	if not _G.BB.Settings.Security.PSPV then
		RunService.Heartbeat:Connect(function()
			_G.BB.ServerTime.Value = time()
		end)
		return
	end

	self.SecurityDummy = SecurityDummy
	self.SecurityPart = SecurityPart

	SecurityPart.Parent = workspace
	SecurityDummy.Parent = workspace

	local function RecordPlayerPositions()
		local Time = time()
		_G.BB.ServerTime.Value = Time

		for _,Player in pairs (Players:GetPlayers()) do
			if Player.Character then

				local CharacterData = self:CreateCharacterCFrameTable(Player)

				table.insert(_G.BB.MasterTimeTable[Player.Name],CharacterData)

				if #_G.BB.MasterTimeTable[Player.Name] > 360 then
					table.remove(_G.BB.MasterTimeTable[Player.Name],1)
				end
			end
		end
	end

	RunService.Heartbeat:Connect(RecordPlayerPositions)
end

function PSPV:InitClient()

	if not _G.BB.Settings.Security.PSPV then
		return
	end

	local function addPlayer(Player)
		_G.BB.SlaveTimeTable[Player.Name] = {}
	end

	for _, Player in pairs(Players:GetPlayers()) do
		addPlayer(Player)
	end

	Players.PlayerAdded:Connect(addPlayer)

	local function RecordPlayerPositions()
		for _,Player in pairs (Players:GetPlayers()) do
			if Player.Character then
				local CharacterData = self:CreateCharacterCFrameTable(Player)

				table.insert(_G.BB.SlaveTimeTable[Player.Name], CharacterData)

				if #_G.BB.SlaveTimeTable[Player.Name] > 2 then
					table.remove(_G.BB.SlaveTimeTable[Player.Name],1)
				end
			end
		end
	end

	RunService.Heartbeat:Connect(RecordPlayerPositions)

end

return PSPV
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX3A53EB5C1B4B4721928C2B615887326F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SafeWait</string>
								<string name="ScriptGuid">{383C74BA-86E9-4B84-BE29-7968E24A4A64}</string>
								<ProtectedString name="Source"><![CDATA[local module = {}

module.wait = function(t)
	local maxSafeWait = _G.BB.Settings.MaxSafeWait

	if maxSafeWait == 0 then
		return task.wait(t)
	end

	local totalWait = 0

	local timeRemaining = t
	while timeRemaining > 0 do
		local dt = task.wait()
		totalWait += dt
		if dt < maxSafeWait then
			timeRemaining -= dt
		end
	end

	return totalWait
end

return module]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXB790DB83EA444CEB9D76B1E48B7DC8C3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Hit</string>
							<string name="ScriptGuid">{E2C4A93B-4FFD-4B24-8D50-D64A14DF39DA}</string>
							<ProtectedString name="Source"><![CDATA[-- GloriedRage, GFink, tyzone
-- Used in Superball, Paintball Gun, and Slingshot client modules.

local HitModule = {}

local Collections = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local Kill = require(_G.BB.Modules:WaitForChild("Kill"))
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))
local PSPV = require(_G.BB.Modules.Security:WaitForChild("PSPV"))
local HitRemote = _G.BB.Remotes:WaitForChild("Hit")
local Settings = _G.BB.Settings

local PaintballColorCallback = require(_G.BB.Modules.Callbacks.PaintballColor)
local PBG_Classes = {"Accoutrement", "Tool", "Accessory"} -- if hit.Parent:IsA... then color it

local FPS = 0

if RunService:IsClient() then
	RunService.Stepped:Connect(
		function(_, dt)
			FPS = 1 / dt
		end
	)
end

function IsAcceptableHit(player, hit)
	return hit.Parent:FindFirstChildWhichIsA("Humanoid") or
		not (
		Collections:HasTag(hit,"Projectile")
			or (hit.CanCollide == false)
			or hit.Name == "Handle"
	)
end

local function PaintballDamageMultiplier(Projectile, HitPart)

	local properPart = Settings.PaintballGun.MultiplierPartNames[HitPart.Name]

	if Projectile.ProjectileType.Value == "PaintballGun" and properPart then

		Projectile.Damage.Value *= 1 + 2 / 3

		return Projectile.Damage.Value
	end
	return false
end

--[[
	This function handles the hit detection for both the Superball and Slingshot.
	Incorporates hit detection, damage and indicators all on the client to maximize
	experience.
]]

function HitModule:HandleHitDetection(projectile)
	--print("__________")
	--print("Initializing:", PhysicsFolder.UniqueID.Value)
	local Delete = require(_G.BB.ClientObjects:WaitForChild("Delete"))

	if projectile:FindFirstChildWhichIsA("TouchTransmitter") then
		return
	end

	projectile.Ready.Value = true

	local player = Players.LocalPlayer
	local ProjectileType = projectile.ProjectileType.Value
	local setting = Settings[ProjectileType]
	local damage = projectile.Damage.Value

	local CanHalfDamage = setting.RicochetDamage
	local hitHumanoid = false
	local SetGlobal = false

	--local p0, v0, t0 = PhysicsFolder.LastSentPosition, PhysicsFolder.LastSentVelocity, PhysicsFolder.LastSentTime

	local TouchedConnection

	TouchedConnection = projectile.Touched:Connect(function(hit)

		local humanoid = hit.Parent:FindFirstChildWhichIsA("Humanoid")
		local Player = Players:GetPlayerFromCharacter(hit.Parent)
		local hat = table.find(PBG_Classes, hit.Parent.ClassName)

		local p1 = projectile.Position
		local v1 = projectile.Velocity
		local t1 = time()

		local CharacterData
		local FireToServer = false

		-- Play boing sound
		if projectile:FindFirstChild("Boing") then
			if not projectile.Boing.IsPlaying and (damage > 12) then
				projectile.Boing:Play()
			end
		end

		-- Evaluate SB fly status
		if ProjectileType == "Superball" and (Player and Player == Players.LocalPlayer) and not SetGlobal then
			if Settings.SuperballJump and not Settings.SuperballFly then
				if _G.BB.CanSBFly then

					SetGlobal = true
					task.delay(.1, function() _G.BB.CanSBFly = false end)
				end
			end
		end

		-- Evaluate damage
		if humanoid and not hitHumanoid then
			if Kill:CanDamage(player, humanoid, false) then
				hitHumanoid = true
				FireToServer = true

				PaintballDamageMultiplier(projectile, hit)

				-- Instant damage
				if Settings.InstantDamage then
					if (humanoid.Health - projectile.Damage.Value) <= 0 then
						if (humanoid.Health == humanoid.MaxHealth) then --Fix health not updating if target player is full health
							task.delay(3, function() if math.abs(humanoid.Health - .1) < 1e6 then humanoid.Health = humanoid.MaxHealth end end)
						end
						humanoid.Health = .1
					else
						humanoid:TakeDamage(projectile.Damage.Value)
					end
				end

				-- Get character positions at multiple frames
				if Player then
					CharacterData = PSPV:CreateCharFrameTables(Player, _G.BB.SlaveTimeTable)
				end

				-- Play sound
				if _G.BB.Local.Hit ~= "None" then
					_G.BB.ClientObjects.Sounds.Hit[_G.BB.Local.Hit]:Play()
				end

				Aesthetics:CreateVisual(hit, player, false)

				TouchedConnection:Disconnect()

				if ProjectileType == "Superball" or ProjectileType == "Slingshot" then
					Delete(projectile, 1)
				end

			elseif humanoid.Parent ~= player.Character then

				if _G.BB.Local.BlockedHit ~="None" then
					local Sound = _G.BB.ClientObjects.Sounds.Blocked[_G.BB.Local.BlockedHit]
					if not Sound.Playing then
						Sound:Play()
					end
				end

				if ProjectileType == "PaintballGun" and PaintballColorCallback(hit, player) and Settings.InstantDamage then
					FireToServer = true

					projectile.Ready.Value = false
					Aesthetics:PaintballColor(hit, projectile.Color)
					Aesthetics:ExplodePaintball(projectile)

					TouchedConnection:Disconnect()
				end
			end
		elseif CanHalfDamage and IsAcceptableHit(player,hit) then
			CanHalfDamage = false

			-- Halving value on the client for instant damage purposes
			if ProjectileType == "Superball" or ProjectileType == "Slingshot" then
				local function halfDamage()
					projectile.Damage.Value = projectile.Damage.Value / 2
				end

				local halfDmgDelay = Settings.Ricochet.HalfDamageDelay
				local resetDelay = Settings.Ricochet.ResetStateDelay

				local function evaluateRicochet()
					if projectile.Damage.Value <= 3 then
						Delete(projectile, .2)
					else
						CanHalfDamage = true -- reset bool
					end
				end

				task.delay(halfDmgDelay, halfDamage)
				task.delay(resetDelay, evaluateRicochet)
			end
		end

		if IsAcceptableHit(player, hit) or (hat and ProjectileType == "PaintballGun" ) then
			FireToServer = true

			if ProjectileType == "PaintballGun" then
				if PaintballColorCallback(hit, player) and Settings.InstantDamage then
					Aesthetics:PaintballColor(hit, projectile.Color)
				end

				if humanoid ~= player.Character.Humanoid and not hat then
					TouchedConnection:Disconnect()

					projectile.Ready.Value = false
					Aesthetics:ExplodePaintball(projectile)
				end
			end
		end

		if FireToServer then
			local ID_array = {
				projectile.ProjectileType.Value, -- string
				projectile.Count.Value -- integer
			}


			local sendingTable = {
				ID_array,
				hit,  -- hit part
				projectile.Damage.Value, -- integer
			}

			if _G.BB.Settings.Security.Master then

				local securityInfo = {
					p1, v1, t1, -- post hit position, velocity, and time
					CharacterData, -- table with cframe of char data (nil if security is off)
					FPS
				}

				for i = 1, #securityInfo do
					table.insert(sendingTable, securityInfo)
				end
			end

			HitRemote:FireServer(table.unpack(sendingTable))
		end
	end)
end

function HitModule:RegisterEvents()
	--[[
	Velocity parameter (v1) here can be spoofed, as we can't verify its direction component.
	Can't verify with a raycast because a ray is a singular collision point,
	while the ball is a 3D collision box whose collision effects we cannot replicate

	p1 = PostPosition
	v1 = PostVelocity
	t1 = PostTime
	]]
	local Security = require(_G.BB.Modules.Security)
	HitRemote.OnServerEvent:Connect(function(playerFired, ID_array, HitPart, sentDmg, p1, v1, t1, CharacterData, ClientPhysicsFPS)
		local Now = time()

		local PhysicsFolder = Security:GetPhysicsFolder(ID_array, playerFired, true)

		if not PhysicsFolder then
			return
		end

		local ProjectileType = PhysicsFolder.ProjectileType.Value

		local UniqueID = PhysicsFolder.UniqueID.Value
		local Humanoid = HitPart and (HitPart.Parent ~= nil) and HitPart.Parent:FindFirstChildWhichIsA("Humanoid")
		local HitPlayer = Humanoid and Players:GetPlayerFromCharacter(HitPart.Parent)

		local hat = HitPart and HitPart.Parent and table.find(PBG_Classes, HitPart.Parent.ClassName)

		if not Security:ApproveHit(PhysicsFolder, HitPlayer, p1, v1, t1, CharacterData, ClientPhysicsFPS) then
			return
		end

		if not HitPart or not HitPart.Parent then
			if _G.BB.Settings.Security.Update.Warn then
				--print("Projectile hit a local part!")
			end
			return
		end

		-- Verify hit via PSPV and deal damage
		if Humanoid
			and not hat
			and PhysicsFolder.Active.Value
			and Kill:CanDamage(playerFired, Humanoid, Settings[ProjectileType].SelfDamage) then

			local damage = PaintballDamageMultiplier(PhysicsFolder, HitPart)
				or (Settings.Security.Ricochet and PhysicsFolder.Damage.Value
					or sentDmg)

			if not ProjectileType == "PaintballGun" and (damage > Settings[ProjectileType].Damage) then
				warn(playerFired.Name.." exceeded max damage with weapon:", ProjectileType)
				return
			end

			-- Tag, deal damage, and deactivate
			Kill:TagHumanoid(playerFired, Humanoid, PhysicsFolder, ProjectileType)
			Humanoid:TakeDamage(damage)
			HitRemote:FireAllClients(playerFired, HitPart, false) -- Hit indicators
			PhysicsFolder.Active.Value = false
		end

		if ProjectileType == "PaintballGun" and PaintballColorCallback(HitPart, playerFired) then
			local ProjectileColor = PhysicsFolder.RandomColor.Value
			Aesthetics:PaintballColor(HitPart, ProjectileColor)
		end

		if not HitPart.CanCollide and
			(playerFired.Character:IsAncestorOf(HitPart)) and
			not _G.BB.Settings[ProjectileType].SelfDamage then
			return
		end

		if (ProjectileType == "PaintballGun" and HitPart.CanCollide and not Humanoid) then
			PhysicsFolder.Active.Value = false
			return
		end

		-- Half damage
		if Settings.Security.Ricochet then
			local CanHalfDamage = PhysicsFolder:FindFirstChild("CanHalfDamage")
			if CanHalfDamage and CanHalfDamage.Value then
				CanHalfDamage.Value = false

				local function halfDamage()
					PhysicsFolder.Damage.Value = PhysicsFolder.Damage.Value / 2
				end

				local function evaluateRicochet()
					if PhysicsFolder.Damage.Value <= 3 then
						PhysicsFolder.Active.Value = false
					else
						CanHalfDamage.Value = true
					end
				end

				task.delay(Settings.Ricochet.HalfDamageDelay, halfDamage)
				task.delay(Settings.Ricochet.ResetStateDelay, evaluateRicochet)
			end
		end

	end)
end

return HitModule
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="BillboardGui" referent="RBX30027C1DD4E04A1995C2220420161D29">
							<Properties>
								<bool name="Active">true</bool>
								<Ref name="Adornee">null</Ref>
								<bool name="AlwaysOnTop">false</bool>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<bool name="AutoLocalize">true</bool>
								<float name="Brightness">1</float>
								<bool name="ClipsDescendants">true</bool>
								<float name="DistanceLowerLimit">0</float>
								<float name="DistanceStep">0</float>
								<float name="DistanceUpperLimit">-1</float>
								<bool name="Enabled">true</bool>
								<Vector3 name="ExtentsOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="ExtentsOffsetWorldSpace">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<float name="LightInfluence">0</float>
								<float name="MaxDistance">INF</float>
								<string name="Name">TimeDisplay</string>
								<Ref name="PlayerToHideFrom">null</Ref>
								<bool name="ResetOnSpawn">true</bool>
								<Ref name="RootLocalizationTable">null</Ref>
								<token name="SelectionBehaviorDown">0</token>
								<token name="SelectionBehaviorLeft">0</token>
								<token name="SelectionBehaviorRight">0</token>
								<token name="SelectionBehaviorUp">0</token>
								<bool name="SelectionGroup">false</bool>
								<UDim2 name="Size">
									<XS>3</XS>
									<XO>0</XO>
									<YS>3</YS>
									<YO>0</YO>
								</UDim2>
								<Vector2 name="SizeOffset">
									<X>0</X>
									<Y>0</Y>
								</Vector2>
								<int64 name="SourceAssetId">-1</int64>
								<Vector3 name="StudsOffset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="StudsOffsetWorldSpace">
									<X>0</X>
									<Y>10</Y>
									<Z>0</Z>
								</Vector3>
								<BinaryString name="Tags"></BinaryString>
								<token name="ZIndexBehavior">1</token>
							</Properties>
							<Item class="Frame" referent="RBX35EDFDC6E6DB4C09AB2AE4D8A4682C80">
								<Properties>
									<bool name="Active">false</bool>
									<Vector2 name="AnchorPoint">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="AutoLocalize">true</bool>
									<token name="AutomaticSize">0</token>
									<Color3 name="BackgroundColor3">
										<R>1</R>
										<G>1</G>
										<B>1</B>
									</Color3>
									<float name="BackgroundTransparency">0</float>
									<Color3 name="BorderColor3">
										<R>0</R>
										<G>0</G>
										<B>0</B>
									</Color3>
									<token name="BorderMode">2</token>
									<int name="BorderSizePixel">2</int>
									<bool name="ClipsDescendants">false</bool>
									<bool name="Draggable">false</bool>
									<int name="LayoutOrder">0</int>
									<string name="Name">Frame</string>
									<Ref name="NextSelectionDown">null</Ref>
									<Ref name="NextSelectionLeft">null</Ref>
									<Ref name="NextSelectionRight">null</Ref>
									<Ref name="NextSelectionUp">null</Ref>
									<UDim2 name="Position">
										<XS>0</XS>
										<XO>0</XO>
										<YS>0</YS>
										<YO>0</YO>
									</UDim2>
									<Ref name="RootLocalizationTable">null</Ref>
									<float name="Rotation">0</float>
									<bool name="Selectable">false</bool>
									<token name="SelectionBehaviorDown">0</token>
									<token name="SelectionBehaviorLeft">0</token>
									<token name="SelectionBehaviorRight">0</token>
									<token name="SelectionBehaviorUp">0</token>
									<bool name="SelectionGroup">false</bool>
									<Ref name="SelectionImageObject">null</Ref>
									<int name="SelectionOrder">0</int>
									<UDim2 name="Size">
										<XS>1</XS>
										<XO>0</XO>
										<YS>1</YS>
										<YO>0</YO>
									</UDim2>
									<token name="SizeConstraint">0</token>
									<int64 name="SourceAssetId">-1</int64>
									<token name="Style">0</token>
									<BinaryString name="Tags"></BinaryString>
									<bool name="Visible">true</bool>
									<int name="ZIndex">1</int>
								</Properties>
								<Item class="TextLabel" referent="RBX6B47F2F0461F44788E9B21501105D292">
									<Properties>
										<bool name="Active">false</bool>
										<Vector2 name="AnchorPoint">
											<X>0.5</X>
											<Y>0.5</Y>
										</Vector2>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="AutoLocalize">true</bool>
										<token name="AutomaticSize">0</token>
										<Color3 name="BackgroundColor3">
											<R>1</R>
											<G>1</G>
											<B>1</B>
										</Color3>
										<float name="BackgroundTransparency">1</float>
										<Color3 name="BorderColor3">
											<R>0.105882362</R>
											<G>0.164705887</G>
											<B>0.207843155</B>
										</Color3>
										<token name="BorderMode">0</token>
										<int name="BorderSizePixel">0</int>
										<bool name="ClipsDescendants">false</bool>
										<bool name="Draggable">false</bool>
										<Font name="FontFace">
											<Family><url>rbxasset://fonts/families/SourceSansPro.json</url></Family>
											<Weight>400</Weight>
											<Style>Normal</Style>
											<CachedFaceId><url>rbxasset://fonts/SourceSansPro-Regular.ttf</url></CachedFaceId>
										</Font>
										<int name="LayoutOrder">0</int>
										<float name="LineHeight">1</float>
										<int name="MaxVisibleGraphemes">-1</int>
										<string name="Name">TextLabel</string>
										<Ref name="NextSelectionDown">null</Ref>
										<Ref name="NextSelectionLeft">null</Ref>
										<Ref name="NextSelectionRight">null</Ref>
										<Ref name="NextSelectionUp">null</Ref>
										<UDim2 name="Position">
											<XS>0.5</XS>
											<XO>0</XO>
											<YS>0.5</YS>
											<YO>0</YO>
										</UDim2>
										<bool name="RichText">false</bool>
										<Ref name="RootLocalizationTable">null</Ref>
										<float name="Rotation">0</float>
										<bool name="Selectable">false</bool>
										<token name="SelectionBehaviorDown">0</token>
										<token name="SelectionBehaviorLeft">0</token>
										<token name="SelectionBehaviorRight">0</token>
										<token name="SelectionBehaviorUp">0</token>
										<bool name="SelectionGroup">false</bool>
										<Ref name="SelectionImageObject">null</Ref>
										<int name="SelectionOrder">0</int>
										<UDim2 name="Size">
											<XS>0.800000012</XS>
											<XO>0</XO>
											<YS>0.800000012</YS>
											<YO>0</YO>
										</UDim2>
										<token name="SizeConstraint">0</token>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<string name="Text">t = 0</string>
										<Color3 name="TextColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<bool name="TextScaled">true</bool>
										<float name="TextSize">14</float>
										<Color3 name="TextStrokeColor3">
											<R>0</R>
											<G>0</G>
											<B>0</B>
										</Color3>
										<float name="TextStrokeTransparency">1</float>
										<float name="TextTransparency">0</float>
										<token name="TextTruncate">0</token>
										<bool name="TextWrapped">true</bool>
										<token name="TextXAlignment">2</token>
										<token name="TextYAlignment">1</token>
										<bool name="Visible">true</bool>
										<int name="ZIndex">1</int>
									</Properties>
								</Item>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="NumberValue" referent="RBX691E2D8EA0B34BDD83BD74F66ECC2C3A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">SERVER_TIME</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<double name="Value">0</double>
					</Properties>
				</Item>
				<Item class="Folder" referent="RBXDF145D148A26449A9651DDB07A471CAA">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Themes</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBX03146DD7F763470EAB19CD42E515D4E4">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Normal</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Color3Value" referent="RBXCD46AA5528514C89B38DD16FC9F49B85">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">HitColor</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Color3 name="Value">
									<R>1</R>
									<G>0.505882382</G>
									<B>0.00784313772</B>
								</Color3>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBX843DEE11202C44EF814E78D90567B961">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">PaintballGun</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBX5A6CCE45100D4028ADD99E32E9E45ED3">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4283804160</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Paintball</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
								<Item class="Trail" referent="RBXA48309A7BA594101A5CA16851B62E662">
									<Properties>
										<Ref name="Attachment0">null</Ref>
										<Ref name="Attachment1">null</Ref>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="Brightness">1</float>
										<ColorSequence name="Color">0 0.333333 0.666667 0 0 1 0.054902 0.113725 0 0 </ColorSequence>
										<bool name="Enabled">true</bool>
										<bool name="FaceCamera">true</bool>
										<float name="Lifetime">0.600000024</float>
										<float name="LightEmission">0</float>
										<float name="LightInfluence">0</float>
										<float name="MaxLength">20</float>
										<float name="MinLength">0.100000001</float>
										<string name="Name">Trail</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="Texture"><url>rbxassetid://6012541720</url></Content>
										<float name="TextureLength">0.920000017</float>
										<token name="TextureMode">0</token>
										<NumberSequence name="Transparency">0 0 0 0.92 1 0 1 1 0 </NumberSequence>
										<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXB1D55E9D667941CB9C550D7AEA1274FC">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Rocket</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBXE4D5A425D55342678139AA07CFE1FF73">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">3</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">3</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-315.175781</X>
										<Y>28.1212273</Y>
										<Z>-198.968689</Z>
										<R00>0.152875558</R00>
										<R01>-0.390300572</R01>
										<R02>-0.907906651</R02>
										<R10>-5.60227065e-09</R10>
										<R11>0.918705642</R11>
										<R12>-0.394942939</R12>
										<R20>0.988245428</R20>
										<R21>0.0603771284</R21>
										<R22>0.140447631</R22>
									</CoordinateFrame>
									<bool name="CanCollide">false</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279069100</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">3</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">3</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">true</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Rocket</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">3</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags">Um9ja2V0AFByb2plY3RpbGU=</BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">3</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>54.4743996</X>
										<Y>23.6965771</Y>
										<Z>-8.42685795</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="Trail" referent="RBXAF302F3DC3B54A379ABE2D0A9F19C54C">
									<Properties>
										<Ref name="Attachment0">null</Ref>
										<Ref name="Attachment1">null</Ref>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="Brightness">1</float>
										<ColorSequence name="Color">0 0.0509804 0.411765 0.67451 0 1 0 0.121569 0.407843 0 </ColorSequence>
										<bool name="Enabled">true</bool>
										<bool name="FaceCamera">true</bool>
										<float name="Lifetime">0.600000024</float>
										<float name="LightEmission">0</float>
										<float name="LightInfluence">0</float>
										<float name="MaxLength">20</float>
										<float name="MinLength">0.100000001</float>
										<string name="Name">Trail</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="Texture"><url>rbxassetid://6012541720</url></Content>
										<float name="TextureLength">0.920000017</float>
										<token name="TextureMode">0</token>
										<NumberSequence name="Transparency">0 0 0 0.92 1 0 1 1 0 </NumberSequence>
										<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXABB96C5CC64D49AE833C6239725A6C02">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Slingshot</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBXAB99C572FE1C42B1A9E22703BBBCD226">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4284177769</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Pellet</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>1</Y>
										<Z>1</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX0FEA10F8A7794C50BF756522FF324823">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Superball</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBX5F6385A393DB43CF8E6F2C35E8248B7C">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Superball</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>2</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
								<Item class="Trail" referent="RBX904CF0B1D4654AF397871E8137414681">
									<Properties>
										<Ref name="Attachment0">null</Ref>
										<Ref name="Attachment1">null</Ref>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="Brightness">1</float>
										<ColorSequence name="Color">0 0.666667 0 0 0 1 0.333333 0 0 0 </ColorSequence>
										<bool name="Enabled">true</bool>
										<bool name="FaceCamera">true</bool>
										<float name="Lifetime">0.600000024</float>
										<float name="LightEmission">0</float>
										<float name="LightInfluence">0</float>
										<float name="MaxLength">20</float>
										<float name="MinLength">0.100000001</float>
										<string name="Name">Trail</string>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="Texture"><url>rbxassetid://6012541720</url></Content>
										<float name="TextureLength">0.920000017</float>
										<token name="TextureMode">0</token>
										<NumberSequence name="Transparency">0 0 0 0.92 1 0 1 1 0 </NumberSequence>
										<NumberSequence name="WidthScale">0 1 0 1 1 0 </NumberSequence>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX5868AA36C056455ABDA15E244DE80028">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Sword</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBX7796D7B7A720423BB3A882A604DEB4F5">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-260.254883</X>
										<Y>6.35914135</Y>
										<Z>-206.326324</Z>
										<R00>-0.99999994</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>0</R11>
										<R12>-1</R12>
										<R20>0</R20>
										<R21>-0.99999994</R21>
										<R22>0</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Handle</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0.400000006</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">2</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>1</X>
										<Y>0.800000012</Y>
										<Z>4</Z>
									</Vector3>
								</Properties>
								<Item class="SpecialMesh" referent="RBX02E6220F280348ADBEBD7D07C880DA36">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<Content name="MeshId"><url>rbxasset://fonts/sword.mesh</url></Content>
										<token name="MeshType">5</token>
										<string name="Name">Mesh</string>
										<Vector3 name="Offset">
											<X>0</X>
											<Y>0</Y>
											<Z>0</Z>
										</Vector3>
										<Vector3 name="Scale">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<Content name="TextureId"><url>rbxasset://textures/SwordTexture.png</url></Content>
										<Vector3 name="VertexColor">
											<X>1</X>
											<Y>1</Y>
											<Z>1</Z>
										</Vector3>
									</Properties>
								</Item>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXCBAB0EFD1A5E4E5CAB197586E0263A3F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Trowel</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBX7952F6EB820C44B8BC08E49A05A75BF5">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>-28.8704643</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Brick</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">1</token>
									<Vector3 name="size">
										<X>4</X>
										<Y>1</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="UIGradient" referent="RBXBED439D575B34F5591E90EB269EB7DEF">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<ColorSequence name="Color">0 0.498039 0.498039 0.498039 0 1 0.498039 0.498039 0.498039 0 </ColorSequence>
									<bool name="Enabled">true</bool>
									<string name="Name">Color</string>
									<Vector2 name="Offset">
										<X>0</X>
										<Y>0</Y>
									</Vector2>
									<float name="Rotation">0</float>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<NumberSequence name="Transparency">0 0 0 1 0 0 </NumberSequence>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX5626FCC108A24DBA8241107624B8B069">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Bomb</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Part" referent="RBX75B8F34958A0498BB5AF87427E34D4B3">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">true</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4279970357</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Base</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>2</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Color3Value" referent="RBXF3964A128738419E9422B6FAFFB2902B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">TickColor</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<Color3 name="Value">
										<R>0.666666687</R>
										<G>0</G>
										<B>0</B>
									</Color3>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXE37F3F810C9840548F31BAE28EFD8C55">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">ExplosionParticles</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="ParticleEmitter" referent="RBXB1C4B0CA5EA9423F8ECF127C8B7EECEA">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>1.25</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.792157 0.0627451 0 0 1 0.976471 0.815686 0 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<NumberRange name="Lifetime">0.25 0.5 </NumberRange>
									<float name="LightEmission">0.349999994</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">Fire</string>
									<token name="Orientation">0</token>
									<float name="Rate">500</float>
									<NumberRange name="RotSpeed">-90 90 </NumberRange>
									<NumberRange name="Rotation">-45 45 </NumberRange>
									<token name="Shape">0</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.5 0.45 0.494 1 0.5 0.903 0.5 0.45 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">7.5 15 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>1000</X>
										<Y>1000</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=245591535</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 1 0 0.113466 0.33125 0.1 0.334165 0.10625 0.0625 0.48005 0.05 0.05 0.73192 0.1125 0.04375 0.841646 0.34375 0.0972782 0.887781 0.6 0.1 0.958853 0.8375 0.0916895 1 1 0 </NumberSequence>
									<float name="VelocityInheritance">0</float>
									<bool name="WindAffectsDrag">false</bool>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="ParticleEmitter" referent="RBXFC585ED283E24DDF95096BA1F27FD662">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>75</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.686275 0.67451 0.596078 0 1 0.117647 0.117647 0.117647 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<NumberRange name="Lifetime">0.45 0.5 </NumberRange>
									<float name="LightEmission">0</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">Smoke</string>
									<token name="Orientation">0</token>
									<float name="Rate">75</float>
									<NumberRange name="RotSpeed">-90 90 </NumberRange>
									<NumberRange name="Rotation">-45 45 </NumberRange>
									<token name="Shape">0</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.1 0.05 0.494 0.25 0.125 0.95 1.25 0.5 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">0 0 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>100</X>
										<Y>100</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=245591535</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 1 0 0.113466 0.33125 0.1 0.334165 0.10625 0.0625 0.48005 0.05 0.05 0.73192 0.1125 0.04375 0.841646 0.34375 0.0972782 0.887781 0.6 0.1 0.958853 0.8375 0.0916895 1 1 0 </NumberSequence>
									<float name="VelocityInheritance">0</float>
									<bool name="WindAffectsDrag">false</bool>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="ParticleEmitter" referent="RBX4F06FDD93F7247A8A0DE21023D66C2A2">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>-10</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.960784 0.639216 0 0 1 0.976471 0.815686 0 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<NumberRange name="Lifetime">0.25 0.5 </NumberRange>
									<float name="LightEmission">1</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">Sparks</string>
									<token name="Orientation">0</token>
									<float name="Rate">250</float>
									<NumberRange name="RotSpeed">-90 90 </NumberRange>
									<NumberRange name="Rotation">-45 45 </NumberRange>
									<token name="Shape">0</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.05 0.025 0.494 0.1 0.05 0.903 0.05 0.025 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">15 15 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>1000</X>
										<Y>1000</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=293257816</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 1 0 0.113466 0.33125 0.1 0.334165 0.10625 0.0625 0.48005 0.05 0.05 0.73192 0.1125 0.04375 0.841646 0.34375 0.0972782 0.887781 0.6 0.1 0.958853 0.8375 0.0916895 1 1 0 </NumberSequence>
									<float name="VelocityInheritance">0</float>
									<bool name="WindAffectsDrag">false</bool>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
							<Item class="ParticleEmitter" referent="RBX3CD3BE753EED45D0B190E8A41BB1F344">
								<Properties>
									<Vector3 name="Acceleration">
										<X>0</X>
										<Y>-1.25</Y>
										<Z>0</Z>
									</Vector3>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="Brightness">1</float>
									<ColorSequence name="Color">0 0.960784 0.290196 0.0235294 0 1 0.976471 0.192157 0.309804 0 </ColorSequence>
									<float name="Drag">0</float>
									<token name="EmissionDirection">1</token>
									<bool name="Enabled">false</bool>
									<NumberRange name="FlipbookFramerate">1 1 </NumberRange>
									<string name="FlipbookIncompatible">Particle texture must be 1024 by 1024 to use flipbooks.</string>
									<token name="FlipbookLayout">0</token>
									<token name="FlipbookMode">0</token>
									<bool name="FlipbookStartRandom">false</bool>
									<NumberRange name="Lifetime">0.25 0.5 </NumberRange>
									<float name="LightEmission">1</float>
									<float name="LightInfluence">0</float>
									<bool name="LockedToPart">false</bool>
									<string name="Name">Stars</string>
									<token name="Orientation">0</token>
									<float name="Rate">125</float>
									<NumberRange name="RotSpeed">-90 90 </NumberRange>
									<NumberRange name="Rotation">-45 45 </NumberRange>
									<token name="Shape">0</token>
									<token name="ShapeInOut">0</token>
									<float name="ShapePartial">1</float>
									<token name="ShapeStyle">0</token>
									<NumberSequence name="Size">0 0.05 0.025 0.494 0.1 0.05 0.903 0.05 0.025 1 0 0 </NumberSequence>
									<int64 name="SourceAssetId">-1</int64>
									<NumberRange name="Speed">15 15 </NumberRange>
									<Vector2 name="SpreadAngle">
										<X>1000</X>
										<Y>1000</Y>
									</Vector2>
									<NumberSequence name="Squash">0 0 0 1 0 0 </NumberSequence>
									<BinaryString name="Tags"></BinaryString>
									<Content name="Texture"><url>http://www.roblox.com/asset/?id=326141921</url></Content>
									<float name="TimeScale">1</float>
									<NumberSequence name="Transparency">0 1 0 0.113466 0.33125 0.1 0.334165 0.10625 0.0625 0.48005 0.05 0.05 0.73192 0.1125 0.04375 0.841646 0.34375 0.0972782 0.887781 0.6 0.1 0.958853 0.8375 0.0916895 1 1 0 </NumberSequence>
									<float name="VelocityInheritance">0</float>
									<bool name="WindAffectsDrag">false</bool>
									<float name="ZOffset">0</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX3AFEDA6E5E20450DA7F58840373D00D5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Explosion</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="NumberValue" referent="RBXB93119F5918C40769A65181C9AF04EC5">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">BaseTime</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="Value">0.2999999999999999889</double>
								</Properties>
							</Item>
							<Item class="NumberValue" referent="RBX7129515305C345F2949C63D6B9B086EE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">ThemeTime</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="Value">0.5999999999999999778</double>
								</Properties>
							</Item>
							<Item class="Part" referent="RBXA1F85BE0DEE4403EA03219A1309FC422">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">false</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4292815903</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">256</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Base</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0.400000006</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>2</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
							<Item class="Part" referent="RBX03923FED3937456B90A18CF6FF3C0B0C">
								<Properties>
									<bool name="Anchored">false</bool>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="BackParamA">-0.5</float>
									<float name="BackParamB">0.5</float>
									<token name="BackSurface">0</token>
									<token name="BackSurfaceInput">0</token>
									<float name="BottomParamA">-0.5</float>
									<float name="BottomParamB">0.5</float>
									<token name="BottomSurface">0</token>
									<token name="BottomSurfaceInput">0</token>
									<CoordinateFrame name="CFrame">
										<X>-253.131851</X>
										<Y>24.4894829</Y>
										<Z>-46.2263412</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<bool name="CanCollide">true</bool>
									<bool name="CanQuery">true</bool>
									<bool name="CanTouch">true</bool>
									<bool name="CastShadow">false</bool>
									<string name="CollisionGroup">Default</string>
									<int name="CollisionGroupId">0</int>
									<Color3uint8 name="Color3uint8">4294928387</Color3uint8>
									<PhysicalProperties name="CustomPhysicalProperties">
										<CustomPhysics>false</CustomPhysics>
									</PhysicalProperties>
									<float name="FrontParamA">-0.5</float>
									<float name="FrontParamB">0.5</float>
									<token name="FrontSurface">0</token>
									<token name="FrontSurfaceInput">0</token>
									<float name="LeftParamA">-0.5</float>
									<float name="LeftParamB">0.5</float>
									<token name="LeftSurface">0</token>
									<token name="LeftSurfaceInput">0</token>
									<bool name="Locked">false</bool>
									<bool name="Massless">false</bool>
									<token name="Material">288</token>
									<string name="MaterialVariantSerialized"></string>
									<string name="Name">Theme</string>
									<CoordinateFrame name="PivotOffset">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
										<R00>1</R00>
										<R01>0</R01>
										<R02>0</R02>
										<R10>0</R10>
										<R11>1</R11>
										<R12>0</R12>
										<R20>0</R20>
										<R21>0</R21>
										<R22>1</R22>
									</CoordinateFrame>
									<float name="Reflectance">0</float>
									<float name="RightParamA">-0.5</float>
									<float name="RightParamB">0.5</float>
									<token name="RightSurface">0</token>
									<token name="RightSurfaceInput">0</token>
									<int name="RootPriority">0</int>
									<Vector3 name="RotVelocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<float name="TopParamA">-0.5</float>
									<float name="TopParamB">0.5</float>
									<token name="TopSurface">0</token>
									<token name="TopSurfaceInput">0</token>
									<float name="Transparency">0</float>
									<Vector3 name="Velocity">
										<X>0</X>
										<Y>0</Y>
										<Z>0</Z>
									</Vector3>
									<token name="formFactorRaw">1</token>
									<token name="shape">0</token>
									<Vector3 name="size">
										<X>2</X>
										<Y>2</Y>
										<Z>2</Z>
									</Vector3>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXF1235865C7564691906F1323E3E8124B">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">StarterPack</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Tool" referent="RBX3F4E144D330A4009A3B939D685B9781A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">false</bool>
						<CoordinateFrame name="Grip">
							<X>0</X>
							<Y>0</Y>
							<Z>-1.5</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>-1</R10>
							<R11>0</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Sword</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Sword128.png</url></Content>
						<string name="ToolTip">Sword</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="RemoteEvent" referent="RBX5A819C21E93242F0962FA06E6015C0F7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Grip</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX238214C5C4E54CAC80015A9E84792D11">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">SwordModule</string>
							<string name="ScriptGuid">{845B9FE2-14D0-450C-8FF3-1E9DAFCD7270}</string>
							<ProtectedString name="Source"><![CDATA[local Sword = {}
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

function Sword:PositionLunge(tool)
	Aesthetics:ToggleSwordTrail(tool.Handle,true)
	tool.GripForward = Vector3.new(0, 0, 1);
	tool.GripRight = Vector3.new(0, -1, 0);
	tool.GripUp = Vector3.new(-1, 0, 0);
	--tool.GripForward = Vector3.new(0,1,0)
	--tool.GripRight = Vector3.new(0,0,-1)
	--tool.GripUp = Vector3.new(1,0,0)
end

function Sword:PositionIdle(tool)
	Aesthetics:ToggleSwordTrail(tool.Handle)
	tool.GripForward = Vector3.new(-1 ,0 ,0);
	tool.GripRight = Vector3.new(0, 1, 0);
	tool.GripUp = Vector3.new(0, 0, 1);
	--tool.GripForward = Vector3.new(1,0,0)
	--tool.GripRight = Vector3.new(0,0,1)
	--tool.GripUp = Vector3.new(0,1,0)
end

function Sword:CheckJoint(Character,Handle)
	local Humanoid = Character:FindFirstChild("Humanoid")
	if not Humanoid then
		return false
	end
	local ArmOption1 = Character:FindFirstChild("Right Arm")
	local ArmOption2 = Character:FindFirstChild("RightHand")

	local Arm = Humanoid.RigType == Enum.HumanoidRigType.R6 and ArmOption1 or ArmOption2
	if not Arm then
		return false
	end
	local Joint = Arm:FindFirstChild("RightGrip")
	if not Joint then
		return false
	end
	if not (Joint.Part0 == Handle or Joint.Part1 == Handle) then
		return false
	end
	return true
end


return Sword
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX6028A737823A4237A3100D00DC8D9CF7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX04764526A2264FCD8E519C566937E869">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SwordClient</string>
								<string name="ScriptGuid">{727D18A2-9B03-4C33-92E9-1C2EFCB4FD05}</string>
								<ProtectedString name="Source"><![CDATA[local Sword = {}

local tool = script.Parent.Parent
local UserInput = game:GetService("UserInputService")
local Collections = game:GetService("CollectionService")

local currentState = "Up"

local function createToolAnim(animName)
	local toolAnim = Instance.new("StringValue")
	toolAnim.Name = ("toolanim")
	toolAnim.Value = animName
	Collections:AddTag(toolAnim,"SwordObject")
	toolAnim.Parent = tool
end

local function createClientSound(Name, handle)
	local Sound = handle:WaitForChild(Name)

	local NewSound = Sound:Clone()
	NewSound.Name = "Client"..NewSound.Name
	NewSound.Parent = handle
	Sound:Destroy()

	return NewSound
end



function Sword:Lunge()
	local FloatAmount = _G.BB.Settings.Sword.FloatAmount
	local JumpHeight = _G.BB.Settings.Sword.JumpHeight
	local LungeDelayTime = _G.BB.Settings.Sword.LungeDelayTime
	local LungeExtensionTime = _G.BB.Settings.Sword.LungeExtensionTime

	createToolAnim("Lunge")

	local root = self.Character:FindFirstChild("HumanoidRootPart")
	local isHoldingSpace = game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space)
	local isInAirMaterial = self.Humanoid.FloorMaterial == Enum.Material.Air
	local isInAirState = (
		self.Humanoid:GetState() == Enum.HumanoidStateType.Jumping or
			self.Humanoid:GetState() == Enum.HumanoidStateType.Freefall
	)

	if root and (isInAirMaterial or isInAirState or isHoldingSpace or self.Humanoid.Jump) and (FloatAmount > 0) then

		--Once upon a time the sword Handle had a mass, making the character mass 14.84.
		--Everyone defined their FloatAmount based on this mass value for the player.
		--We fixed the sword having a mass, but this means characters now weigh 12.6 units.
		--This correctionFactor makes it so people who override the floatAmount won't see a change in sword force when this is pushed.
		local correctionFactor = 12.6 / 14.84

		local lungeForce = Instance.new("BodyVelocity")
		lungeForce.Velocity = Vector3.new(0, JumpHeight, 0)
		lungeForce.MaxForce = Vector3.new(0, FloatAmount * correctionFactor, 0)
		lungeForce.Name = "LungeForce"

		Collections:AddTag(lungeForce, "SwordObject")

		lungeForce.Parent = root

		game:GetService("Debris"):AddItem(lungeForce, .5)
	end

	if LungeDelayTime > 0 then
		--task.wait(LungeDelayTime)
		SafeWait.wait(LungeDelayTime)
	end

	self.lungeSound:Play()

	-- since input is delayed by .1 seconds to replicate classic feel, fire to the server ahead of time
	self.GripEvent:FireServer("Out")

	-- client only animations
	currentState = ("Out")
	self.SwordModule:PositionLunge(tool)

	--task.wait(LungeExtensionTime)
	SafeWait.wait(LungeExtensionTime)

	currentState = ("Up")
	self.SwordModule:PositionIdle(tool)
	self.GripEvent:FireServer("Up")
end

function Sword:Slash()
	self.slashSound:Play()
	currentState = ("Attack")
	createToolAnim("Slash")
	self.GripEvent:FireServer("Down")
end

function Sword:Init()
	local Player = game:GetService("Players").LocalPlayer
	local Character = Player.Character

	self.Character = Character
	self.Humanoid = Character:WaitForChild("Humanoid")

	tool:WaitForChild("Handle")
	self.GripEvent = tool:WaitForChild("Grip")
	self.SwordModule = require(tool:WaitForChild("SwordModule"))

	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))
	local Kill = require(_G.BB.Modules:WaitForChild("Kill"))
	local PSPV = require(_G.BB.Modules.Security:WaitForChild("PSPV"))
	SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))
	local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

	local handle = tool:WaitForChild("Handle")
	local Activation = tool:WaitForChild("Activation")
	local Damage = tool:WaitForChild("Damage")

	local IsTrueMobile = UserInput.TouchEnabled and not UserInput.MouseEnabled
	local lastInput = -1
	local equipped = false

	HandleCrosshair(tool)
	Aesthetics:HandleSword(Player, handle)

	self.equipSound = createClientSound("Equip", handle)
	self.slashSound = createClientSound("Slash", handle)
	self.lungeSound = createClientSound("Lunge", handle)

	local function Activate()
		if not tool.Enabled or not equipped then
			return
		end

		tool.Enabled = false

		local now = tick()
		if now - lastInput < _G.BB.Settings.Sword.DoubleClickTime then
			self:Lunge()
		else
			self:Slash()
		end

		lastInput = now

		task.wait(_G.BB.Settings.Sword.ReloadTime)

		tool.Enabled = true
	end

	Activation.Event:Connect(Activate)

	local mobileDoubleTapTime = 0.2
	local last = -10

	local function ActivateJump()
		local now = tick()

		if _G.BB.TrueMobile and _G.BB.Local.MobileJump then

			if now - last < mobileDoubleTapTime then
				Activate()
			end

			last = now
		end
	end


	if _G.BB.TrueMobile and _G.BB.Settings.Mobile.DoubleJumpToSwordLunge
		and _G.BB.Local.MobileJump then
		UserInput.JumpRequest:Connect(ActivateJump)
	end

	tool:GetPropertyChangedSignal("GripPos"):Connect(function()
		if currentState == ("Out") then
			self.SwordModule:PositionLunge(tool)
		else
			self.SwordModule:PositionIdle(tool)
		end
	end)

	-- sword equip sound client:
	tool.Equipped:Connect(function()
		equipped = true
		--if not _G.BB.TrueMobile then
		--	equipSound.TimePosition = 0.1
		--end
		self.equipSound:Play()
	end)

	tool.Unequipped:Connect(function()
		equipped = false
	end)

	handle.Touched:Connect(function(hit)
		if hit.Parent then

			-- Don't damage if hit is HRP, commonly manipulated by
			-- exploiters.
			if hit.Name == "HumanoidRootPart" then
				return
			end

			local hitHumanoid = hit.Parent:FindFirstChildWhichIsA("Humanoid")
			local hitPlayer = hitHumanoid and game.Players:GetPlayerFromCharacter(hitHumanoid.Parent)

			if hitHumanoid
				and Kill:CanDamage(Player, hitHumanoid, false)
				and self.SwordModule:CheckJoint(Character, handle) then

				-- Gather security data, will return nil if Security is off
				local Source = hitPlayer and hitPlayer or hitHumanoid
				local HitCharacterData = PSPV:CreateCharFrameTables(Source)
				local LocalCharacterData = PSPV:CreateCharFrameTables(Player)

				-- Send data to server (no debounce, stay true to old RBLX)
				Damage:FireServer(
					hit,
					HitCharacterData,
					LocalCharacterData
				)
			end
		end
	end)
end

return Sword]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXD9D6CFD25CF94E8E947FDD7B00A47AE3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX59EF8652478447439579377041A30192">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SwordServer</string>
								<string name="ScriptGuid">{31C8809B-C23B-443C-ABEF-1802BF181EE9}</string>
								<ProtectedString name="Source"><![CDATA[local Sword = {}

local players = game:GetService("Players")
local tool = script.Parent.Parent

local state = "Up"
local canDamage = true

function Sword:Damage(hitHumanoid)
	-- Find Character and Player
	local hitCharacter = hitHumanoid.Parent;
	local hitPlayer = players:GetPlayerFromCharacter(hitCharacter);

	if hitCharacter ~= nil then
		-- Find torsos
		local hitTorso = hitCharacter:FindFirstChild("HumanoidRootPart");
		local localTorso = self.Character:FindFirstChild("HumanoidRootPart");

		if hitTorso and localTorso then
			-- Make sure user is within reasonable distance.
			local mag = (hitTorso.Position - localTorso.Position).Magnitude;

			if mag < self.MaxKillDistance then
				-- if they're a player, do tk check
				if self.Kill:CanDamage(self.Player,hitHumanoid)
					and (self.SwordModule:CheckJoint(self.Character, self.handle)) then

					-- Tag player
					self.Kill:TagHumanoid(self.Player,hitHumanoid, self.handle, "Sword");

					-- Decide damage
					local Damage = self.Damages[state]

					--print(self.Player,"is damaging",hitCharacter)

					-- Deal damage
					hitHumanoid:TakeDamage(Damage)
				end
			end
		end
	end
end

function Sword:Init(Settings,Modules,Buffers,Player,Character)
	self.Player = Player
	self.Character = Character
	self.Humanoid = Character:WaitForChild("Humanoid")

	self.MaxKillDistance = Settings.Security.Hit.MaxSwordKillDistance
	self.Ties = Settings.WeaponDamageAfterDeath
	self.Damages = {
		Out = Settings.Sword.LungeDamage,
		Down = Settings.Sword.SlashDamage,
		Up  = Settings.Sword.IdleDamage
	}

	self.Kill = require(Modules:WaitForChild("Kill"))

	self.handle = tool:WaitForChild("Handle")
	self.SwordModule = require(tool:WaitForChild("SwordModule"))

	local Damage = tool:WaitForChild("Damage")

	local equipSound = self.handle:WaitForChild("Equip")
	local slashSound = self.handle:WaitForChild("Slash")
	local lungeSound = self.handle:WaitForChild("Lunge")

	local gripEvent = tool:WaitForChild("Grip")

	local PSPV = require(Modules.Security:WaitForChild("PSPV"))
	local Security = require(Modules:WaitForChild("Security"))
	local Aesthetics = require(Modules.Aesthetics)

	Aesthetics:HandleSword(Player, self.handle, true)

	local Primary
	Primary = Damage.OnServerEvent:Connect(function(playerFired,hit,CharacterData,LocalCFrames)

		if playerFired~=Player then
			return
		end

		if hit and hit.Parent and hit.Parent:IsDescendantOf(workspace)  then

			if hit.Name == "HumanoidRootPart"
				or Character:FindFirstChildWhichIsA("ForceField") then
				return
			end

			local hitHumanoid = hit.Parent:FindFirstChildWhichIsA("Humanoid");
			local HitPlayer = players:GetPlayerFromCharacter(hit.Parent)

			if hitHumanoid then

				local Alive = self.Character.Humanoid.Health>0
				local TrueHit = not HitPlayer or not Settings.Security.PSPV or not Settings.Security.Master

				if Settings.Security.Master then
					local SwordCFrames = {LocalCFrames[1][2].Sword,LocalCFrames[2][2].Sword,LocalCFrames[3][2].Sword}
					local size = self.handle.Size -- Vector3.new(.2,.2,.2)
					if HitPlayer then

						TrueHit = PSPV:Verify(
							CharacterData,
							SwordCFrames, -- hmmm...
							size,
							Enum.PartType.Block,
							HitPlayer.Name,
							nil,
							true
						)

						if not TrueHit then
							warn("PSPV failed for sword hit, hit plr:",
								HitPlayer,"Sword owner:",
								Player,
								"Hit:",hit.Name)

							canDamage = false

							Primary:Disconnect()

							return
						end

						for _, sCF in pairs(SwordCFrames) do

							local CurrentPosition = Vector2.new(self.handle.Position.X, self.handle.Position.Z)

							local SentPosition = Vector2.new(sCF.Position.X, sCF.Position.Z)
							local Mag = (SentPosition-CurrentPosition).Magnitude

							if Mag > 9 then
								TrueHit = false
								warn(
									"High 2D distance for sword hit, hit plr:", HitPlayer,
									"Sword owner:", Player,
									"Hit:", hit.Name,
									"Mag:", Mag
								)
							end
						end
					end

					Security:ApproveHandlePositions(Player, LocalCFrames)
					Security:ApproveFuturePositions(Player, LocalCFrames)
				end

				if TrueHit and canDamage then
					self:Damage(hitHumanoid);
				end
			end
		end
	end)

	gripEvent.OnServerEvent:Connect(function(plr, gripType)
		if Player == plr then

			-- replicate state
			state = gripType

			if gripType == "Out" then
				lungeSound:Play()
				self.SwordModule:PositionLunge(tool)

			elseif gripType == "Down" then
				slashSound:Play()

			elseif gripType == "Up" then
				self.SwordModule:PositionIdle(tool)
			end
		end
	end)

	-- sword equip sound server:
	tool.Equipped:Connect(function()
		equipSound:Play()
	end)

	tool.Enabled = true
end

return Sword]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBXD413DF17D2D146E89C1686313D3141ED">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBXCE39900C08254508AEB1D9E13D1AF2BA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Damage</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX15E5EFD0F58842ECB32D96343C27B978">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-260.254883</X>
								<Y>6.35914135</Y>
								<Z>-206.326324</Z>
								<R00>-0.99999994</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>-1</R12>
								<R20>0</R20>
								<R21>-0.99999994</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0.400000006</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">2</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>0.800000012</Y>
								<Z>4</Z>
							</Vector3>
						</Properties>
						<Item class="SpecialMesh" referent="RBX62742C04501147458F81CC430A94DA81">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="MeshId"><url>rbxasset://fonts/sword.mesh</url></Content>
								<token name="MeshType">5</token>
								<string name="Name">Mesh</string>
								<Vector3 name="Offset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="Scale">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>rbxasset://textures/SwordTexture.png</url></Content>
								<Vector3 name="VertexColor">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="ObjectValue" referent="RBX3DE8C11EE2E948C3B646EA9E2776482A">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">creator</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Ref name="Value">null</Ref>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBX16E7F949FCC348CF9B2205854E6CC057">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Slash</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds/swordslash.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.200000003</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX7EE12D02D3574592AD8B8827F35EC3EF">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>-0.719997406</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">A0</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBX4920F505F5044B7AB349F0B520E7D392">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>2.4000001</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">A1</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Attachment" referent="RBXF039F96D96814C0EB290AE6AFD731680">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<CoordinateFrame name="CFrame">
									<X>0</X>
									<Y>0</Y>
									<Z>0.680000305</Z>
									<R00>1</R00>
									<R01>0</R01>
									<R02>0</R02>
									<R10>0</R10>
									<R11>1</R11>
									<R12>0</R12>
									<R20>0</R20>
									<R21>0</R21>
									<R22>1</R22>
								</CoordinateFrame>
								<string name="Name">A3</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<bool name="Visible">false</bool>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBXD43C4A0FBE1E4985940D7FD46B2268FD">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Lunge</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds/swordlunge.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.600000024</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
							<Item class="EqualizerSoundEffect" referent="RBXE6CCD41500C34B8EBA58995F91DAE7C1">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="Enabled">true</bool>
									<float name="HighGain">0</float>
									<float name="LowGain">-2</float>
									<float name="MidGain">-7.5</float>
									<string name="Name">EqualizerSoundEffect</string>
									<int name="Priority">0</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
						<Item class="Sound" referent="RBX91916A0CAFA9463FA1A875ED4A2F2429">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Equip</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>http://www.roblox.com/asset/?id=12222225</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
							<Item class="EqualizerSoundEffect" referent="RBX86F3640109264CD5BA88224A8F30F565">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<bool name="Enabled">true</bool>
									<float name="HighGain">-5</float>
									<float name="LowGain">0</float>
									<float name="MidGain">-5</float>
									<string name="Name">EqualizerSoundEffect</string>
									<int name="Priority">0</int>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX94BD27F37BA944978AFC753B65B17247">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">true</bool>
						<CoordinateFrame name="Grip">
							<X>0</X>
							<Y>-0.699999988</Y>
							<Z>-0.0199999698</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Slingshot</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Slingshot.png</url></Content>
						<string name="ToolTip">Sling</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBXAD7215D061B140CFA3A96D89AFBC9D4A">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">4</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-253.131851</X>
								<Y>24.4894829</Y>
								<Z>-46.2263412</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">false</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>5</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
						<Item class="SpecialMesh" referent="RBXE6401713A6B04C13A6533E80E28E57D0">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="MeshId"><url>rbxasset://fonts/slingshot.mesh</url></Content>
								<token name="MeshType">5</token>
								<string name="Name">Mesh</string>
								<Vector3 name="Offset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="Scale">
									<X>0.5</X>
									<Y>0.5</Y>
									<Z>0.5</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>http://www.roblox.com/asset/?id=5320847360</url></Content>
								<Vector3 name="VertexColor">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBX7A975527138641ED8EE9207DF80C2439">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">SlingshotSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX648F4F87CE954FC3A214C8E41DF4DC06">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Classic</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://844029237</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.699999988</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX58C57D3B5810426EB65538C62CAB660C">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Modern</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1.20000005</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94795238</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">2</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="RemoteEvent" referent="RBXD338070E496A4CFE830A259F9E4D6F05">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX11E99917CD90460FBBA00463E2A09BB3">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXA05A88415E9E450CA9717ABDE61667C4">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SlingshotClient</string>
								<string name="ScriptGuid">{FC7E89A6-C40B-4B50-84EB-CBE0EDF8F147}</string>
								<ProtectedString name="Source"><![CDATA[local Slingshot = {}

local tool = script.Parent.Parent


local spawnDistances = {
	Flying = 4,
	Climbing = 8.5,
}

local ADDED_Y_VEL = 0.3

function Slingshot:ComputeLaunchAngle(dx, dy, grav, speed)
	local Gravity = workspace.Gravity--math.abs(workspace.Gravity)

	local SqSpeed = speed ^ 2

	local inRoot = (SqSpeed ^ 2) - (Gravity * ((Gravity * (dx^2)) + (2 * dy * SqSpeed)))

	if inRoot <= 0 then
		return -1
	end

	local root = math.sqrt(inRoot)

	local GravDist = Gravity * dx

	local inATan1 = (SqSpeed + root) / GravDist
	local inATan2 = (SqSpeed - root) / GravDist

	local answer1 = math.atan(inATan1)
	local answer2 = math.atan(inATan2)

	if answer1 < answer2 then
		return answer1
	end

	return answer2
end

function Slingshot:Fire(Hit, mouse_pos, pellet, count, collisionGroup, now)
	local dir = (mouse_pos - self.Character.PrimaryPart.Position).Unit
	local spawnDistance = _G.BB.Settings.SlingClimb and 6 or _G.BB.Settings.Slingshot.SpawnDistance
	local Speed = _G.BB.Settings.Slingshot.Speed
	local ShootInsideBricks = _G.BB.Settings.Slingshot.ShootInsideBricks

	if collisionGroup ~= "Standard" then
		spawnDistance = spawnDistances[collisionGroup]
	end

	local launch = self.Character.PrimaryPart.Position + dir * spawnDistance
	local delta = mouse_pos - launch
	local unit_delta = delta.Unit

	local dir = unit_delta

	if workspace.Gravity > 0 then
		local dy = delta.Y

		delta = Vector3.new(delta.X, 0, delta.Z)

		local dx = delta.Magnitude
		unit_delta = delta.Unit

		local theta = self:ComputeLaunchAngle(dx, dy, workspace.Gravity, Speed)

		if theta == -1 then
			dir = (mouse_pos - self.Character.PrimaryPart.Position).Unit
			dir = Vector3.new(dir.X, dir.Y + ADDED_Y_VEL, dir.Z)
		else
			local vy = math.sin(theta)
			local xz = math.cos(theta)
			local vx = unit_delta.X * xz
			local vz = unit_delta.Z * xz
			dir = Vector3.new(vx, vy, vz)
		end
	end

	local vel = dir * Speed
	pellet.Position = launch
	pellet.Velocity = vel
	pellet.Parent = self.ActiveFolder

	if (ShootInsideBricks == false) and self.isInsideSomething(pellet) then
		local pPartPos = self.Character.PrimaryPart.Position
		local clampedDist = math.clamp((mouse_pos - pPartPos).Magnitude, 0, spawnDistance)
		local pelletDir = (mouse_pos - pPartPos).Unit

		local camDir = workspace.CurrentCamera.CFrame.LookVector
		local finalPos = pPartPos + pelletDir * clampedDist - camDir * 1
		local pelletLook = pellet.CFrame.LookVector
		local cFrame = CFrame.lookAt(finalPos, finalPos + pelletLook)

		pellet.Anchored = true
		pellet.CFrame = cFrame
		pellet.Velocity = pelletLook * Speed
		pellet.Anchored = false

		if self.isInsideSomething(pellet, true) then
			pellet.Anchored = true
			pellet.CFrame = CFrame.lookAt(pPartPos, pPartPos + pelletLook)
			pellet.Velocity = pelletLook * Speed
			pellet.Anchored = false
		end
	end

	self.Delete(pellet, 4)

	self.Hit:HandleHitDetection(pellet)

	return pellet.Position, vel
end

local function touchingMiscPart(character, sourcePart)
	local TC = sourcePart.Touched:Connect(function() end)
	local CollectedParts = sourcePart:GetTouchingParts()
	TC:Disconnect()
	local TouchingMiscPart = false
	for _, Part in pairs(CollectedParts) do
		if not character:IsAncestorOf(Part) then
			TouchingMiscPart = true
			break
		end
	end
	return TouchingMiscPart
end

function Slingshot:Init()
	local Player = game:GetService("Players").LocalPlayer
	local Character = Player.Character
	local Mouse = Player:GetMouse()

	self.Hit = require(_G.BB.Modules:WaitForChild("Hit"))
	self.Delete = require(_G.BB.ClientObjects:WaitForChild("Delete"))
	self.ActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(Player.Name)

	local MakePellet = require(_G.BB.ClientObjects:WaitForChild("MakePellet"))
	local Targeting = require(_G.BB.ClientObjects:WaitForChild("Core"):WaitForChild("Targeting"))

	local SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	self.isInsideSomething = require(_G.BB.ClientObjects:WaitForChild("isInsideSomething"))
	local Security = require(_G.BB.Modules:WaitForChild("Security"))

	local handle = tool:WaitForChild("Handle")
	local Activation = tool:WaitForChild("Activation")
	local UpdateEvent = tool:WaitForChild("Update")
	local slingshotSounds = tool.Handle:WaitForChild("SlingshotSounds")
	local NewSounds  = slingshotSounds:Clone()
	NewSounds.Name = "ClientSounds"
	NewSounds.Parent = handle
	slingshotSounds:Destroy()

	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))
	HandleCrosshair(tool)

	self.Character = Character

	local down = false
	local jumpyDeltaTime = _G.BB.Settings.Slingshot.SlingFlyCooldown
	local jumpyT0 = time()

	local function Activate(Hit,targetPos)
		if not Security:ApproveActivation(Player, "Slingshot") then
			return
		end
		tool.Enabled = false

		local now = time()

		local CollisionGroup = _G.BB.Settings.Doomspire.SlingFly and "JumpyPellets" or "Pellets"

		local isHoldingSpace = game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space)
		local isJumping = (Character.Humanoid.FloorMaterial == Enum.Material.Air or isHoldingSpace)

		local mode = "Standard"

		-- Set mode (Standard, Climbing, or Flying)
		if handle then

			if _G.BB.Settings.SlingClimb or _G.BB.Settings.Doomspire.SlingFly then

				local TouchingMiscPart = touchingMiscPart(Character, handle)
				CollisionGroup = (TouchingMiscPart and isJumping) and "JumpyPellets" or "Pellets"

				if TouchingMiscPart then

					mode = "Climbing"
					jumpyT0 = now

				elseif _G.BB.Settings.Doomspire.SlingFly  then

					if ((now - jumpyT0) > jumpyDeltaTime) and isJumping then
						mode = "Flying"
						CollisionGroup = "JumpyPellets"
						jumpyT0 = now
					end
				end
			end
		end

		_G.BB.ProjectileCounts.Pellets += 1
		local count = _G.BB.ProjectileCounts.Pellets

		local Pellet = MakePellet(Player, CollisionGroup, count)

		local position, velocity = self:Fire(Hit, targetPos, Pellet, count, mode, now)
		UpdateEvent:FireServer(position, velocity, now, count, _G.BB.ServerTime.Value)

		local Sound = NewSounds:FindFirstChild(_G.BB.Local.SlingshotSound)
		Sound.Parent = handle
		Sound:Play()
		Sound.Parent = NewSounds

		SafeWait.wait(_G.BB.Settings.Slingshot.ReloadTime)

		tool.Enabled = true

		return true
	end

	--This exception attempts to turn off automatic sling for mobile users, as it's nonfunctional and causes issues on the side.
	--[[
	if not (game:GetService("UserInputService").MouseEnabled) and
		not (game:GetService("UserInputService").KeyboardEnabled) and
		game:GetService("UserInputService").TouchEnabled then
		_G.BB.Settings.Slingshot.Automatic = false
		warn("Your device was recognized as mobile and Slingshot Automatic fire was deactivated.")
		warn("If your device is not mobile, contact a developer to report the issue.")
	end]]

	local Thread = 0
	local currentInputObject = nil
	Activation.Event:Connect(function(Hit,targetPos, inputObject)
		if tool.Enabled then
			if _G.BB.Settings.Slingshot.Automatic and not down then
				Thread = Thread + 1
				local CurrentThread = Thread
				currentInputObject = inputObject
				down = true
				while down and CurrentThread == Thread do
					local Hit, TargetPosition
					if currentInputObject.UserInputType == Enum.UserInputType.Touch then
						Hit, TargetPosition = Targeting:Get3DPosition(currentInputObject.Position.X, currentInputObject.Position.Y, false)
					else
						Hit, TargetPosition = Targeting:Get3DPosition(Mouse.X, Mouse.Y, false)
					end
					if not Activate(Hit,TargetPosition) then
						SafeWait.wait(_G.BB.Settings.Slingshot.ReloadTime)
					end
				end
				down = false
			elseif not _G.BB.Settings.Slingshot.Automatic then
				Activate(Hit,targetPos)
			end
		end
	end)

	if _G.BB.Settings.Slingshot.Automatic then
		game:GetService("UserInputService").InputEnded:Connect(function(input)
			--[[
			if input.UserInputType == Enum.UserInputType.MouseButton1
				or input.UserInputType == Enum.UserInputType.Gamepad1
				or input.UserInputType == Enum.UserInputType.Touch
			then
				if input.UserInputType == Enum.UserInputType.Touch  then
					task.wait(1/15)
				end
				down = false
			end]]
			if input == currentInputObject then
				currentInputObject = nil
				down = false
			end
		end)

		tool.AncestryChanged:Connect(function()
			if tool.Parent ~= Character then
				down = false
			end
		end)
	end
end

return Slingshot]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX258D32BA0915464B960787381802805A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX56C0EC861A594DE1A26231E0687CE152">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SlingshotServer</string>
								<string name="ScriptGuid">{BC8DA3DA-68A0-400F-AE66-4D3781BBAF48}</string>
								<ProtectedString name="Source"><![CDATA[local Slingshot = {}

local tool = script.Parent.Parent

local Debris = game:GetService("Debris")
local Collections = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")

function Slingshot:CreatePhysicsFolder(count)
	local PhysicsFolder = Instance.new("Folder")

	--_G.BB.ProjectileCounts[self.Player.Name].Pellets += 1

	--PhysicsFolder.Name = "Slingshot".._G.BB.ProjectileCounts[self.Player.Name].Pellets
	PhysicsFolder.Name = "Slingshot"..count

	-- Add creator tag
	local new_tag = Instance.new("ObjectValue")
	new_tag.Name = "creator"
	new_tag.Value = self.Player
	new_tag.Parent = PhysicsFolder

	local Active = Instance.new("BoolValue")
	Active.Name = "Active"
	Active.Value = true
	Active.Parent = PhysicsFolder

	local character = Instance.new("ObjectValue")
	character.Name = "Character"
	character.Value = self.Character
	character.Parent = PhysicsFolder

	local ProjectileType = Instance.new("StringValue")
	ProjectileType.Name = "ProjectileType"
	ProjectileType.Value = "Slingshot"
	ProjectileType.Parent = PhysicsFolder

	local CanHalfDamageValue = Instance.new("BoolValue")
	CanHalfDamageValue.Name = "CanHalfDamage"
	CanHalfDamageValue.Value = true
	CanHalfDamageValue.Parent = PhysicsFolder

	local Damage = Instance.new("IntValue")
	Damage.Name = "Damage"
	Damage.Value = self.Settings.Slingshot.Damage
	Damage.Parent = PhysicsFolder;

	local ID = Instance.new("StringValue")
	ID.Name = "UniqueID"
	ID.Value = PhysicsFolder.Name.._G.BB.ProjectileCounts[self.Player.Name].Pellets
	ID.Parent = PhysicsFolder

	local lp = Instance.new("Vector3Value")
	lp.Name = "LatestPosition"
	lp.Parent = PhysicsFolder

	local lv = Instance.new("Vector3Value")
	lv.Name = "LatestVelocity"
	lv.Parent = PhysicsFolder

	local lt = Instance.new("NumberValue")
	lt.Name = "LatestTime"
	lt.Parent = PhysicsFolder

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = PhysicsFolder

	local ThemeTag = Instance.new("StringValue")
	ThemeTag.Name = "Theme"
	ThemeTag.Value = self.Aesthetics:DetermineTheme(self.Player)
	ThemeTag.Parent = PhysicsFolder

	self.slingshotSounds:Clone().Parent = PhysicsFolder

	--print(PhysicsFolder:GetFullName())
	return PhysicsFolder
end

function Slingshot:Init(Settings, Modules, Buffers, Player, Character, Folder)
	local handle = tool:WaitForChild("Handle")
	local UpdateEvent = tool:WaitForChild("Update")

	self.slingshotSounds = handle:WaitForChild("SlingshotSounds")
	self.ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)
	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))
	self.Settings = Settings
	self.Player = Player
	self.Character = Character

	local ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)

	local Security = require(Modules:WaitForChild("Security"))

	-- First activation must always work event if time() returns 0.
	local lastActivation = -0.2;

	UpdateEvent.OnServerEvent:Connect(function(firingPlayer, initPos, initVel, initTime, count, seenServerTime)
		local now = time()
		local Head = firingPlayer.Character and firingPlayer.Character:FindFirstChild("Head")
		local LenientReloadTime = math.max(Settings.Slingshot.ReloadTime - 1, Settings.Slingshot.ReloadTime * .5)

		if Head and firingPlayer == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
				lastActivation = now

				local PhysicsFolder = self:CreatePhysicsFolder(count)


				-- Replicate projectile
				PhysicsFolder.LatestPosition.Value = initPos
				PhysicsFolder.LatestVelocity.Value = initVel
				PhysicsFolder.LatestTime.Value = initTime
				PhysicsFolder.LastUpdateTick.Value = now
				PhysicsFolder.Active.Value = true

				if Security:ApproveInit(PhysicsFolder) then
					PhysicsFolder.Parent = self.ActiveFolder
				end

				Debris:AddItem(PhysicsFolder ,Settings.Slingshot.DespawnTime)
			end
		end
	end)

	tool.Enabled = true
end

return Slingshot]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX3926166282AF4DFC96FB3C2C17AE2297">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX6BB8BE15082B4623A0407FCAA5F62B5E">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">false</bool>
						<CoordinateFrame name="Grip">
							<X>-0.579281926</X>
							<Y>-0.578147471</Y>
							<Z>0.0743034482</Z>
							<R00>-0.000734454254</R00>
							<R01>0.00874789804</R01>
							<R02>0.999961615</R02>
							<R10>-0.0213966556</R10>
							<R11>0.999732733</R11>
							<R12>-0.0087616127</R12>
							<R20>-0.99977088</R20>
							<R21>-0.0214022659</R21>
							<R22>-0.000547082222</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Rocket</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Rocket.png</url></Content>
						<string name="ToolTip">Rocket</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="MeshPart" referent="RBX787E9D3F308348889C3BE6BFD2E70C8E">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-252.317307</X>
								<Y>24.1118279</Y>
								<Z>-46.8062439</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0.999999762</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>0.999999762</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4285822067</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<bool name="DoubleSided">false</bool>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<bool name="HasJointOffset">false</bool>
							<bool name="HasSkinnedMesh">false</bool>
							<Vector3 name="InitialSize">
								<X>4.20199585</X>
								<Y>1.04170036</Y>
								<Z>0.820400238</Z>
							</Vector3>
							<Vector3 name="JointOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">1088</token>
							<string name="MaterialVariantSerialized"></string>
							<Content name="MeshId"><url>rbxassetid://5510069486</url></Content>
							<string name="Name">Handle</string>
							<SharedString name="PhysicalConfigData">DaFjPxYtOjbL2eF+h3ULtQ==</SharedString>
							<BinaryString name="PhysicsData"></BinaryString>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<token name="RenderFidelity">1</token>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Content name="TextureID"><null></null></Content>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int name="VertexCount">0</int>
							<Vector3 name="size">
								<X>4.20199585</X>
								<Y>1.04170036</Y>
								<Z>0.820400238</Z>
							</Vector3>
						</Properties>
						<Item class="Sound" referent="RBX7F7B37E6E7A34C2A921BAA6D8C3D24C2">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">true</bool>
								<string name="Name">Swoosh</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.699999988</float>
								<float name="xmlRead_MaxDistance_3">300</float>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBXB1663442CCAC4CEC9572F3208AE1F535">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Boom</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX9282944873D94F67A09CEAB14357C820">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Modern</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">2</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://3149249837</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">4</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXCD1E68FA96AB4A93BECEB8328604E5BF">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Classic</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds/collide.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">300</float>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="RemoteEvent" referent="RBX62A5BB3B82594116A2BECC21EC079C15">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX63AB37F615EF40A9A30CAE0AC89D2F2D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXB137A67E85924228BAC656006D02AD26">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">RocketClient</string>
								<string name="ScriptGuid">{002A8833-E0BB-4774-AA3F-6915AB863B2C}</string>
								<ProtectedString name="Source"><![CDATA[local Rocket = {}

local tool = script.Parent.Parent
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local Collections = game:GetService("CollectionService")

function Rocket:ProcessTouched(rocket)
	local TouchedConnection;
	local hasExploded = false
	local CharacterData

	local Diamater = _G.BB.Settings.Rocket.Radius * 2

	rocket.Ready.Value = true

	TouchedConnection = rocket.Touched:Connect(function(hit)
		local RocketPosition = rocket.Position

		local hitCharacter = hit.Parent:IsA("Model") and hit.Parent
		local hitHumanoid = hit.Parent:FindFirstChildWhichIsA("Humanoid")

		local hitPlr = hitCharacter and Players:GetPlayerFromCharacter(hitCharacter)
		if hitPlr == self.Player and (not self.Kill:CanDamage(self.Player, hitHumanoid, _G.BB.Settings.Doomspire.RocketCollisions)) then
			return
		end

		local CallbackModule = _G.BB.Modules.Callbacks.RocketExplode
		local Callback = CallbackModule and require(CallbackModule)
		if Callback and Callback(hit) == false then
			-- IF FALSE, ROCKET PASSES THROUGH
			return
		end

		if hasExploded then
			return
		end

		hasExploded = true
		rocket.Ready.Value = false
		rocket.Anchored = true

		TouchedConnection:Disconnect()

		-- Move rocket forward 2 studs
		rocket.CFrame = rocket.CFrame + (rocket.CFrame * Vector3.new(0, 0, -2)) - rocket.Position

		-- Get character positions at two frames
		if hitPlr then
			CharacterData = self.PSPV:CreateCharFrameTables(hitPlr)
		end

		--Debris:AddItem(rocket, 3)

		rocket.Size = Vector3.new(Diamater, Diamater, Diamater)

		local function CreateExpl()

			rocket.Swoosh:Destroy()

			-- client rocket explosion sound
			local Sounds = rocket:WaitForChild("Boom")
			local Sound = Sounds:FindFirstChild(_G.BB.Local.RocketExplosion)
			Sound.Parent = rocket
			Sound:Play()

			self.Aesthetics:CreateCustomExplosion(self.Player, rocket)
		end

		task.spawn(CreateExpl)
		self.Explosion:HandleHitDetection(rocket, hit, RocketPosition, CharacterData)
	end)
end

function Rocket:Fire(rocket, TargetPosition, SpawnDistance)
	local InitialSpeed = _G.BB.Settings.Rocket.InitialSpeed
	local Speed = _G.BB.Settings.Rocket.Speed
	local RampUpDuration = _G.BB.Settings.Rocket.RampUpDuration
	local ShootInsideBricks = _G.BB.Settings.Rocket.ShootInsideBricks

	local InitPosition = tool.Handle.Position + (TargetPosition - tool.Handle.Position).unit * SpawnDistance
	local InitialCFrame = CFrame.lookAt(InitPosition, TargetPosition)

	rocket.Origin.Value = InitialCFrame -- have to buffer this on the client
	rocket.LastSentPosition.Value = InitialCFrame.Position

	rocket.CFrame = InitialCFrame

	local initialVelocity = rocket.CFrame.LookVector *InitialSpeed
	local velocity = rocket.CFrame.LookVector * Speed

	rocket.Velocity = initialVelocity
	rocket.RocketVelocity.Velocity = velocity

	local force = (velocity - initialVelocity) * rocket:GetMass() / RampUpDuration
	force = Vector3.new(math.abs(force.X), math.abs(force.Y), math.abs(force.Z))
	rocket.RocketVelocity.MaxForce = force

	rocket.Parent = self.ActiveFolder

	if not ShootInsideBricks and self.isInsideSomething(rocket) then
		rocket.Anchored = true
		local Position = tool.Handle.Position
		local cFrame = CFrame.lookAt(Position, TargetPosition)
		rocket.CFrame = cFrame
		local initialVelocity = rocket.CFrame.LookVector * InitialSpeed
		local velocity = rocket.CFrame.LookVector * Speed

		rocket.Velocity = initialVelocity
		rocket.RocketVelocity.Velocity = velocity
		rocket.Anchored = false
	end

	game:GetService("Debris"):AddItem(rocket,9.5)
	rocket.Swoosh:Play()

	self:ProcessTouched(rocket)
	return rocket.CFrame
end

function Rocket:Init()

	local Player = Players.LocalPlayer
	self.Player = Player
	self.Character = self.Player.Character

	self.Kill = require(_G.BB.Modules:WaitForChild("Kill"))
	self.Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))
	self.Explosion = require(_G.BB.Modules:WaitForChild("Explosion"))
	self.PSPV = require(_G.BB.Modules.Security:WaitForChild("PSPV"))
	self.isInsideSomething = require(_G.BB.ClientObjects:WaitForChild("isInsideSomething"))

	local SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	self.ActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(Player.Name)

	local MakeRocket = require(_G.BB.ClientObjects:WaitForChild("MakeRocket"))

	self.handle = tool:WaitForChild("Handle")


	local Activation = tool:WaitForChild("Activation")
	local UpdateEvent = tool:WaitForChild("Update")
	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))

	HandleCrosshair(tool)

	Activation.Event:Connect(function(Hit, TargetPosition)
		if tool.Enabled then
			tool.Enabled = false

			local SpawnDistance = _G.BB.Settings.Rocket.SpawnDistance

			_G.BB.ProjectileCounts.Rockets += 1

			local rocket = MakeRocket(self.Player, _G.BB.ProjectileCounts.Rockets)
			local cframe = self:Fire(rocket, TargetPosition, SpawnDistance, _G.BB.ProjectileCounts.Rockets)
			UpdateEvent:FireServer(cframe, _G.BB.ServerTime.Value, _G.BB.ProjectileCounts.Rockets)

			SafeWait.wait(_G.BB.Settings.Rocket.ReloadTime)

			tool.Enabled = true
		end
	end)
end

return Rocket]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX3475FD2D220E44F591D2CD390C94D9BE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXB48BA9CD73FB4A0592AE4FAF5BB6EF42">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">RocketServer</string>
								<string name="ScriptGuid">{B01DD963-5000-4C2F-AF67-2F36BB4F9A06}</string>
								<ProtectedString name="Source"><![CDATA[local Rocket = {}

local tool = script.Parent.Parent;
local handle = tool:WaitForChild("Handle")
local UpdateEvent = tool:WaitForChild("Update");
local boom = handle:WaitForChild("Boom");
local swoosh = handle:WaitForChild("Swoosh");

local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local Collections = game:GetService("CollectionService")

function Rocket:CreatePhysicsFolder(count)
	--_G.BB.ProjectileCounts[self.Player.Name].Rockets += 1

	local PhysicsFolder = Instance.new("Folder")
	--PhysicsFolder.Name = "Rocket".._G.BB.ProjectileCounts[self.Player.Name].Rockets
	PhysicsFolder.Name = "Rocket"..count

	local ThemeTag = Instance.new("StringValue")
	ThemeTag.Name = "Theme"
	ThemeTag.Value = self.Aesthetics:DetermineTheme(self.Player)
	ThemeTag.Parent = PhysicsFolder

	local newTag = Instance.new("ObjectValue")
	newTag.Name = "creator"
	newTag.Value = self.Player
	newTag.Parent = PhysicsFolder

	local character = Instance.new("ObjectValue")
	character.Name = "Character"
	character.Value = self.Character
	character.Parent = PhysicsFolder

	local Active = Instance.new("BoolValue");
	Active.Name = "Active"
	Active.Value = true
	Active.Parent = PhysicsFolder

	local Exploded = Instance.new("BoolValue")
	Exploded.Name = "Exploded"
	Exploded.Value = false
	Exploded.Parent = PhysicsFolder

	local projType = Instance.new("StringValue")
	projType.Name = "ProjectileType"
	projType.Value = "Rocket"
	projType.Parent = PhysicsFolder

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = PhysicsFolder

	local cf = Instance.new("CFrameValue")
	cf.Name = "Origin"
	cf.Parent = PhysicsFolder

	local rdist = Instance.new("NumberValue")
	rdist.Name = "LatestDistance"
	rdist.Parent = PhysicsFolder

	--local rvel = Instance.new("Vector3Value")
	--rvel.Name = "LatestVelocity"
	--rvel.Parent = PhysicsFolder

	local st = Instance.new("NumberValue")
	st.Name = "ClientTime"
	st.Parent = PhysicsFolder

	local mt = Instance.new("NumberValue")
	mt.Name = "ServerTime"
	mt.Parent = PhysicsFolder

	local ID = Instance.new("StringValue")
	ID.Name = "UniqueID"
	ID.Value = PhysicsFolder.Name.._G.BB.ProjectileCounts[self.Player.Name].Rockets
	ID.Parent = PhysicsFolder

	-- Add the "shoosh" and "boom"
	boom:Clone().Parent = PhysicsFolder
	swoosh:Clone().Parent = PhysicsFolder

	return PhysicsFolder
end

function Rocket:Init(Settings,Modules,Buffers,Player,Character,Folder)
	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))
	self.Player = Player
	self.Character = Character

	local Security = require(Modules:WaitForChild("Security"))

	local ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)

	local lastActivation = -10;
	UpdateEvent.OnServerEvent:connect(function(playerFired, initCF, clientTime, count)
		local now = tick()
		local LenientReloadTime = math.max(Settings.Rocket.ReloadTime - 1, Settings.Rocket.ReloadTime * .6)
		if playerFired == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
				lastActivation = now;

				local PhysicsFolder = self:CreatePhysicsFolder(count)

				-- Begin replication
				PhysicsFolder.ServerTime.Value = _G.BB.ServerTime.Value
				PhysicsFolder.ClientTime.Value = clientTime
				PhysicsFolder.Origin.Value = initCF
				PhysicsFolder.LatestDistance.Value = 0
				PhysicsFolder.LastUpdateTick.Value = now

				if Security:ApproveInit(PhysicsFolder, handle) then
					PhysicsFolder.Parent = ActiveFolder
				end

				-- Clean up and prepare for next rocket
				Debris:AddItem(PhysicsFolder, Settings.Rocket.DespawnTime)
			end
		end
	end)
	tool.Enabled = true
end

return Rocket]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX8FA1E64254A347AEA1578D744263D3FB">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX360FAD11E17448A49073B507C2357BB9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">false</bool>
						<CoordinateFrame name="Grip">
							<X>0</X>
							<Y>-1.29999995</Y>
							<Z>0.28000015</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Trowel</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Wall.png</url></Content>
						<string name="ToolTip">Wall</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="RemoteEvent" referent="RBXDEE744E2E5D847DFA22D08297D946ABE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXB44552C412E1424F9E3F8DE809B6FA20">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">2</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">4</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-253.131851</X>
								<Y>24.4894829</Y>
								<Z>-46.2263412</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>-0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>1</R12>
								<R20>0</R20>
								<R21>-1</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">false</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4284702562</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">2</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">3</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">2</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>1</X>
								<Y>4.4000001</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
						<Item class="Sound" referent="RBXEA669ECDE2924A75A24CCC0B297BD508">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">BuildSound</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds//bass.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">1</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
						<Item class="SpecialMesh" referent="RBX975E15E2C32B455B9A01292A71942B80">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="MeshId"><url>rbxasset://fonts/trowel.mesh</url></Content>
								<token name="MeshType">5</token>
								<string name="Name">Mesh</string>
								<Vector3 name="Offset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="Scale">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>http://www.roblox.com/asset/?id=5320846984</url></Content>
								<Vector3 name="VertexColor">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXA4767B8844694851BDFDA376B777D624">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX503202F852764E00900DEFF8FA09DA9F">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TrowelClient</string>
								<string name="ScriptGuid">{BCCA3AC8-297D-4A20-8ECB-BC49318874C7}</string>
								<ProtectedString name="Source"><![CDATA[local Trowel = {}

local tool = script.Parent.Parent

local function snap(Vector)
	return (math.abs(Vector.x)>math.abs(Vector.z))
	and ((Vector.x>0) and Vector3.new(1,0,0) or Vector3.new(-1,0,0))
	or ((Vector.z>0) and Vector3.new(0,0,1) or Vector3.new(0,0,-1))
end

function Trowel:Place(TargetPosition)
	local Head = self.Character.PrimaryPart
	local Lifetime = _G.BB.Settings.Trowel.Lifetime


	local vectorConstructor = Vector3.new(
		math.ceil(TargetPosition.X-0.5),
		math.floor(TargetPosition.Y*100)*0.01,
		math.ceil(TargetPosition.Z-0.5)
	)

	local lookAt = snap((vectorConstructor - Head.Position).unit)

	local cf = CFrame.new(vectorConstructor, vectorConstructor + lookAt)
	local wall = self.Buffer.Value

	for _,Brick in pairs(wall:GetChildren()) do
		local SB = Brick:FindFirstChildWhichIsA("SelectionBox")
		if SB then
			SB.Visible = _G.BB.Local.TrowelOutlines
		end
	end

	--wall.Parent = workspace

	game:GetService("Debris"):AddItem(wall, Lifetime)
	local ct = wall.PhysicsFolder.RandomColor.Value

	-- Build client wall
	local function BuildWall()
		self.TrowelModule:BuildWall(cf,wall,.04, ct)
	end
	task.spawn(BuildWall)

	return cf
end

function Trowel:Init()
	local Player = game:GetService("Players").LocalPlayer

	self.ActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(Player.Name)

	self.Character = game:GetService("Players").LocalPlayer.Character

	self.Buffer = _G.BB.Buffers:WaitForChild("Wall")

	self.TrowelModule = require(tool:WaitForChild("TrowelModule"))

	local verifyBuffer = require(tool:WaitForChild("VerifyBuffer"))
	local Activation = tool:WaitForChild("Activation")
	local UpdateEvent = tool:WaitForChild("Update")

	local ReloadTime = _G.BB.Settings.Trowel.ReloadTime

	local SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))
	HandleCrosshair(tool)

	Activation.Event:Connect(function(Hit, TargetPosition)
		if tool.Enabled then
			if not verifyBuffer(self.Buffer, self.ActiveFolder) then
				UpdateEvent:FireServer()
				tool.Enabled = true
				return
			end

			if Hit then
				local cf = self:Place(TargetPosition)
				UpdateEvent:FireServer(cf)

			else
				return
			end

			tool.Enabled = false

			SafeWait.wait(ReloadTime)
			tool.Enabled = true
		end
	end)
end

return Trowel]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX20E64E3E9D7F44C7BE64F19056440160">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX7BAB34EC66734D24A38B1134F4F80055">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">TrowelServer</string>
								<string name="ScriptGuid">{0BA254D8-5C07-4DF1-B704-A90E2DD4D7D3}</string>
								<ProtectedString name="Source"><![CDATA[local Trowel = {}

local tool = script.Parent.Parent;

local UpdateEvent = tool:WaitForChild("Update")
local BuildSound = tool.Handle:WaitForChild("BuildSound");
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

local Debris = game:GetService("Debris")
local Collections = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")

function Trowel:CreateBrick(brickModel)

	local Folder,Theme = Aesthetics:GetThemeObject(self.Player,"Trowel");

	local brick = Folder:FindFirstChildWhichIsA("Part"):Clone()
	local BrickIndex = #brickModel:GetChildren() + 1
	local Gradient = Folder:FindFirstChildWhichIsA("UIGradient")

	local RowNum = math.ceil(BrickIndex / self.BricksPerRow)
	local Alpha = (RowNum - 1) / (self.BricksPerColumn - 1)

	brick.Color = Aesthetics:GetColorAtTime(Gradient.Color, 1 - Alpha)
	brick.Color = Theme == "Team Color" and self.Player.TeamColor.Color or brick.Color

	brick.Massless = false
	brick.CanCollide = true
	brick.CastShadow = true
	brick.Shape = Enum.PartType.Block
	brick.BottomSurface = Enum.SurfaceType.Inlet
	brick.TopSurface = Enum.SurfaceType.Studs
	brick.Size = self.BrickSize
	brick.Position = self.Character.PrimaryPart.Position + Vector3.new(0,8000,0)

	if self.Outlines then
		-- Add an aesthetic outline
		local outLine = Instance.new("SelectionBox")
		outLine.LineThickness = 0.01
		outLine.Color3 = Color3.fromRGB(30, 30, 30)
		outLine.Parent = brick
		outLine.Adornee = brick
	end

	brick.Parent = brickModel

	-- Make sure the first placed brick has the sound
	if BrickIndex == 1 then
		BuildSound:Clone().Parent = brick
	end

	-- Add creator tag
	local new_tag = Instance.new("ObjectValue")
	new_tag.Name = ("creator")
	new_tag.Value = self.Player
	new_tag.Parent = brick

	-- Name the brick a number, which will determine when it is placed when a wall is built.
	brick.Name = BrickIndex

	-- Pretty sure the "Trowel Exploit" happened because of this
	--brick:SetNetworkOwner(self.Player)

	-- Temporarily anchor the briccc.
	brick.Anchored = true

	Collections:AddTag(brick, "TrowelWallBrick")
end

function Trowel:PrepareBufferWall()
	local name = (self.Player.Name.."'s Wall")

	if self.Buffer.Value ~= nil then
		return
	end

	-- Create new buffer wall model, now stored inside the buffer folder.
	local Wall = Instance.new("Model")
	Wall.Name = name;

	-- Create buffer bricks. Wall is not formatted for now.
	local BrickCount = self.BricksPerRow * self.BricksPerColumn
	for i = 1,BrickCount do
		self:CreateBrick(Wall)
	end

	local PhysicsFolder = Instance.new("Folder")
	PhysicsFolder.Name = "PhysicsFolder"

	local CT = Instance.new("Color3Value")
	CT.Name = "RandomColor"
	CT.Value = self.Aesthetics:RandomColor()
	CT.Parent = PhysicsFolder

	local CF = Instance.new("CFrameValue")
	CF.Name = "PlaceCFrame"
	CF.Parent = PhysicsFolder

	local creator = Instance.new("ObjectValue")
	creator.Name = "creator"
	creator.Value = self.Player
	creator.Parent = PhysicsFolder

	local wV = Instance.new("ObjectValue")
	wV.Name = "Wall"
	wV.Value = Wall
	wV.Parent = PhysicsFolder

	local ProjectileType = Instance.new("StringValue")
	ProjectileType.Name = "ProjectileType"
	ProjectileType.Value = "Wall"
	ProjectileType.Parent = PhysicsFolder

	PhysicsFolder.Parent = Wall

	Wall.Parent = self.BufferFolder
	self.Buffer.Value = Wall
end

function Trowel:Init(Settings,Modules,Buffers,Player,Character,Folder)
	self.BrickSize = Settings.Trowel.BrickSize
	self.BricksPerRow = Settings.Trowel.BricksPerRow
	self.BricksPerColumn = Settings.Trowel.BricksPerColumn
	self.Outlines = Settings.Trowel.Outlines

	self.BufferFolder = Folder:WaitForChild("Buffers"):WaitForChild(Player.Name)

	self.Buffer = Buffers:WaitForChild("Wall")

	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))
	self.TrowelModule = require(tool:WaitForChild("TrowelModule"))

	self.Player = Player
	self.Character = Character

	local ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)

	local Lifetime = Settings.Trowel.Lifetime

	local verifyBuffer = require(tool:WaitForChild("VerifyBuffer"))

	local lastActivation = -5

	UpdateEvent.OnServerEvent:connect(function(playerFired,cf)
		local now = time()

		-- Ensure firing player is the owner of the tool and is waiting reload time.
		local LenientReloadTime = math.max(Settings.Trowel.ReloadTime - 1, Settings.Trowel.ReloadTime * .6)

		if playerFired == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
				lastActivation = now;

				if verifyBuffer(self.Buffer, ActiveFolder) then
					local wall = self.Buffer.Value
					local PhysicsFolder = wall.PhysicsFolder

					wall.Parent = ActiveFolder

					PhysicsFolder.PlaceCFrame.Value = cf
					wall.AncestryChanged:Connect(function()
						PhysicsFolder:Destroy()
					end)

					Debris:AddItem(wall, Lifetime);

					local function BuildWall()
						self.TrowelModule:BuildWall(cf,wall, 0.04, true);
					end
					task.spawn(BuildWall)
				end

				self.Buffer.Value = nil
				self:PrepareBufferWall()
			end
		end
	end)

	self:PrepareBufferWall()

	tool.Enabled = true
end

return Trowel]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX0DDE5F329BFB411D898541BD92B96A67">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX8E3CAB0ADB2C451685FE0C26AB704DE2">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">TrowelModule</string>
							<string name="ScriptGuid">{2C5C6E1C-BA49-4D2F-B7E2-2DB5CCE6111C}</string>
							<ProtectedString name="Source"><![CDATA[-- GloriedRage
-- Created module to minimize code repetition.
local Trowel = {}
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

function Trowel:PositionBrick(CF,wallModel,BrickIndex,ct)
	local WallBricks = wallModel:GetChildren()

	-- Bricks are named with numbers. Allows for the same brick to be placed in the same
	-- place on both the client and server.
	local Brick = wallModel:FindFirstChild(BrickIndex)

	-- Place the brick.
	if Brick then
		--Brick:FindFirstChildWhichIsA("BodyForce"):Destroy()
		local Sound = Brick:FindFirstChildWhichIsA("Sound")
		Brick.CFrame = CF
		Brick.Anchored = false;

		if not (game.Players.LocalPlayer) then
			Brick:MakeJoints()
			if Sound then
				Sound:Play()
			end
		else
			if Sound then -- Client sound
				local NewSound = Sound:Clone()
				Sound:Destroy()
				NewSound.Name = "ClientTrowelSound"
				NewSound.Parent = Brick
				--print("Playing sound")
				NewSound:Play()
			end
			Aesthetics:ApplyWallColors(Brick,ct)
			if game.Players.LocalPlayer~= Brick.creator.Value then
				Brick:MakeJoints()
			end
		end
	end

	for k,j in pairs(Brick:GetJoints()) do
		local m = j.Part1:FindFirstAncestorWhichIsA("Model")
		if m and m:FindFirstChildWhichIsA("Humanoid") then
			j:Destroy()
		end
	end

	return Brick;
end
--[[
function Trowel:CreateServerWeld(wallModel,BrickIndex,CF)
	local WallBricks = wallModel:GetChildren();
	local Brick = wallModel:FindFirstChild(BrickIndex);

	if Brick then
		if (Brick.Position - CF.Position).Magnitude > 0.1 then
			print("Waiting")
			task.wait(.1)
		end
		print("Making joints for",Brick.Name)
		Brick:FindFirstChildWhichIsA("BodyForce"):Destroy()
		Brick:MakeJoints()
	end
end
]]
function Trowel:BuildWall(cf,wall,Speed,ct)
	local yPos = 0;
	local BrickIndex = 0
	local Settings = _G.BB.Settings

	-- Build y rows
	for i = 1,Settings.Trowel.BricksPerColumn do
		local RunningVector
		local xPos = -6

		-- Build x bricks per row
		for i2 = 1,Settings.Trowel.BricksPerRow do

			-- Increase BrickIndex before each brick is placed for proper reference
			BrickIndex = BrickIndex + 1
			local Position = Vector3.new(xPos, yPos, 0)
			local CF = cf * CFrame.new(Position + Settings.Trowel.BrickSize / 2)

			self:PositionBrick(CF,wall,BrickIndex,ct)

			RunningVector = (Vector3.new(xPos, yPos, 0) + Settings.Trowel.BrickSize)
			xPos = RunningVector.x

			task.wait(Speed)
		end

		yPos = RunningVector.y
	end
end

return Trowel]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX631A2C5E605C4D0D8BE1A949A0DD0B91">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">VerifyBuffer</string>
							<string name="ScriptGuid">{8125E27D-117C-4288-BBCE-89D053D8581E}</string>
							<ProtectedString name="Source"><![CDATA[local module = {}

return function(ObjectValue, ActiveFolder)
	local Success,Error = pcall(function()
		assert(ObjectValue,"ObjectValue does not exist.")
		assert(ObjectValue.Value,"ObjectValue's value does not exist.")
		assert(ObjectValue.Value.Parent ~= nil,"ObjectValue's value is parented to nil.")
		assert(ObjectValue.Value.Parent ~= ActiveFolder, "ObjectValue's value has already been parented to ActiveFolder.")
		assert(ObjectValue.Value:IsA("Model"), "Improper class, msut be model.")
	end)

	if Success then
		--print("Verification succeeded for: ",ObjectValue.Value.Name)
		return true
	elseif Error then
		local ValueName = ObjectValue and ObjectValue.Name or "NIL_OBJVAL_NAME"
		local ObjectName = (ObjectValue and ObjectValue.Value) and ObjectValue.Value.Name or "NIL_OBJ_NAME"

		warn(
			"\n Error verifying ObjectValue...",
			"\n Value:",ValueName,
			"\n Object:",ObjectName,
			"\n Error:",Error
		)

		return false
	end
end]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX7D74FD0F9FE24C13879C5D2F60D42E58">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">false</bool>
						<CoordinateFrame name="Grip">
							<X>6.40836242e-06</X>
							<Y>-0.0700001493</Y>
							<Z>-6.40829876e-06</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>0</R11>
							<R12>-1</R12>
							<R20>0</R20>
							<R21>1</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Bomb</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Bomb.png</url></Content>
						<string name="ToolTip">Bomb</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="RemoteEvent" referent="RBXE04C98600F3B43DCBFD739EC2720BC7A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX02431BC6259E4B0BA0B1B29AD98C2651">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX120AE68E09BA4571A652D553BE780684">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BombClient</string>
								<string name="ScriptGuid">{332763EF-9878-400F-88C2-5E9C7FC56224}</string>
								<ProtectedString name="Source"><![CDATA[-- Bomb
local Bomb = {}

local Players = game:GetService("Players")
local PhysicsService = game:GetService("PhysicsService")

local tool = script.Parent.Parent

local clickTime = 0
local jumpTime = 0

local regular = "http://www.roblox.com/asset/?id=5320848090"
local reload = "http://www.roblox.com/asset/?id=5321216729"

function Bomb:TryBombJump(Bomb, override)
	local handle = tool:WaitForChild("Handle")
	local BombSettings = _G.BB.Settings.Bomb

	if self.Character.Humanoid.FloorMaterial == Enum.Material.Air then
		return
	end

	local BombJumpReloadTime = BombSettings.BombJumpReloadTime
	local BombJumpPosWindow = BombSettings.BombJumpPosWindow
	local BombJumpNegWindow = BombSettings.BombJumpNegWindow
	local BombJumpPowerFormula = BombSettings.BombJumpPowerFormula
	local MaxBombJumpPower =  BombSettings.MaxBombJumpPower
	local WalkingBombJump = BombSettings.WalkingBombJump

	if _G.BB.TrueMobile then
		BombJumpNegWindow  = math.min(-.2, BombJumpNegWindow)
		BombJumpPosWindow = math.max(.3, BombJumpPosWindow)
	end

	if Bomb and Bomb.Parent and (override or self.Character.Humanoid.MoveDirection == Vector3.new(0, 0, 0) or WalkingBombJump) then
		if not self.canBombJump then
			return
		end

		if not override and (not jumpTime or not clickTime) then
			return
		end

		-- Click then jump (jumpTime ought to be larger since it comes after clickTime)
		local Difference = jumpTime-clickTime

		-- Slight leniency with the activation order
		if override or (Difference <= BombJumpPosWindow and Difference >= BombJumpNegWindow) then
			Bomb.Ready.Value = false
			Bomb.CollisionGroup = "BombJumpBombs"
			Bomb.Ready.Value = true

			Difference = math.abs(Difference)

			local JumpPower

			if override then
				JumpPower = MaxBombJumpPower
			elseif BombJumpPowerFormula == "Quadratic" then
				JumpPower = MaxBombJumpPower * (1 - (Difference / (BombJumpPosWindow + .01))^2)
			elseif BombJumpPowerFormula == "Linear" then
				JumpPower = MaxBombJumpPower * (1 - (Difference / (BombJumpPosWindow + .01)))
			elseif BombJumpPowerFormula == "Constant" then
				JumpPower = MaxBombJumpPower
			else
				warn("Incorrect BombJumpPowerFormula value: "..BombJumpPowerFormula)
				JumpPower = MaxBombJumpPower
			end

			local rounded = math.round(JumpPower * 10) / 10
			print("Bomb jumped "..rounded.. " studs.")

			local primary = self.Character.PrimaryPart
			primary.Velocity = Vector3.new(primary.Velocity.X, JumpPower, primary.Velocity.Z)

			local function HandleReload()
				if BombJumpReloadTime > 0 then

					handle.Mesh.TextureId = reload
					handle.BrickColor = BrickColor.new("Medium stone grey")

					self.canBombJump = false
					self.bombJumpTimestamp = os.clock()

					task.wait(BombJumpReloadTime)

					if handle then
						handle.Mesh.TextureId = regular
						handle.BrickColor = BrickColor.new("Really black")
					end

					self.canBombJump = true
				end
			end

			task.spawn(HandleReload)

			task.delay(BombJumpPosWindow + 0.5, function()
				-- Reset collision group
				Bomb.Ready.Value = false
				Bomb.CollisionGroup = "Default"
				Bomb.Ready.Value = true
			end)
		end
	end
end

function Bomb:BlowUp(Explosion)
	if Explosion.BlownUpClient.Value == true then
		return
	end

	Explosion.Ready.Value = false
	Explosion.BlownUpClient.Value = true

	local Size = _G.BB.Settings.Bomb.Radius * 2
	Explosion.Anchored = true
	Explosion.Size = Vector3.new(Size, Size, Size)
	Explosion.Tick:Destroy()

	-- Client explosion sound:
	local Sounds = Explosion:WaitForChild("Boom")
	local Sound = Sounds:FindFirstChild(_G.BB.Local.BombExplosion)
	Sound.Parent = Explosion
	Sound:Play()

	local function CreateVisual()
		self.Aesthetics:CreateCustomExplosion(self.Player, Explosion)
	end

	task.spawn(CreateVisual)
	self.Explosion:HandleHitDetection(Explosion)
end

function Bomb:HandleTick(Bomb)
	local updateInterval = 0.4
	local currentColor = 1
	local TickColor = Bomb.TickColor.Value
	local BaseColor = Bomb.BaseColor.Value

	--Bomb color was BaseColor on first two ticks.
	--Bomb.Color = TickColor

	local looping = true

	Bomb.BlownUpClient.Changed:Connect(function()
		if Bomb.BlownUpClient.Value == false then
			looping = false
		end
	end)

	Bomb.Ready.Value = true

	local expectedTime = 0
	local totalTime = 0

	while (updateInterval > 0.1) and looping do

		Bomb.Tick:Stop()

		-- For some reason, when changing TimePosition mobile players
		-- could not hear the sound.
		if not _G.BB.TrueMobile then
			Bomb.Tick.TimePosition = 0.12
		end

		Bomb.Tick:Play()

		expectedTime += updateInterval
		totalTime += SafeWait.wait(updateInterval)

		if looping then
			currentColor = currentColor == 1 and 2 or 1

			Bomb.Ready.Value = false
			Bomb.Color = currentColor == 1 and TickColor or BaseColor
			Bomb.Ready.Value = true
			updateInterval = updateInterval * 0.9
		end
	end

	return (totalTime - expectedTime < 1)
end

function Bomb:AssignTouchEvent(Bomb)
	local TouchedConnection
	local hasExploded = false
	local CharacterData

	TouchedConnection = Bomb.Touched:Connect(function(hit)
		if Bomb.BlownUpClient.Value == true then
			return
		end

		local hitCharacter = hit.Parent:IsA("Model") and hit.Parent
		local hitHumanoid = hit.Parent:FindFirstChildWhichIsA("Humanoid")

		if not hitCharacter or not hitHumanoid then
			return
		end

		local hitPlr = Players:GetPlayerFromCharacter(hitCharacter)
		local canHitSelf = self.Kill:CanDamage(self.Player, hitHumanoid, _G.BB.Settings.Bomb.TouchExplodeSelf)

		if hitPlr == self.Player and not canHitSelf then
			return
		end

		if not self.Kill:CanDamage(self.Player, hitHumanoid) then
			return
		end

		self:BlowUp(Bomb)
	end)
end

function Bomb:FireAndBombJump()
	if tool.Enabled and not self.Character:FindFirstChildWhichIsA("ForceField") and self.canBombJump then
		self:Fire()
		self:TryBombJump(self.CurrentBomb, true)
		return true
	end

	return false
end

function Bomb:Fire()
	if tool.Enabled then

		tool.Enabled = false

		clickTime = tick()

		_G.BB.ProjectileCounts.Bombs += 1

		local NewBomb = self.MakeBomb(self.Player, _G.BB.ProjectileCounts.Bombs)

		self.CurrentBomb = NewBomb

		local Head = self.Character.PrimaryPart

		if _G.BB.Settings.Doomspire.BombSpawnToCam then
			local Cam = workspace.CurrentCamera
			NewBomb.CFrame = ((Cam.CFrame - Cam.CFrame.Position) + Head.Position):toWorldSpace(CFrame.new(0, 4, -2))
		else
			NewBomb.CFrame = Head.CFrame + (Head.CFrame.UpVector * 4)
		end

		NewBomb.LatestPosition.Value = NewBomb.Position
		NewBomb.LastSentPosition.Value = NewBomb.Position
		NewBomb.LastSentVelocity.Value = Vector3.new(0,0,0)
		NewBomb.LocalOriginTime.Value = clickTime
		NewBomb.Parent = self.ActiveFolder

		self.UpdateEvent:FireServer(NewBomb.CFrame, NewBomb.Velocity, clickTime, _G.BB.ProjectileCounts.Bombs)

		local function RunBomb()
			if _G.BB.Settings.Bomb.TouchExplode then
				self:AssignTouchEvent(NewBomb)
			end

			local shouldBlowUp = self:HandleTick(NewBomb)
			if shouldBlowUp then
				self:BlowUp(NewBomb)
			else
				NewBomb:Destroy()
			end
		end

		task.spawn(RunBomb)

		task.spawn(function()
			SafeWait.wait(_G.BB.Settings.Bomb.ReloadTime)
			tool.Enabled = true
		end)
	end
end

function Bomb:Init()
	self.canBombJump = true
	self.bombJumpTimestamp = 0
	self.CurrentBomb = nil

	self.Player = game:GetService("Players").LocalPlayer
	self.Character = self.Player.Character

	self.Tool = tool
	self.UpdateEvent = tool:WaitForChild("Update")
	local Activation = tool:WaitForChild("Activation")

	self.Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))
	self.Explosion = require(_G.BB.Modules:WaitForChild("Explosion"))
	self.Kill = require(_G.BB.Modules:WaitForChild("Kill"))

	SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	self.ActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(self.Player.Name)
	self.MakeBomb = require(_G.BB.ClientObjects:WaitForChild("MakeBomb"))

	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))
	HandleCrosshair(tool)

	Activation.Event:Connect(function()
		self:Fire()
	end)

	-- Only fires once per jump.
	self.Character.Humanoid.StateChanged:Connect(function(State)
		if State == Enum.HumanoidStateType.Jumping then
			if _G.BB.Settings.BombJump or _G.BB.TrueMobile then
				-- Record jump time
				jumpTime = tick()
				self:TryBombJump(self.CurrentBomb)
			end
		end
	end)
end

return Bomb]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBXE2243DF37C9A4787BCC4E0AEDEE0227F">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX06A1DA2C19674B5EA80E0E9A4E35685C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">BombServer</string>
								<string name="ScriptGuid">{FD0A9B21-93DE-4746-A37A-71A20F4AB5B9}</string>
								<ProtectedString name="Source"><![CDATA[local Bomb = {}

local tool = script.Parent.Parent;

local handle = tool:WaitForChild("Handle")
local TickSound = handle:WaitForChild("Tick")
local BoomSound = handle:WaitForChild("Boom")

local UpdateEvent = tool:WaitForChild("Update")

local Players = game:GetService("Players");
local Collections = game:GetService("CollectionService");
local Physics = game:GetService("PhysicsService")

function Bomb:CreatePhysicsFolder(count)
	--_G.BB.ProjectileCounts[self.Player.Name].Bombs += 1

	local PhysicsFolder = Instance.new("Folder")

	PhysicsFolder.Name = "Bomb".._G.BB.ProjectileCounts[self.Player.Name].Bombs
	PhysicsFolder.Name = "Bomb"..count
	local new_tag = Instance.new("ObjectValue")
	new_tag.Name = ("creator")
	new_tag.Value = self.Player
	new_tag.Parent = PhysicsFolder

	local character = Instance.new("ObjectValue")
	character.Name = "Character"
	character.Value = self.Character
	character.Parent = PhysicsFolder


	local projType = Instance.new("StringValue")
	projType.Name = "ProjectileType"
	projType.Value = "Bomb"
	projType.Parent = PhysicsFolder

	local Exploded = Instance.new("BoolValue")
	Exploded.Name = ("Exploded")
	Exploded.Value = false;
	Exploded.Parent = PhysicsFolder;

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = PhysicsFolder

	local ID = Instance.new("StringValue")
	ID.Name = "UniqueID"
	ID.Value = PhysicsFolder.Name.._G.BB.ProjectileCounts[self.Player.Name].Bombs
	ID.Parent = PhysicsFolder

	local ThemeTag = Instance.new("StringValue")
	ThemeTag.Name = "Theme"
	ThemeTag.Value = self.Aesthetics:DetermineTheme(self.Player)
	ThemeTag.Parent = PhysicsFolder

	local realCF = Instance.new("Vector3Value")
	realCF.Name = "LatestPosition"
	realCF.Parent = PhysicsFolder

	local LastCF = Instance.new("Vector3Value")
	LastCF.Name = "LastSentPosition"
	LastCF.Parent = PhysicsFolder

	local realVel = Instance.new("Vector3Value")
	realVel.Name = "LatestVelocity"
	realVel.Parent = PhysicsFolder

	--You need this because clocks aren't synchronized. Can't use a global timestamp.
	--Bwuh bwuh bwuh why don't you synchronize the clocks? Well why don't YOU do it lole
	local realFT = Instance.new("NumberValue")
	realFT.Name = "LatestTime"
	realFT.Value = 0
	realFT.Parent = PhysicsFolder

	local realOT = Instance.new("NumberValue")
	realOT.Name = "LocalOriginTime"
	realOT.Value = 0
	realOT.Parent = PhysicsFolder

	local ActiveTag = Instance.new("BoolValue")
	ActiveTag.Name = ("Active")
	ActiveTag.Value = false
	ActiveTag.Parent = PhysicsFolder;

	local AssignedTouch = Instance.new("BoolValue")
	AssignedTouch.Name = ("BlownUpClient")
	AssignedTouch.Value = false
	AssignedTouch.Parent = PhysicsFolder;

	-- Add sounds
	TickSound:Clone().Parent = PhysicsFolder
	BoomSound:Clone().Parent = PhysicsFolder

	return PhysicsFolder
end

function Bomb:Init(Settings,Modules,Buffers,Player,Character,Folder)
	self.Settings = Settings

	local Security = require(Modules:WaitForChild("Security"))

	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))

	local ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)

	self.Player = Player
	self.Character = Character

	-- First activation must always work even if time() returns 0.
	local lastActivation = -5;
	UpdateEvent.OnServerEvent:Connect(function(playerFired, initCF, initVel, initClientTime, count)
		local now = tick()
		local LenientReloadTime = math.max(Settings.Bomb.ReloadTime - 1, Settings.Bomb.ReloadTime * .6)

		if playerFired == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
				lastActivation = now

				local PhysicsFolder = self:CreatePhysicsFolder(count)

				PhysicsFolder.LatestPosition.Value = initCF.Position
				PhysicsFolder.LatestVelocity.Value = initVel
				PhysicsFolder.LatestTime.Value = 0

				PhysicsFolder.LocalOriginTime.Value = initClientTime
				PhysicsFolder.LastUpdateTick.Value = now

				PhysicsFolder.Active.Value = true


				if Security:ApproveInit(PhysicsFolder) then
					PhysicsFolder.Parent = ActiveFolder
				end

				local function ForceExplode()
					if PhysicsFolder.Parent
						and PhysicsFolder.Active.Value then

						--print("Forced explosion for:",PhysicsFolder.UniqueID.Value)

						PhysicsFolder.Active.Value = false
						game:GetService("Debris"):AddItem(PhysicsFolder, 0)
					end
				end
				task.delay(Settings.Bomb.DespawnTime, ForceExplode)
			end
		end
	end)
	tool.Enabled = true

end

return Bomb]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX15533D7EEB2644598012D6024C6420F7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Part" referent="RBX3CF5DA0B0A3849FDB8EA150A0D887780">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-253.131851</X>
								<Y>24.4894829</Y>
								<Z>-46.2263412</Z>
								<R00>-9.15471464e-05</R00>
								<R01>1</R01>
								<R02>9.15480778e-05</R02>
								<R10>3.05157155e-05</R10>
								<R11>-9.15452838e-05</R11>
								<R12>1</R12>
								<R20>1</R20>
								<R21>9.15499404e-05</R21>
								<R22>-3.05073336e-05</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">false</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4279308561</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>true</CustomPhysics>
								<Density>7.8499999</Density>
								<Friction>0.400000006</Friction>
								<Elasticity>0.25</Elasticity>
								<FrictionWeight>1</FrictionWeight>
								<ElasticityWeight>1</ElasticityWeight>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">1088</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">0</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
						<Item class="SpecialMesh" referent="RBX94B859DDE22B4713A58E3C787FF63514">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="MeshId"><url>rbxasset://fonts/timebomb.mesh</url></Content>
								<token name="MeshType">5</token>
								<string name="Name">Mesh</string>
								<Vector3 name="Offset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="Scale">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>http://www.roblox.com/asset/?id=5320848090</url></Content>
								<Vector3 name="VertexColor">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBX26C8F5246F0D49C79107748CB56F475B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Tick</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds//clickfast.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.699999988</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
						<Item class="Folder" referent="RBXB8035679DE094F4485491E2F57A1A0BB">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Boom</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBXBB6B8C9DA73542A2AE4E60CE9C54D5FF">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Modern</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1842360200</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">8</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXE59F2EE823DC44ACBB05BB4CCFAFB8B5">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Classic</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds/Rocket shot.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX1434138061704076AF15012AA45D4510">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">false</bool>
						<CoordinateFrame name="Grip">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">Superball</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/Superball.png</url></Content>
						<string name="ToolTip">Super Ball</string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="RemoteEvent" referent="RBXA1D27552738342A78DFECB76B377430C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXB85870C9307440FF8DDEEDF4148780FE">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX553996927A61493AA79C780C7FF921B5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SuperballClient</string>
								<string name="ScriptGuid">{BB3983E5-3B01-4460-B8F1-EEB3B6F1A338}</string>
								<ProtectedString name="Source"><![CDATA[local Superball = {}

local tool = script.Parent.Parent

local function canSBJump(Character)
	return (_G.BB.Settings.SuperballJump
		and Character.Humanoid.FloorMaterial == Enum.Material.Air
		and _G.BB.CanSBFly)
end

function Superball:Fire(Superball, TargetPosition, SpawnDistance, count)

	local Speed = _G.BB.Settings.Superball.Speed
	local ShootInsideBricks = _G.BB.Settings.Superball.ShootInsideBricks

	local now = time()
	local SpawnPosition = self.Head.Position + (TargetPosition - self.Head.Position).unit * SpawnDistance
	local LaunchCF = CFrame.new(SpawnPosition, TargetPosition)
	local Velocity = LaunchCF.LookVector * Speed

	Superball.LastSentPosition.Value = LaunchCF.Position
	Superball.LastSentVelocity.Value = Velocity
	Superball.LastSentTime.Value = now

	Superball.CFrame = LaunchCF
	Superball.Velocity = Velocity
	Superball.Parent = self.ClientActiveFolder

	if not ShootInsideBricks and self.isInsideSomething(Superball) then
		Superball.Anchored = true
		local Position = self.handle.Position
		local cFrame = CFrame.lookAt(Position, TargetPosition)
		Superball.CFrame = cFrame
		Superball.Velocity = Superball.CFrame.LookVector * Speed
		Superball.Anchored = false
	end

	self.handle.Boing:Play() -- or handle.Boing:Play()

	self.Delete(Superball, 8) -- exists for 8 seconds
	self.Hit:HandleHitDetection(Superball, count)
	return LaunchCF.Position, Velocity, now
end

function Superball:Init()
	local Player = game:GetService("Players").LocalPlayer
	local Character = Player.Character

	self.Hit = require(_G.BB.Modules:WaitForChild("Hit"))
	self.Delete = require(_G.BB.ClientObjects:WaitForChild("Delete"))
	self.isInsideSomething = require(_G.BB.ClientObjects:WaitForChild("isInsideSomething"))

	local MakeSuperball = require(_G.BB.ClientObjects:WaitForChild("MakeSuperball"))

	self.ClientActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(Player.Name)

	self.handle = tool:WaitForChild("Handle")

	self.Head = Character:WaitForChild("Head")

	local ReloadTime = _G.BB.Settings.Superball.ReloadTime

	local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))
	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))

	local UpdateEvent = tool:WaitForChild("Update")
	local Activation = tool:WaitForChild("Activation")
	local colorEvent = tool:WaitForChild("Color")

	local SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	Aesthetics:HandleSBHandle(Player, self.handle, colorEvent, true)
	HandleCrosshair(tool)

	Activation.Event:Connect(function(Hit, targetPos)
		if tool.Enabled then
			tool.Enabled = false

			_G.BB.ProjectileCounts.Superballs += 1

			local count = _G.BB.ProjectileCounts.Superballs
			local CollisionGroup = "Superballs"
			local SpawnDistance = _G.BB.Settings.Superball.SpawnDistance

			if canSBJump(Character) then
				CollisionGroup = "JumpySuperballs"
				SpawnDistance = 5 -- optimal spawn distance for superball jumping
			end

			local Superball = MakeSuperball(Player, CollisionGroup, count, self.handle.Color)

			local position, velocity, now = self:Fire(Superball, targetPos, SpawnDistance, count)
			UpdateEvent:FireServer(position, velocity, now, Superball.Color, count)

			Aesthetics:HandleSBHandle(Player, self.handle, colorEvent)

			SafeWait.wait(ReloadTime)

			tool.Enabled = true
		end
	end)
end

return Superball]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX20710644B54D4C58B6DE4335D1191C54">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX54B4976C23374020B2D4D8AF55D06F4C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SuperballServer</string>
								<string name="ScriptGuid">{D5F35CFF-CCBB-4CDE-9C08-3EB7AD4C601F}</string>
								<ProtectedString name="Source"><![CDATA[local Superball = {}

local tool = script.Parent.Parent

function Superball:CreatePhysicsFolder(color, count)
	--_G.BB.ProjectileCounts[self.Player.Name].Superballs += 1

	local PhysicsFolder = Instance.new("Folder")
	--PhysicsFolder.Name = "Superball".._G.BB.ProjectileCounts[self.Player.Name].Superballs
	PhysicsFolder.Name = "Superball"..count

	-- Aesthetics:
	local Folder, Theme = self.Aesthetics:GetThemeObject(self.Player, "Superball")
	local Part = Folder:FindFirstChildWhichIsA("Part")

	self.handle.Material = Part.Material
	self.handle.Reflectance = Part.Reflectance
	self.handle.Color = Theme == "Team Color" and self.Player.TeamColor.Color or Part.Color
	self.handle.Transparency = Part.Transparency

	local CT = Instance.new("Color3Value")
	CT.Name = "RandomColor"
	CT.Value = self.handle.Color
	CT.Parent = PhysicsFolder

	local ThemeTag = Instance.new("StringValue")
	ThemeTag.Name = "Theme"
	ThemeTag.Value = self.Aesthetics:DetermineTheme(self.Player)
	ThemeTag.Parent = PhysicsFolder

	if _G.BB.Settings.Themes.RandomSuperballColors and ThemeTag.Value == "Normal" then
		CT.Value = color
		self.handle.Color = color
	end

	-- Add the creator tag
	local new_tag = Instance.new("ObjectValue")
	new_tag.Name = ("creator")
	new_tag.Value = self.Player;
	new_tag.Parent = PhysicsFolder

	local lastUpdateCFrame = Instance.new("Vector3Value")
	lastUpdateCFrame.Name = "LastSentPosition"
	lastUpdateCFrame.Parent = PhysicsFolder

	local character = Instance.new("ObjectValue")
	character.Name = "Character"
	character.Value = self.Character
	character.Parent = PhysicsFolder

	local lastSentTime = Instance.new("NumberValue")
	lastSentTime.Name = "LastSentTime"
	lastSentTime.Parent = PhysicsFolder

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = PhysicsFolder

	local lp = Instance.new("Vector3Value")
	lp.Name = "LatestPosition"
	lp.Parent = PhysicsFolder

	local lv = Instance.new("Vector3Value")
	lv.Name = "LatestVelocity"
	lv.Parent = PhysicsFolder

	local lt = Instance.new("NumberValue")
	lt.Name = "LatestTime"
	lt.Parent = PhysicsFolder

	local projType = Instance.new("StringValue")
	projType.Name = "ProjectileType"
	projType.Value = "Superball"
	projType.Parent = PhysicsFolder

	local ID = Instance.new("StringValue")
	ID.Name = "UniqueID"
	ID.Value = PhysicsFolder.Name.._G.BB.ProjectileCounts[self.Player.Name].Superballs
	ID.Parent = PhysicsFolder

	local ActiveVal = Instance.new("BoolValue")
	ActiveVal.Name = "Active"
	ActiveVal.Value = true
	ActiveVal.Parent = PhysicsFolder

	local CanHalfDamageValue = Instance.new("BoolValue")
	CanHalfDamageValue.Name = "CanHalfDamage"
	CanHalfDamageValue.Value = true
	CanHalfDamageValue.Parent = PhysicsFolder

	local Hacking = Instance.new("BoolValue")
	Hacking.Name = "Hacking"
	Hacking.Value = false
	Hacking.Parent = PhysicsFolder

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = _G.BB.Settings.Superball.Damage;
	Damage.Parent = PhysicsFolder;

	self.Boing:Clone().Parent = PhysicsFolder

	return PhysicsFolder
end

function Superball:Init(Settings, Modules, Buffers, Player, Character, Folder)
	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))

	self.ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)
	self.Player = Player
	self.Character = Character

	self.handle = tool:WaitForChild("Handle")
	self.Boing = self.handle:WaitForChild("Boing")

	local Security = require(Modules:WaitForChild("Security"))
	local UpdateEvent = tool:WaitForChild("Update")
	local ColorEvent = tool:WaitForChild("Color")

	--self.Aesthetics:HandleSBHandle(Player, self.handle)

	-- First activation must always work even if time() returns 0.
	local lastActivation = -10

	UpdateEvent.OnServerEvent:Connect(function(playerFired, initPos, initVel, initTime, color, count)

		local now = time()
		local LenientReloadTime = math.max(Settings.Superball.ReloadTime - 1, Settings.Superball.ReloadTime * .6)

		if playerFired == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then
				lastActivation = now

				local PhysicsFolder = self:CreatePhysicsFolder(color, count)

				-- Begin replication
				PhysicsFolder.LatestPosition.Value = initPos
				PhysicsFolder.LatestVelocity.Value = initVel
				PhysicsFolder.LatestTime.Value = initTime
				PhysicsFolder.LastUpdateTick.Value = now
				PhysicsFolder.Active.Value = true

				if Security:ApproveInit(PhysicsFolder) then
					PhysicsFolder.Parent = self.ActiveFolder
				end

				game:GetService("Debris"):AddItem(PhysicsFolder, Settings.Superball.DespawnTime)
			end
		end
	end)

	ColorEvent.OnServerEvent:Connect(function(player, color, transparency, reflectance, material)
		self.handle.Color = color
		self.handle.Material = material
		self.handle.Reflectance = reflectance
		self.handle.Transparency = transparency
	end)

	tool.Enabled = true
end

return Superball]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX03945D3573944FC4915914EED0D3C6DA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Part" referent="RBXC3EF625883F04B7C961361630568E9F5">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-253.131851</X>
								<Y>24.4894829</Y>
								<Z>-46.2263412</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<bool name="CanCollide">false</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">false</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4291045404</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>false</CustomPhysics>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">272</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">1</token>
							<token name="shape">0</token>
							<Vector3 name="size">
								<X>2</X>
								<Y>2</Y>
								<Z>2</Z>
							</Vector3>
						</Properties>
						<Item class="Sound" referent="RBXC45D3579555D45DE9F862FFF44AFE5B6">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Boing</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds//short spring sound.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">0.5</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
					<Item class="RemoteEvent" referent="RBXC043D9DA00C443148E313E4A3CB8D119">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Color</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
				<Item class="Tool" referent="RBX714A318F7E5B43A89828C9422CA62AC9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="CanBeDropped">false</bool>
						<bool name="Enabled">true</bool>
						<CoordinateFrame name="Grip">
							<X>-0.400000006</X>
							<Y>-0.5</Y>
							<Z>-0.0700000003</Z>
							<R00>0</R00>
							<R01>0</R01>
							<R02>-1</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>1</R20>
							<R21>0</R21>
							<R22>0</R22>
						</CoordinateFrame>
						<token name="LevelOfDetail">0</token>
						<bool name="ManualActivationOnly">true</bool>
						<CoordinateFrame name="ModelMeshCFrame">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
							<R00>1</R00>
							<R01>0</R01>
							<R02>0</R02>
							<R10>0</R10>
							<R11>1</R11>
							<R12>0</R12>
							<R20>0</R20>
							<R21>0</R21>
							<R22>1</R22>
						</CoordinateFrame>
						<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
						<Vector3 name="ModelMeshSize">
							<X>0</X>
							<Y>0</Y>
							<Z>0</Z>
						</Vector3>
						<token name="ModelStreamingMode">0</token>
						<string name="Name">PaintballGun</string>
						<bool name="NeedsPivotMigration">false</bool>
						<Ref name="PrimaryPart">null</Ref>
						<bool name="RequiresHandle">true</bool>
						<float name="ScaleFactor">1</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<Content name="TextureId"><url>rbxasset://Textures/PaintballIcon.png</url></Content>
						<string name="ToolTip"></string>
						<OptionalCoordinateFrame name="WorldPivotData"></OptionalCoordinateFrame>
					</Properties>
					<Item class="Part" referent="RBX87BA274A83744EA483033B82BE0363F8">
						<Properties>
							<bool name="Anchored">false</bool>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<float name="BackParamA">-0.5</float>
							<float name="BackParamB">0.5</float>
							<token name="BackSurface">0</token>
							<token name="BackSurfaceInput">0</token>
							<float name="BottomParamA">-0.5</float>
							<float name="BottomParamB">0.5</float>
							<token name="BottomSurface">0</token>
							<token name="BottomSurfaceInput">0</token>
							<CoordinateFrame name="CFrame">
								<X>-145.704361</X>
								<Y>4.96128368</Y>
								<Z>60.2607651</Z>
								<R00>-0.309016764</R00>
								<R01>0.951056659</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>0</R11>
								<R12>-1</R12>
								<R20>-0.9510566</R20>
								<R21>-0.309016794</R21>
								<R22>0</R22>
							</CoordinateFrame>
							<bool name="CanCollide">true</bool>
							<bool name="CanQuery">true</bool>
							<bool name="CanTouch">true</bool>
							<bool name="CastShadow">true</bool>
							<string name="CollisionGroup">ToolHandles</string>
							<int name="CollisionGroupId">0</int>
							<Color3uint8 name="Color3uint8">4293900344</Color3uint8>
							<PhysicalProperties name="CustomPhysicalProperties">
								<CustomPhysics>true</CustomPhysics>
								<Density>0.699999988</Density>
								<Friction>0.300000012</Friction>
								<Elasticity>0.5</Elasticity>
								<FrictionWeight>1</FrictionWeight>
								<ElasticityWeight>1</ElasticityWeight>
							</PhysicalProperties>
							<float name="FrontParamA">-0.5</float>
							<float name="FrontParamB">0.5</float>
							<token name="FrontSurface">0</token>
							<token name="FrontSurfaceInput">0</token>
							<float name="LeftParamA">-0.5</float>
							<float name="LeftParamB">0.5</float>
							<token name="LeftSurface">0</token>
							<token name="LeftSurfaceInput">0</token>
							<bool name="Locked">false</bool>
							<bool name="Massless">true</bool>
							<token name="Material">256</token>
							<string name="MaterialVariantSerialized"></string>
							<string name="Name">Handle</string>
							<CoordinateFrame name="PivotOffset">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
								<R00>1</R00>
								<R01>0</R01>
								<R02>0</R02>
								<R10>0</R10>
								<R11>1</R11>
								<R12>0</R12>
								<R20>0</R20>
								<R21>0</R21>
								<R22>1</R22>
							</CoordinateFrame>
							<float name="Reflectance">0</float>
							<float name="RightParamA">-0.5</float>
							<float name="RightParamB">0.5</float>
							<token name="RightSurface">0</token>
							<token name="RightSurfaceInput">0</token>
							<int name="RootPriority">0</int>
							<Vector3 name="RotVelocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<float name="TopParamA">-0.5</float>
							<float name="TopParamB">0.5</float>
							<token name="TopSurface">0</token>
							<token name="TopSurfaceInput">0</token>
							<float name="Transparency">0</float>
							<Vector3 name="Velocity">
								<X>0</X>
								<Y>0</Y>
								<Z>0</Z>
							</Vector3>
							<token name="formFactorRaw">0</token>
							<token name="shape">1</token>
							<Vector3 name="size">
								<X>3</X>
								<Y>2</Y>
								<Z>1</Z>
							</Vector3>
						</Properties>
						<Item class="SpecialMesh" referent="RBX05ED6E75222947AF9AE9C47C1214F68C">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="MeshId"><url>rbxassetid://998137795</url></Content>
								<token name="MeshType">5</token>
								<string name="Name">Mesh</string>
								<Vector3 name="Offset">
									<X>0</X>
									<Y>0</Y>
									<Z>0</Z>
								</Vector3>
								<Vector3 name="Scale">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<Content name="TextureId"><url>rbxasset://textures/PaintballGunTex128.png</url></Content>
								<Vector3 name="VertexColor">
									<X>1</X>
									<Y>1</Y>
									<Z>1</Z>
								</Vector3>
							</Properties>
						</Item>
						<Item class="Sound" referent="RBX12252CB0A76541BFBC4EB8310BEB014E">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<float name="EmitterSize">10</float>
								<NumberRange name="LoopRegion">0 60000 </NumberRange>
								<bool name="Looped">false</bool>
								<string name="Name">Fire</string>
								<bool name="PlayOnRemove">false</bool>
								<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
								<bool name="PlaybackRegionsEnabled">false</bool>
								<float name="PlaybackSpeed">1</float>
								<bool name="Playing">false</bool>
								<token name="RollOffMode">0</token>
								<Ref name="SoundGroup">null</Ref>
								<Content name="SoundId"><url>rbxasset://sounds//paintball.wav</url></Content>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
								<double name="TimePosition">0</double>
								<float name="Volume">1</float>
								<float name="xmlRead_MaxDistance_3">10000</float>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX7F012D970AC44EFB9DB5375993DB12E9">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Client</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX6BE5E236AEA84C79A9983220E8E65410">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">PaintballClient</string>
								<string name="ScriptGuid">{5B4B7787-B769-4697-B3DB-B8E71D4A53BE}</string>
								<ProtectedString name="Source"><![CDATA[local Paintball = {}

local tool = script.Parent.Parent

function Paintball:Fire(Paintball, TargetPosition, SpawnDistance, count)
	local Speed = _G.BB.Settings.PaintballGun.Speed
	local ShootInsideBricks = _G.BB.Settings.PaintballGun.ShootInsideBricks

	local Head = self.Character.PrimaryPart
	local SpawnPosition = Head.Position + (TargetPosition - self.handle.Position).unit * SpawnDistance
	local LaunchCF = CFrame.lookAt(SpawnPosition, TargetPosition)
	local Velocity = LaunchCF.LookVector * Speed

	Paintball.CFrame = LaunchCF
	Paintball.Velocity = Velocity
	Paintball.Parent = self.ClientActiveFolder

	if ShootInsideBricks == false and self.isInsideSomething(Paintball) then
		Paintball.Anchored = true
		local Position = tool.Handle.Position
		Paintball.CFrame = CFrame.lookAt(Position, TargetPosition)
		Paintball.Velocity = Paintball.CFrame.LookVector * Speed
		Paintball.Anchored = false
	end

	game:GetService("Debris"):AddItem(Paintball, 10)

	self.Hit:HandleHitDetection(Paintball)
	return LaunchCF.Position, Velocity
end

function Paintball:Init()
	local Player = game:GetService("Players").LocalPlayer

	self.Hit = require(_G.BB.Modules:WaitForChild("Hit"))

	self.ClientActiveFolder = workspace:WaitForChild("Projectiles"):WaitForChild("Active"):WaitForChild(Player.Name)
	self.handle = tool:WaitForChild("Handle")
	local UpdateEvent = tool:WaitForChild("Update")

	local SafeWait = require(_G.BB.Modules.Security:WaitForChild("SafeWait"))

	self.Character = Player.Character

	local Activation = tool:WaitForChild("Activation")
	local MakePaintball = require(_G.BB.ClientObjects:WaitForChild("MakePaintball"))

	local HandleCrosshair = require(_G.BB.ClientObjects:WaitForChild("HandleCrosshair"))
	HandleCrosshair(tool)

	self.isInsideSomething = require(_G.BB.ClientObjects:WaitForChild("isInsideSomething"))

	Activation.Event:Connect(function(Hit,targetPos)
		if tool.Enabled then
			tool.Enabled = false

			_G.BB.ProjectileCounts.Paintballs += 1
			local count = _G.BB.ProjectileCounts.Paintballs

			local Paintball = MakePaintball(Player, "Paintballs", count)

			local position, velocity = self:Fire(Paintball, targetPos, _G.BB.Settings.PaintballGun.SpawnDistance, count)
			UpdateEvent:FireServer(position, velocity, time(), count, Paintball.Color)

			SafeWait.wait(_G.BB.Settings.PaintballGun.ReloadTime)
			tool.Enabled = true
		end
	end)
end

return Paintball]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="Folder" referent="RBX9EF7F92BE5114364B43B791727B1F23D">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Server</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBXEFB39C1670414217BE1CABD422E31D1B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">PaintballServer</string>
								<string name="ScriptGuid">{0675135C-9977-47B1-A37A-FEE74B6FF9EB}</string>
								<ProtectedString name="Source"><![CDATA[local Paintball = {}

local tool = script.Parent.Parent

function Paintball:CreatePhysicsFolder(color, count)

	local PhysicsFolder = Instance.new("Folder")

	--_G.BB.ProjectileCounts[self.Player.Name].Paintballs += 1

	--PhysicsFolder.Name = "PaintballGun".._G.BB.ProjectileCounts[self.Player.Name].Paintballs
	PhysicsFolder.Name = "PaintballGun"..count

	local ThemeTag = Instance.new("StringValue")
	ThemeTag.Name = "Theme"
	ThemeTag.Value = self.Aesthetics:DetermineTheme(self.Player)
	ThemeTag.Parent = PhysicsFolder

	local Folder,Theme = self.Aesthetics:GetThemeObject(self.Player,"PaintballGun");
	local Pb = Folder:FindFirstChildWhichIsA("Part")

	local CT = Instance.new("Color3Value")
	CT.Name = "RandomColor"
	CT.Value = color
	CT.Parent = PhysicsFolder

	local character = Instance.new("ObjectValue")
	character.Name = "Character"
	character.Value = self.Character
	character.Parent = PhysicsFolder

	-- Add the creator tag
	local new_tag = Instance.new("ObjectValue")
	new_tag.Name = "creator"
	new_tag.Value = self.Player
	new_tag.Parent = PhysicsFolder

	local projType = Instance.new("StringValue")
	projType.Name = "ProjectileType"
	projType.Value = "PaintballGun"
	projType.Parent = PhysicsFolder

	local ID = Instance.new("StringValue")
	ID.Name = "UniqueID"
	ID.Value = PhysicsFolder.Name.._G.BB.ProjectileCounts[self.Player.Name].Paintballs
	ID.Parent = PhysicsFolder

	local pbSettings = _G.BB.Settings.PaintballGun

	local vf = Instance.new("Vector3Value")
	vf.Name = "VectorForce"
	vf.Value = pbSettings.VectorForce
	vf.Parent = PhysicsFolder

	local m = Instance.new("NumberValue")
	m.Name = "Mass"
	m.Value = self.GetMass(pbSettings.Shape, pbSettings.Size, pbSettings.Density)
	m.Parent = PhysicsFolder

	local lp = Instance.new("Vector3Value")
	lp.Name = "LatestPosition"
	lp.Parent = PhysicsFolder

	local lv = Instance.new("Vector3Value")
	lv.Name = "LatestVelocity"
	lv.Parent = PhysicsFolder

	local lt = Instance.new("NumberValue")
	lt.Name = "LatestTime"
	lt.Parent = PhysicsFolder

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = PhysicsFolder

	local ActiveVal = Instance.new("BoolValue")
	ActiveVal.Name = "Active"
	ActiveVal.Value = true
	ActiveVal.Parent = PhysicsFolder

	local ActiveVal = Instance.new("BoolValue")
	ActiveVal.Name = "Exploded"
	ActiveVal.Value = false
	ActiveVal.Parent = PhysicsFolder

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = self.Settings.PaintballGun.Damage
	Damage.Parent = PhysicsFolder


	return PhysicsFolder
end

function Paintball:Init(Settings, Modules, Buffers ,Player, Character, Folder)
	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))
	self.GetMass = require(tool:WaitForChild("GetMass"))

	self.ActiveFolder = Folder:WaitForChild("Active"):WaitForChild(Player.Name)

	self.Player = Player
	self.Character = Character

	self.Settings = Settings

	local handle = tool:WaitForChild("Handle")
	local UpdateEvent = tool:WaitForChild("Update")

	local Security = require(Modules:WaitForChild("Security"))

	-- First activation must always work event if time() returns 0.
	local lastActivation = -10;

	UpdateEvent.OnServerEvent:Connect(function(playerFired,initPos,initVel, initTime, count, color)

		-- Verifying firer == player and reload time was waited upon.
		local now = time()
		local LenientReloadTime = math.max(Settings.PaintballGun.ReloadTime - 1, Settings.PaintballGun.ReloadTime * .6)

		if playerFired == Player and (now - lastActivation) > LenientReloadTime then
			if Player.Character and Player.Character.Parent and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 then

				lastActivation = now

				local PhysicsFolder = self:CreatePhysicsFolder(color, count)

				-- Replicate projectile
				PhysicsFolder.LatestPosition.Value = initPos or Vector3.new()
				PhysicsFolder.LatestVelocity.Value = initVel or Vector3.new()
				PhysicsFolder.LatestTime.Value = initTime

				handle:FindFirstChild("Fire"):Play()

				if Security:ApproveInit(PhysicsFolder) then
					PhysicsFolder.Parent = self.ActiveFolder
				end

				-- Clean up and prepare for next paintball
				game:GetService("Debris"):AddItem(PhysicsFolder, Settings.PaintballGun.DespawnTime)
			end
		end
	end)
	tool.Enabled = true
end

return Paintball]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="BindableEvent" referent="RBX7B64FDA74CF244398533B1964C8B4A2E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Activation</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="RemoteEvent" referent="RBX28CB7F745D354B46A56A447F00410097">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Update</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX7C98C9B9E8834BB0A7DE976FCEE2A9EC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">GetMass</string>
							<string name="ScriptGuid">{4B2DDECB-E4E8-468E-BD71-1E084716A0E5}</string>
							<ProtectedString name="Source"><![CDATA[return function(Shape, Size, Density) -- Does not account for unions
	if Shape == "Block" or Shape == "Wedge" then
		local Mass = Size.X * Size.Y * Size.Z * Density
		-- Wedges and cornerwedges do not currently have
		-- variant mass from regular blocks
		--if Shape == "Wedge" then
		--	Mass /= 2
		--end
		return Mass
	elseif Shape == "Ball" then
		local Radius = Size.Y / 2
		return (4 / 3) * math.pi * (Radius ^ 3) * Density
		-- Roblox does not support irregular spheres unless using meshes,
		-- but because you can't actually resize spheres outside of
		-- equilaterial sides, we dont need to find the smallest axis
	elseif Shape == "Cylinder" then
		local SmallestAxis = Size.Y > Size.Z and Size.Z or Size.Y
		-- Roblox does not support irregular cylinders,
		-- and so because we can freely resize the cylinder regardless,
		-- we have to see which axis is smaller so we can use that as
		-- the radius.
		local Radius = SmallestAxis / 2
		return math.pi * (Radius ^ 2) * Size.X * Density
	end
end]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX4CCE593183384F869ACC89CFA4828834">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">StarterPlayerScripts</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBX58C8F530BC804AD8999AE94BF296E65D">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">ToolObjects</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBX71347A8553FC4109A35B0F78D818A778">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Sounds</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="Folder" referent="RBXB9D80DE03907473D8236CDE877C1C793">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Hit</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX20E4811A50C445508DD1F271F096FC78">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Ping</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">0.75</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1.29999995</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXB60FF94CB548416FAF66BA102759B1C5">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Tyzone</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">0.800000012</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1.29999995</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
								<Item class="EqualizerSoundEffect" referent="RBX2BE7D853129143BD9D5E34C1A1BA5C65">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<float name="HighGain">-20.6000004</float>
										<float name="LowGain">0</float>
										<float name="MidGain">0</float>
										<string name="Name">EqualizerSoundEffect</string>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBXA4CC7215D3694900B44B73AF8A3A8780">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Mario</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://131323304</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXFC3DF8BE665F430983A82BA548A659C0">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">TF2</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://2868331684</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX5CB799021A1A458CAF272A2D4072953B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Custom</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBXFF38A07AC9A448FFA1E6B04A49DDD1F9">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Minecraft</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">0.5</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1.29999995</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX66C0B58CD2E3428C9F50C24E632DA734">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Kill</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX133A3002C39A42428F4361D5E5A8539B">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">TF2</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://2866718318</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.400000006</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX38C9B3D69F824DD9A49DCD293317A9BE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Digital</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://3378242441</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX02C3D756E1F844519DA7E13AE1E58034">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Robot</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://2275312128</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX837C114FE90D417BADA6F23B3EB662BE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Tyzone</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">0.699999988</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1.29999995</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
								<Item class="EqualizerSoundEffect" referent="RBX11AFBF2181F946A199E3BF37E35046C2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<float name="HighGain">0</float>
										<float name="LowGain">0</float>
										<float name="MidGain">0</float>
										<string name="Name">EqualizerSoundEffect</string>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBXE1517BCFEC5649B08FE87BC71E5C0A81">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Cannon</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">3.5</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://4607149531</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">3.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXC13CEA1F5BF84AB7AA5306EAF2086DF0">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">Blocked</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX9E113D4AFB994C3BA85310CEC4C7CD38">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Tyzone</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">5</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://1053296915</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">1.29999995</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
								<Item class="EqualizerSoundEffect" referent="RBX44199608213C4EBCB8CB28F812FDE979">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<float name="HighGain">-12</float>
										<float name="LowGain">0</float>
										<float name="MidGain">0</float>
										<string name="Name">EqualizerSoundEffect</string>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="PitchShiftSoundEffect" referent="RBX1BD4949DF3EE4B148FE6FA3B8640AAB3">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<string name="Name">PitchShiftSoundEffect</string>
										<float name="Octave">0.5</float>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="PitchShiftSoundEffect" referent="RBX3CD589E3E18744D1BA37082B0547C59D">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<string name="Name">PitchShiftSoundEffect</string>
										<float name="Octave">0.5</float>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
								<Item class="PitchShiftSoundEffect" referent="RBX25FDE01C8F6A43008FDB089884D07734">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<bool name="Enabled">true</bool>
										<string name="Name">PitchShiftSoundEffect</string>
										<float name="Octave">0.5</float>
										<int name="Priority">0</int>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBX1EAC9B0653F945C086D950DBE7D39B44">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Punch</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://3041192327</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">10000</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXFFCBDBA4A59041A9B8DACED25BEF3028">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">SuperballSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBX68E0EFEF46CA48879C7C10D7D2A1B6FE">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Boing</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds//short spring sound.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.5</float>
									<float name="xmlRead_MaxDistance_3">300</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX290141C721CB41E99CCED3DD47B29483">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">SlingshotSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Sound" referent="RBXB6D6BC89C4974F13B114AD79AF43D6AC">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Classic</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxassetid://844029237</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.699999988</float>
									<float name="xmlRead_MaxDistance_3">500</float>
								</Properties>
							</Item>
							<Item class="Sound" referent="RBX0AEB02EDD6B6485B89EEA0F88463C7F7">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Modern</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1.20000005</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>http://www.roblox.com/asset/?id=94795238</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">2</float>
									<float name="xmlRead_MaxDistance_3">500</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBX1F1C4973637440DB9A1628789829AC1E">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">RocketSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Folder" referent="RBXB2DEF951CAAF4F4DB4858486DC479CC3">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">Boom</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="Sound" referent="RBX01799EA8639A4802AC6AF66F3B737CA2">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Modern</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">2</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://3149249837</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<float name="Volume">4</float>
										<float name="xmlRead_MaxDistance_3">300</float>
									</Properties>
								</Item>
								<Item class="Sound" referent="RBX1A144B5A8D1240368FBCE6D4E394697A">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Classic</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxasset://sounds/collide.wav</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">300</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBX2B4D23B4DF434CB6B25671293F1A3926">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">true</bool>
									<string name="Name">Swoosh</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds/Rocket whoosh 01.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.699999988</float>
									<float name="xmlRead_MaxDistance_3">300</float>
								</Properties>
							</Item>
						</Item>
						<Item class="Folder" referent="RBXEB2D7A0111E248BFB952B75D312FFCCD">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<string name="Name">BombSounds</string>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
							<Item class="Folder" referent="RBX35C6E9187EDB4AD0A014EEDBE7E51C63">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<string name="Name">Boom</string>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
								</Properties>
								<Item class="Sound" referent="RBX798014F25B7B4792A465C1E005D4435D">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Modern</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxassetid://1842360200</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<float name="Volume">8</float>
										<float name="xmlRead_MaxDistance_3">300</float>
									</Properties>
								</Item>
								<Item class="Sound" referent="RBXF06D14C2EF484D3EBD9684D3186E3D02">
									<Properties>
										<BinaryString name="AttributesSerialize"></BinaryString>
										<float name="EmitterSize">10</float>
										<NumberRange name="LoopRegion">0 60000 </NumberRange>
										<bool name="Looped">false</bool>
										<string name="Name">Classic</string>
										<bool name="PlayOnRemove">false</bool>
										<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
										<bool name="PlaybackRegionsEnabled">false</bool>
										<float name="PlaybackSpeed">1</float>
										<bool name="Playing">false</bool>
										<token name="RollOffMode">0</token>
										<Ref name="SoundGroup">null</Ref>
										<Content name="SoundId"><url>rbxasset://sounds/Rocket shot.wav</url></Content>
										<int64 name="SourceAssetId">-1</int64>
										<BinaryString name="Tags"></BinaryString>
										<double name="TimePosition">0</double>
										<float name="Volume">1</float>
										<float name="xmlRead_MaxDistance_3">300</float>
									</Properties>
								</Item>
							</Item>
							<Item class="Sound" referent="RBX2C31F99AE74B49678CC0157472FB735D">
								<Properties>
									<BinaryString name="AttributesSerialize"></BinaryString>
									<float name="EmitterSize">10</float>
									<NumberRange name="LoopRegion">0 60000 </NumberRange>
									<bool name="Looped">false</bool>
									<string name="Name">Tick</string>
									<bool name="PlayOnRemove">false</bool>
									<NumberRange name="PlaybackRegion">0 60000 </NumberRange>
									<bool name="PlaybackRegionsEnabled">false</bool>
									<float name="PlaybackSpeed">1</float>
									<bool name="Playing">false</bool>
									<token name="RollOffMode">0</token>
									<Ref name="SoundGroup">null</Ref>
									<Content name="SoundId"><url>rbxasset://sounds//clickfast.wav</url></Content>
									<int64 name="SourceAssetId">-1</int64>
									<BinaryString name="Tags"></BinaryString>
									<double name="TimePosition">0</double>
									<float name="Volume">0.699999988</float>
									<float name="xmlRead_MaxDistance_3">300</float>
								</Properties>
							</Item>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXE03408B74FAA45038DFC800028D0D4BC">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MakeSuperball</string>
							<string name="ScriptGuid">{AF172D47-BD7F-4E2D-B958-39A26A07ECA9}</string>
							<ProtectedString name="Source"><![CDATA[local Collections = game:GetService("CollectionService")
local Debris = game:GetService("Debris")
local Physics = game:GetService("PhysicsService")
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

-- Create the superball
return function(Creator, CollisionGroup, count, _color)
	local Folder,Theme = Aesthetics:GetThemeObject(Creator, "Superball");
	local Part = Folder:FindFirstChildWhichIsA("Part"):Clone()

	Collections:AddTag(Part,"Superball")
	Collections:AddTag(Part,"Projectile")

	Part.Name = Creator.Name.."'s Superball"
	Part.CastShadow = true
	Part.Massless = false
	Part.Anchored = false
	Part.CanCollide = true
	Part.Size = Vector3.new(2, 2, 2)
	Part.Shape = Enum.PartType.Ball
	Part.BottomSurface = Enum.SurfaceType.Smooth
	Part.TopSurface = Enum.SurfaceType.Smooth

	if _G.BB.Settings.Themes.RandomSuperballColors and Theme == "Normal" then
		Part.Color =  _color
	elseif Theme == "Team Color" then
		Part.Color = Creator.TeamColor.Color
	end

	_G.BB.ClientObjects.Sounds.SuperballSounds.Boing:Clone().Parent = Part

	Aesthetics:HandleProjectileVisuals(Creator, Part, Theme)

	--local PhysicsFolderVal = Instance.new("ObjectValue")
	--PhysicsFolderVal.Name = "PhysicsFolder"
	--PhysicsFolderVal.Value = PhysicsFolder
	--PhysicsFolderVal.Parent = Part

	Part.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0, 1, 1, 1)
	Part.CollisionGroup = CollisionGroup

	-- In order to remove the PhysicsFolder buffer, had to make the projectile
	-- the location of data storage.

	local lastUpdateVel = Instance.new("Vector3Value")
	lastUpdateVel.Name = "LastSentVelocity"
	lastUpdateVel.Parent = Part

	local lastUpdateCFrame = Instance.new("Vector3Value")
	lastUpdateCFrame.Name = "LastSentPosition"
	lastUpdateCFrame.Parent = Part

	local lastSentTime = Instance.new("NumberValue")
	lastSentTime.Name = "LastSentTime"
	lastSentTime.Parent = Part

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = _G.BB.Settings.Superball.Damage
	Damage.Parent = Part

	local Type = Instance.new("StringValue")
	Type.Name = "ProjectileType"
	Type.Value = "Superball"
	Type.Parent = Part

	local c = Instance.new("ObjectValue")
	c.Name = "creator"
	c.Value = Creator
	c.Parent = Part

	local active = Instance.new("BoolValue")
	active.Name = "Active"
	active.Value = true
	active.Parent = Part

	local Ready = Instance.new("BoolValue")
	Ready.Name = "Ready"
	Ready.Value = false
	Ready.Parent = Part

	if count then
		local countVal = Instance.new("NumberValue")
		countVal.Name = "Count"
		countVal.Value = count
		countVal.Parent = Part
	end

	return Part
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX77AEAC342F9647DEA0B866962D9451CA">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MakeRocket</string>
							<string name="ScriptGuid">{7F70FA52-27EB-47F9-9E8A-ED9EACCEA6F4}</string>
							<ProtectedString name="Source"><![CDATA[local Collections = game:GetService("CollectionService")
local Players = game:GetService("Players")
local Debris = game:GetService("Debris")
local Physics = game:GetService("PhysicsService")

local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

-- Create the Rocket
return function(Creator, count, PhysicsFolder)

	local Folder,Theme = Aesthetics:GetThemeObject(Creator, "Rocket")

	local Part = Folder:FindFirstChildWhichIsA("Part"):Clone()
	Part.Name = Creator.Name.."s Rocket"
	Part.Size = Vector3.new(1, 1, 4)
	Part.BottomSurface = 3
	Part.TopSurface = 3
	Part.LeftSurface = 3
	Part.RightSurface = 3
	Part.FrontSurface = 3
	Part.BackSurface = 3
	Part.CanCollide = false
	Part.CastShadow = true
	Part.Massless = true

	Collections:AddTag(Part,"Rocket")
	Collections:AddTag(Part,"Projectile")

	if Theme == "Team Color" then
		Part.Color = Creator.TeamColor.Color
	end

	-- Make it float
	local force = Instance.new("BodyForce")
	force.Name = "Floater"
	force.Force = Vector3.new(0, Part:GetMass() * workspace.Gravity, 0)
	force.Parent = Part

	-- Used for ramp-up
	local vel = Instance.new("BodyVelocity")
	vel.Name = "RocketVelocity"
	vel.Velocity = Vector3.new(0, 0, 0)
	vel.MaxForce = Vector3.new(0, 0, 0)
	vel.Parent = Part

	Aesthetics:HandleProjectileVisuals(Creator, Part)

	_G.BB.ClientObjects.Sounds.RocketSounds.Boom:Clone().Parent = Part
	_G.BB.ClientObjects.Sounds.RocketSounds.Swoosh:Clone().Parent = Part

	local v = Instance.new("NumberValue")
	v.Name = "LastReceivedDistance"
	v.Value = 0
	v.Parent = Part

	local ld = Instance.new("Vector3Value")
	ld.Name = "LastSentPosition"
	ld.Parent = Part

	local lastUpdateVel = Instance.new("Vector3Value")
	lastUpdateVel.Name = "LastSentVelocity"
	lastUpdateVel.Parent = Part

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = _G.BB.Settings.Rocket.Damage
	Damage.Parent = Part

	local Type = Instance.new("StringValue")
	Type.Name = "ProjectileType"
	Type.Value = "Rocket"
	Type.Parent = Part

	local c = Instance.new("ObjectValue")
	c.Name = "creator"
	c.Value = Creator
	c.Parent = Part

	local LastUpdateTick = Instance.new("NumberValue")
	LastUpdateTick.Name = "LastUpdateTick"
	LastUpdateTick.Parent = Part

	local cf = Instance.new("CFrameValue")
	cf.Name = "Origin"
	cf.Parent = Part

	local active = Instance.new("BoolValue")
	active.Name = "Active"
	active.Value = true
	active.Parent = Part

	local Ready = Instance.new("BoolValue")
	Ready.Name = "Ready"
	Ready.Value = false
	Ready.Parent = Part

	if count then
		local countVal = Instance.new("NumberValue")
		countVal.Name = "Count"
		countVal.Value = count
		countVal.Parent = Part
	end

	if _G.BB.Settings.Doomspire.RocketCollisions then
		Part.CollisionGroup = "RideableRockets"
		Part.CanCollide = true
	end


	return Part
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="LocalScript" referent="RBX392C8455266B403BBF5E82B68EA0A07A">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<bool name="Disabled">false</bool>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Core</string>
							<token name="RunContext">0</token>
							<string name="ScriptGuid">{7F73911A-8DC2-43A8-8B4C-8EFA72BC5D3A}</string>
							<ProtectedString name="Source"><![CDATA[-- GloriedRage

local Physics = game:GetService("PhysicsService")
local repStorage = game:GetService("ReplicatedStorage");
local Collections = game:GetService("CollectionService")
local UserInputService = game:GetService("UserInputService")
local CollectionService = game:GetService("CollectionService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local ProjectileFolder = workspace:WaitForChild("Projectiles")
local Remotes = repStorage:WaitForChild("ToolNetworking")
local Modules = repStorage:WaitForChild("ToolModules")
local TimeValue = repStorage:WaitForChild("SERVER_TIME")
local Buffers = Player:WaitForChild("Buffers") -- stored in player bc server doesn't have access to PS
local ClientObjects = script.Parent

local ExtapolationModule = require(script:WaitForChild("Extrapolation"))
local Targeting = require(script:WaitForChild("Targeting"))
local SuperballCollisions = require(script:WaitForChild("SuperballCollisions"))

local Security = require(Modules:WaitForChild("Security"))
local PSPV = require(Modules.Security:WaitForChild("PSPV"))
local Aesthetics = require(Modules:WaitForChild("Aesthetics"))

local Settings = Remotes:WaitForChild("AcquireSettings"):InvokeServer()

local function getNumParts(char)
	local count = 0

	for _, charPart in pairs(char:GetDescendants()) do
		if charPart:IsA("BasePart") then
			count += 1
		end
	end

	return count
end

local function partsLoaded(char, rigType)
	local min = rigType == Enum.HumanoidRigType.R15 and 16 or 7

	return getNumParts(char) >= min
end

function SetCollisions(char)

	while not _G.BB do
		task.wait()
	end

	_G.BB.CanSBFly = true

	local humanoid = char:FindFirstChildWhichIsA("Humanoid")

	while not partsLoaded(char, humanoid.RigType) do
		task.wait()
	end

	for _,CharacterPart in pairs(char:GetDescendants()) do
		if CharacterPart:IsA("BasePart") then
			--print("Set collisions for: "..CharacterPart.Name)
			CharacterPart.CollisionGroup = "PlayerParts"
		end
	end

	local Humanoid = char:FindFirstChildWhichIsA("Humanoid")
	if Humanoid and Settings.SuperballJump and not Settings.SuperballFly then
		SuperballCollisions(Humanoid)
	end
end

-- Initialize an individual tool
function LoadTool(Tool)
	local ClientFolder = Tool:FindFirstChild("Client")
	local ClientModule = ClientFolder and ClientFolder:FindFirstChildWhichIsA("ModuleScript")
	local ActivationEvent = Tool:FindFirstChild("Activation")

	if ClientModule and ActivationEvent then
		Collections:AddTag(Tool, "Initialized")
		require(ClientModule):Init()
	end
end

local function Verify(Tool)
	if Tool:IsA("Tool") and not Collections:HasTag(Tool, "Initialized") then
		Collections:AddTag(Tool, "Initialized")
		task.spawn(LoadTool, Tool)
	end
end

-- Initialize all client tools in back
function InitializeClient()
	for _,Tool in pairs(Player.Backpack:GetChildren()) do
		Verify(Tool)
	end
end

function InitializeExtrapolation()
	ExtapolationModule:Init(Settings, Modules, Remotes, Player, ProjectileFolder)
end

-- Construct and release global table
local GlobalTable = {}
GlobalTable.Settings = Settings
GlobalTable.Modules = Modules
GlobalTable.Remotes = Remotes
GlobalTable.Buffers = Buffers
GlobalTable.ProjectileFolder = ProjectileFolder
GlobalTable.ServerTime = TimeValue
GlobalTable.ClientObjects = ClientObjects
GlobalTable.TrueMobile = not UserInputService.ModalEnabled and  UserInputService.TouchEnabled
GlobalTable.CanSBFly = true
GlobalTable.Local = Settings.LocalSettingsDefaults
GlobalTable.InitializeClient = InitializeClient
GlobalTable.LoadTool = LoadTool
GlobalTable.ToggleThemes = Aesthetics.ToggleThemes
GlobalTable.IconStateChanged = Instance.new("BindableEvent")
GlobalTable.SlaveTimeTable = {}
GlobalTable.ProjectileCounts = {
	Superballs = 0;
	Rockets = 0;
	Pellets = 0;
	Bombs = 0;
	Walls = 0;
	Paintballs = 0;
}

_G.BB = GlobalTable
print("Released global table")

local function CharacterAdded(character)
	if not character.Parent then
		character.AncestryChanged:Wait()
	end

	if character.Parent and Player.Character == character then
		character:WaitForChild("Humanoid")

		task.spawn(InitializeClient)
		SetCollisions(character)
	end
end

-- Begin initialization and event registering
local Character = Player.Character
if Character then
	task.spawn(CharacterAdded, Character)
end

task.spawn(InitializeExtrapolation)

Player.CharacterAdded:Connect(CharacterAdded)
Player.Backpack.ChildAdded:Connect(function(Tool)
	Verify(Tool)
end)

Aesthetics:RegisterClientEvents()
PSPV:InitClient()

local function ActivateTool(Position, TouchTap, inputObject)
	local tool = Security:ApproveActivation(Player)
	if tool then
		if tool.Name == "Bomb" or tool.Name == "Sword" then
			tool.Activation:Fire()
		elseif tool.Name == "Slingshot" then
			local Hit, TargetPosition = Targeting:Get3DPosition(Position.X, Position.Y, TouchTap)
			tool.Activation:Fire(Hit, TargetPosition, inputObject)
		else
			local Hit, TargetPosition = Targeting:Get3DPosition(Position.X, Position.Y, TouchTap)
			tool.Activation:Fire(Hit, TargetPosition)
		end
	end
end

if UserInputService.TouchEnabled and Settings.Mobile.ShootMode == "InWorld" then
	UserInputService.TouchTapInWorld:Connect(function(Position, UITouch)
		if UITouch then return end
		ActivateTool(Position, true)
	end)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end

	local tool = Security:ApproveActivation(Player)
	local isSling = (tool and tool.Name == "Slingshot")

	if input.UserInputType == Enum.UserInputType.MouseButton1
		or input.UserInputType == Enum.UserInputType.Gamepad1
		or (
			input.UserInputType == Enum.UserInputType.Touch and
			(Settings.Mobile.ShootMode == "UserInput" or isSling)
			)
	then
		ActivateTool(input.Position, input.UserInputType == Enum.UserInputType.Touch, input)
	end
end)

Collections:GetInstanceAddedSignal("BodyMoverServer"):Connect(function(p)
	if p:IsA("BodyVelocity") then
		p.MaxForce = Vector3.new()
	elseif p:IsA("BodyAngularVelocity") then
		p.MaxTorque = Vector3.new()
	else
		warn("Unrecognized BodyMoverServer object named", p.Name)
	end
end)

--[[
	Under _G.BB:
	- Settings: The default settings that were overriden by the requirer's changes
	- Modules: Directory of the modules used by the toolset
	- Remotes: Directory of the remotes used by the toolset
	- Buffers: Directory of the buffers used by the toolset
	- ProjectileFolder: Directory of the projectiles (would be physics folders from server's POV)
	- ServerTime: Value that holds the last tick() at .Heartbeat intervals. **Set by server, replicated to client
	- ClientObjects: Directory of the client modules (this script's parent)
	- TrueMobile: A bool of whether or not the player is truly on mobile
	- CanSbFly: A bool of whether or not the player has landed from their last superball jump
	- Local: Refers to the setting's local variables table
	- InitializeClient: Function that initializes all tools a client has
	- LoadModule: A function that loads the client modules of a specific weapon
	- ToggleThemes: A function that toggles the visibility of all themes in the game (no neon, no particles, no trails, etc)
	- IconStateChanged: A BindableEvent that fires when the player equips a tool, reloads, fires, or unequips a tool
	- SlaveTimeTable: Only relevant when Security.PSPV is true. Table created by client filled with other character CFrames and positions.
	- ProjectileCounts: Count of each projectile (increases as they're fired). Does not reset after death, only after rejoining
]]
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
						<Item class="ModuleScript" referent="RBX467734A9F06446A4BCF29E0301AE207B">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Targeting</string>
								<string name="ScriptGuid">{3EF54879-8542-4741-BF99-D0FF6793A6E9}</string>
								<ProtectedString name="Source"><![CDATA[-- GloriedRage, Thegameboy and NexusAvenger
local Targeting = {}

local Collections = game:GetService("CollectionService")
local Filtered = {}

-- Assumes nothing like nested models in the hierarchy.
local function FindCharacterAncestor(part)
	local Model = part:FindFirstAncestorOfClass("Model")
	local Humanoid = Model and Model:FindFirstChildOfClass("Humanoid")
	return Model,Humanoid
end

local player = game:GetService("Players").LocalPlayer -- player would be nil for seemingly no reason..?

-- Custom raycasting function to prevent specific objects from messing up targeting
function Targeting:CastRay(StartPos, Direction, Length)
	local _set = _G.BB.Settings
	local Settings = _set.Targeting

	local ref =  _G.BB.Modules.Callbacks.Targeting
	local Callback = ref and require(ref)

	local raycastParams = RaycastParams.new()
	raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	raycastParams.FilterDescendantsInstances = Filtered
	raycastParams.IgnoreWater = true

	local RaycastResults = workspace:Raycast(StartPos,Direction * Length, raycastParams)
		or {Position = StartPos + (Direction* Length)}

	local Hit = RaycastResults and RaycastResults.Instance
	local EndPos = RaycastResults and RaycastResults.Position

	if Hit then
		local CallbackResult = Callback(Hit)

		if CallbackResult == false then

			-- Cast another ray
			table.insert(Filtered,Hit)
			return self:CastRay(EndPos, Direction, Length - ((StartPos - EndPos).magnitude))
		end
	end

	-- Return the hit and target position
	Filtered = {}

	--print("Hit:", Hit, "Position:", EndPos)
	return Hit,EndPos
end

-- Acquires world position of the mouse
function Targeting:Get3DPosition(X, Y, TouchTap)
	local Camera = workspace.CurrentCamera
	local MouseRay = Camera[(TouchTap and "Viewport" or "Screen") .. "PointToRay"](Camera, X, Y)
	local EndPos = MouseRay.Origin + MouseRay.Direction
	table.insert(Filtered, player.Character)
	local Direction = (EndPos - Camera.CFrame.Position).Unit
	return self:CastRay(Camera.CFrame.Position, Direction, 9950)
end

return Targeting]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBXF883191B784B42A982396DDCC3BF2DF5">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">Extrapolation</string>
								<string name="ScriptGuid">{E5EC2FDF-7020-45C3-87C6-5D515DE23979}</string>
								<ProtectedString name="Source"><![CDATA[-- Created by Tyzone, modified by GloriedRage

local Extrapolation = {}
local Physics = game:GetService("PhysicsService")
local Debris = game:GetService("Debris")
local TweenService = game:GetService("TweenService")

local TickTimeStamps = {
	0.4,
	0.76,
	1.084,
	1.3756,
	1.63804,
	1.874236,
	2.0868124,
	2.27813116,
	2.450318044,
	2.6052862396,
	2.74475761564,
	2.870281854076,
	2.9832536686684,
	3.0849283018016 -- Looks like a wedge of cheese tbh
}

local InvalidClasses = {
	"Folder",
	"Model"
}

local LastUpdate = -10
local UpdateInterval = 1/6 -- in seconds

local LastRender = -10
local RenderInterval = 1/60 -- in seconds


local function validateTime(Now, Then, Interval, Update)
	local OutsideInterval = Now - Then > Interval
	if OutsideInterval then
		if Update then
			LastUpdate = Now
		else
			LastRender = Now
		end
	end
	return OutsideInterval
end

local function getProjectileData(Projectile)
	local projectileType = Projectile.ProjectileType.Value
	local ID_array = {Projectile.ProjectileType.Value, Projectile.Count.Value}

	if not _G.BB.Settings.Extrapolation.Updates[projectileType] then
		return
	end

	if projectileType == "Superball" or projectileType == "Slingshot" or projectileType == "PaintballGun" then

		-- Send ID array, CFrame, and Velocity
		local PositionMag = (Projectile.CFrame.Position-Projectile.LastSentPosition.Value).Magnitude
		local VelocityMag = (Projectile.Velocity-Projectile.LastSentVelocity.Value).Magnitude

		if PositionMag > 1 or VelocityMag > 1 then

			Projectile.LastSentPosition.Value = Projectile.Position
			Projectile.LastSentVelocity.Value = Projectile.Velocity
			Projectile.LastSentTime.Value = time()

			return {ID_array, Projectile.Position, Projectile.Velocity, Projectile.LastSentTime.Value}
		end

	elseif projectileType == "Rocket" then

		local OriginPosition = Projectile.Origin.Value.Position
		local CurrentPosition = Projectile.Position
		local LastSentPosition = Projectile.LastSentPosition.Value
		local Distance = (CurrentPosition - OriginPosition).Magnitude
		local VelocityMag = (Projectile.Velocity-Projectile.LastSentVelocity.Value).Magnitude

		if (CurrentPosition - LastSentPosition).Magnitude > 1 or VelocityMag > 1 then

			Projectile.LastSentPosition.Value = CurrentPosition

			local array = {ID_array, Distance}

			-- only send if necessary
			--if _G.BB.Settings.Rocket.Speed ~= _G.BB.Settings.Rocket.InitialSpeed then
			--	table.insert(array, Projectile.Velocity)
			--end

			--if _G.BB.Settings.Extrapolation.PingCompensation.Rocket then

			--	-- physics replicator determines data based on position
			--	-- in sent array
			--	if #array == 2 then
			--		table.insert(array, Vector3.new(0,0,0))
			--	end

			--	table.insert(array, _G.BB.ServerTime.Value)
			--end

			return array
		end

	elseif projectileType == "Bomb" then

		local Now = tick()
		local TickDifference = Now - Projectile.LocalOriginTime.Value
		local PositionMag = (Projectile.CFrame.Position - Projectile.LastSentPosition.Value).Magnitude
		local VelocityMag = (Projectile.Velocity - Projectile.LastSentVelocity.Value).Magnitude

		if PositionMag > 1 or VelocityMag > .5 or TickDifference > .1 then

			Projectile.LastSentPosition.Value = Projectile.Position
			Projectile.LastSentVelocity.Value = Projectile.Velocity

			return {ID_array, Projectile.Position, Projectile.Velocity, TickDifference}
		end
	end
end

function Extrapolation:SendUpdateData()
	local PhysicsPacket = {}

	for _, Projectile in pairs(self.ClientActiveFolder:GetChildren()) do
		if not table.find(InvalidClasses, Projectile.ClassName) then

			if Projectile and Projectile.Active.Value then

				local ProjectileDataArray = getProjectileData(Projectile)

				if ProjectileDataArray then
					table.insert(PhysicsPacket, ProjectileDataArray)
				end
			end
		end
	end

	if #PhysicsPacket > 0 then
		self.UpdateRemote:FireServer(PhysicsPacket)
	end
end

-- Uses data from an added folder that contains physics values to replicate a projectile
function Extrapolation:Begin(PhysicsFolder)

	if PhysicsFolder:IsA("Model") then
		local CandidatePF = PhysicsFolder:FindFirstChild("PhysicsFolder")
		if CandidatePF then
			PhysicsFolder = CandidatePF
		else
			return
		end
	elseif not PhysicsFolder:IsA("Folder") then
		return
	end

	if not PhysicsFolder:WaitForChild("creator", 1/30) then
		warn("No creator value!")
		return
	end

	if not PhysicsFolder:FindFirstChild("ProjectileType") then
		warn("No projectile type!")
		return
	end

	local extrapProjectile
	local creator = PhysicsFolder.creator.Value

	local tickRender = nil

	if PhysicsFolder.ProjectileType.Value == "Superball" then

		-- Make new superball
		extrapProjectile = self.MakeSuperball(creator, "Superballs", nil, PhysicsFolder.RandomColor.Value)

		-- Update position upon value changed
		local latestPos = PhysicsFolder.LatestPosition
		latestPos.Changed:Connect(function()
			extrapProjectile.Position = latestPos.Value
		end)

		-- Update velocity upon value changed
		local latestVel = PhysicsFolder.LatestVelocity
		latestVel.Changed:Connect(function()
			extrapProjectile.Velocity = latestVel.Value
		end)

		-- Remove projectile upon inactivity
		local function checkActive()
			if PhysicsFolder.Active.Value == false then
				Debris:AddItem(extrapProjectile, 1)
			end
		end

		PhysicsFolder.Active.Changed:Connect(checkActive)

		-- Fire the superball!
		extrapProjectile.Position = latestPos.Value
		extrapProjectile.Velocity = latestVel.Value
		extrapProjectile.Parent = self.ExtrapolatedFolder

		extrapProjectile.Boing:Play()

		checkActive()

	elseif PhysicsFolder.ProjectileType.Value == "Slingshot" then
		extrapProjectile = self.MakePellet(creator, "Pellets")

		-- Update position upon value changed
		local latestPos = PhysicsFolder.LatestPosition
		latestPos.Changed:Connect(function()
			extrapProjectile.Position = latestPos.Value
		end)

		-- Update velocity upon value changed
		local latestVel = PhysicsFolder.LatestVelocity
		latestVel.Changed:Connect(function()
			extrapProjectile.Velocity = latestVel.Value
		end)

		-- Remove projectile upon inactivity
		local function checkActive()
			if PhysicsFolder.Active.Value == false then
				Debris:AddItem(extrapProjectile, 1)
			end
		end

		PhysicsFolder.Active.Changed:Connect(checkActive)

		-- Fire the pellet!
		extrapProjectile.Position = latestPos.Value
		extrapProjectile.Velocity = latestVel.Value
		extrapProjectile.Parent = self.ExtrapolatedFolder

		local Sound = extrapProjectile.SlingshotSounds:FindFirstChild(_G.BB.Local.SlingshotSound)
		if Sound then
			Sound.Parent = extrapProjectile
			Sound:Play()
		end

		checkActive()

	elseif PhysicsFolder.ProjectileType.Value == "PaintballGun" then
		extrapProjectile = self.MakePaintball(creator, "Paintballs", nil, PhysicsFolder.RandomColor.Value)

		-- Update position upon value changed
		local latestPos = PhysicsFolder.LatestPosition
		latestPos.Changed:Connect(function()
			extrapProjectile.Position = latestPos.Value
		end)

		-- Update velocity upon value changed
		local latestVel = PhysicsFolder.LatestVelocity
		latestVel.Changed:Connect(function()
			extrapProjectile.Velocity = latestVel.Value
		end)

		-- Explode paintball upon inactivity
		local function checkActive()
			if PhysicsFolder.Active.Value == false then
				self.Aesthetics:ExplodePaintball(extrapProjectile)
			end
		end

		PhysicsFolder.Active.Changed:Connect(checkActive)

		-- Fire the paintball!
		extrapProjectile.Position = latestPos.Value
		extrapProjectile.Velocity = latestVel.Value
		extrapProjectile.Parent = self.ExtrapolatedFolder

		checkActive()

	elseif PhysicsFolder.ProjectileType.Value == "Rocket" then

		extrapProjectile = self.MakeRocket(creator, nil, PhysicsFolder)

		local function determineOffset()
			local ClientTime = _G.BB.ServerTime.Value
			local ServerTime = PhysicsFolder.ServerTime.Value
			local SenderTime = PhysicsFolder.ClientTime.Value
			local TotalDelay = (ServerTime - SenderTime) + (ServerTime - ClientTime)
			local offset = TotalDelay * _G.BB.Settings.Rocket.Speed
			return offset
		end

		local origin = PhysicsFolder.Origin.Value
		local pingCompensation = _G.BB.Settings.Extrapolation.PingCompensation.Rocket and determineOffset()


		local progress = pingCompensation and (origin.lookVector * pingCompensation) or origin.lookVector
		local newCF = origin + progress

		extrapProjectile.CFrame = newCF

		local InitialVelocity = origin.lookVector * _G.BB.Settings.Rocket.InitialSpeed
		local Velocity = origin.lookVector * _G.BB.Settings.Rocket.Speed

		extrapProjectile.Velocity = InitialVelocity
		extrapProjectile.RocketVelocity.Velocity = InitialVelocity
		extrapProjectile.RocketVelocity.MaxForce = Vector3.new(1e9, 1e9, 1e9)

		local tweenInfo = TweenInfo.new(_G.BB.Settings.Rocket.RampUpDuration, Enum.EasingStyle.Linear)
		local tween = TweenService:Create(extrapProjectile.RocketVelocity, tweenInfo, {Velocity = Velocity})

		tween:Play()


		if _G.BB.Settings.RocketRiding and PhysicsFolder and not self.Kill:CanDamage(creator, self.Player.Character.Humanoid) then
			-- Can Collide true
			extrapProjectile.CanCollide = true

			extrapProjectile.CollisionGroup = "RideableRockets"

			-- Make dense
			local densityMultiplier = 140
			local OriginalProperties = PhysicalProperties.new(extrapProjectile.Material)
			extrapProjectile.CustomPhysicalProperties = PhysicalProperties.new(
				OriginalProperties.Density * densityMultiplier, OriginalProperties.Friction, OriginalProperties.Elasticity
			) -- SUPER dense so that you can actually ride the rocket

			--Adapt bodymovers to the new density
			extrapProjectile.Floater.Force *= densityMultiplier
			extrapProjectile.RocketVelocity.MaxForce *= densityMultiplier

			-- Make rigid
			local Part = Instance.new("Part")
			Part.Size = Vector3.new(.05,.05,.05)
			Part.Anchored = true
			Part.CanCollide = false
			Part.Position = PhysicsFolder.Origin.Value.Position - PhysicsFolder.Origin.Value.lookVector * 1000
			Part.CFrame = CFrame.new(Part.Position,Part.Position + extrapProjectile.CFrame.LookVector)
			Part.Parent = workspace

			local Attachment1 = Instance.new("Attachment")
			Attachment1.Name = "Goal"
			Attachment1.Parent = Part
			Attachment1.Axis = Vector3.new(0, 0, 1)

			local Attachment0 = Instance.new("Attachment")
			Attachment0.Name = "Rocket"
			Attachment0.Parent = extrapProjectile
			Attachment0.Axis = Vector3.new(0, 0, 1)

			local Constraint = Instance.new("AlignOrientation")
			Constraint.RigidityEnabled = true
			Constraint.Attachment1 = Attachment1
			Constraint.Attachment0 = Attachment0
			Constraint.Parent = Part

			local Constraint = Instance.new("PrismaticConstraint")
			Constraint.Attachment1 = Attachment1
			Constraint.Attachment0 = Attachment0
			Constraint.Parent = Part

			Debris:AddItem(Part,10)
		end

		-- Update distance upon value changed
		-- Compensate for ping if settings dictate so
		local latestDistance = PhysicsFolder.LatestDistance
		latestDistance.Changed:Connect(function()
			local distance = latestDistance.Value

			if _G.BB.Settings.Extrapolation.PingCompensation.Rocket then
				distance += pingCompensation
			end

			local progress = origin.lookVector * distance
			local newCF = origin + progress

			extrapProjectile.CFrame = newCF
		end)

		-- Update velocity upon value changed
		--local latestVel = PhysicsFolder.LatestVelocity
		--latestVel.Changed:Connect(function()
		--	extrapProjectile.Velocity = latestVel.Value
		--end)

		-- Explode rocket upon inactivity
		local function checkActive()
			if PhysicsFolder.Active.Value == false then
				self.Explosion:ExtrapolateExplosion(extrapProjectile, PhysicsFolder)
			end
		end

		PhysicsFolder.Active.Changed:Connect(checkActive)

		extrapProjectile.Parent = self.ExtrapolatedFolder
		extrapProjectile.Swoosh:Play()

		checkActive()

	elseif PhysicsFolder.ProjectileType.Value == "Bomb" then

		extrapProjectile = self.MakeBomb(creator)

		local exploded = false

		-- Update position upon value changed
		local latestPos = PhysicsFolder.LatestPosition
		latestPos.Changed:Connect(function()
			extrapProjectile.Position = latestPos.Value
		end)

		-- Update velocity upon value changed
		local latestVel = PhysicsFolder.LatestVelocity
		latestVel.Changed:Connect(function()
			extrapProjectile.Velocity = latestVel.Value
		end)

		-- Explode bomb upon inactivity
		local function checkActive()
			if PhysicsFolder.Active.Value == false then
				exploded = true
				extrapProjectile.Position = latestPos.Value
				extrapProjectile.Velocity = latestVel.Value

				self.Explosion:ExtrapolateExplosion(extrapProjectile, PhysicsFolder)
			end
		end

		extrapProjectile.Position = latestPos.Value
		extrapProjectile.Velocity = latestVel.Value
		extrapProjectile.Parent = self.ExtrapolatedFolder

		--Play the first tick
		extrapProjectile.Tick:Stop()
		if not _G.BB.TrueMobile then
			extrapProjectile.Tick.TimePosition = 0.12
		end
		extrapProjectile.Tick:Play()

		-- Update last tick time value
		local latestTime = PhysicsFolder.LatestTime
		--local _tick = 1

		local function updateTick(dt)
			if exploded then
				if tickRender then
					tickRender:Disconnect()
				end
				return
			end

			-- Update last tick time value
			local receivedTime = PhysicsFolder.LatestTime.Value
			local lastTime = extrapProjectile.LastReceivedTime.Value
			if lastTime < receivedTime then
				extrapProjectile.LastReceivedTime.Value = receivedTime
			else
				extrapProjectile.LastReceivedTime.Value = lastTime + dt -- Default render speed
			end
			local updatedTime = extrapProjectile.LastReceivedTime.Value

			-- Update tick time
			local iTick = -1
			for i=1,14 do
				if lastTime<TickTimeStamps[i] and updatedTime>=TickTimeStamps[i] then
					iTick = i
					break
				elseif updatedTime<TickTimeStamps[i] then
					break
				end
			end

			-- Play tick sound and update color
			if iTick ~= -1 then
				extrapProjectile.Tick:Stop()

				if not _G.BB.TrueMobile then
					extrapProjectile.Tick.TimePosition = 0.12
				end

				extrapProjectile.Tick:Play()

				local Val = iTick%2

				if Val == 1 then
					extrapProjectile.Color = extrapProjectile.TickColor.Value
				else
					extrapProjectile.Color = extrapProjectile.BaseColor.Value
				end

				if iTick == 14 then
					extrapProjectile.Anchored = true
				end
			end
		end

		--latestTime.Changed:Connect(function(new)
		--	updateTick(new - extrapProjectile.LastReceivedTime.Value)
		--end)

		tickRender = game:GetService("RunService").RenderStepped:Connect(function(dt)
			updateTick(dt)
		end)

		PhysicsFolder.Active.Changed:Connect(checkActive)

		checkActive()

	elseif PhysicsFolder.ProjectileType.Value == "Wall" then

		-- Toggle trowel outlines
		local CF = PhysicsFolder.PlaceCFrame.Value
		local CT = PhysicsFolder.RandomColor.Value
		local wall = PhysicsFolder.Wall.Value

		for _,Brick in pairs(wall:GetChildren()) do

			local SB = Brick:FindFirstChildWhichIsA("SelectionBox")

			if SB then
				SB.Visible = _G.BB.Local.TrowelOutlines
			end

			self.Aesthetics:ApplyWallColors(Brick,CT)
		end
	end

	if not extrapProjectile then
		--warn("Added physics folder has improper projectile type")
		return
	end

	PhysicsFolder.AncestryChanged:Connect(function(_, newParent)
		if newParent == nil then
			Debris:AddItem(extrapProjectile, 0)
			if tickRender then
				tickRender:Disconnect()
			end
		end
	end)

	extrapProjectile.Parent = self.ExtrapolatedFolder
end


function Extrapolation:Init(Settings, Modules, Remotes, Player, ProjectileFolder)

	local objects = Player.PlayerScripts.ToolObjects

	self.Player = Player

	self.Aesthetics = require(Modules:WaitForChild("Aesthetics"))
	self.Explosion = require(Modules:WaitForChild("Explosion"))
	self.Kill = require(Modules:WaitForChild("Kill"))

	self.UpdateRemote = Remotes:WaitForChild("UpdatePhysics")

	self.MakeSuperball = require(objects:WaitForChild("MakeSuperball"))
	self.MakeRocket = require(objects:WaitForChild("MakeRocket"))
	self.MakeBomb = require(objects:WaitForChild("MakeBomb"))
	self.MakePellet = require(objects:WaitForChild("MakePellet"))
	self.MakePaintball = require(objects:WaitForChild("MakePaintball"))


	-- Folder that contains each player's various physics folders and projectiles
	self.ActiveFolder = ProjectileFolder:WaitForChild("Active")

	-- Folder that contains extrapolated projectiles (only visible to client)
	self.ExtrapolatedFolder = ProjectileFolder:WaitForChild("Extrapolated")

	-- Folder that contains client's active physics folders and projectiles
	self.ClientActiveFolder = self.ActiveFolder:WaitForChild(Player.Name)

	local function EvaluateFolder(Folder)
		-- Do not extrapolate own projectiles
		if not Folder:IsA("Folder") or Folder.Name == Player.Name then
			return
		end

		for _,Folder2 in pairs(Folder:GetChildren()) do
			self:Begin(Folder2)
		end

		Folder.ChildAdded:Connect(function(Folder3)
			self:Begin(Folder3)
		end)
	end

	for _,Folder in pairs(self.ActiveFolder:GetChildren()) do
		EvaluateFolder(Folder)
	end

	self.ActiveFolder.ChildAdded:connect(EvaluateFolder)

	game:GetService("RunService").RenderStepped:connect(function(ElaspedTime)
		--Displace all extrapolated projectiles
		local Start = tick()

		if validateTime(Start, LastUpdate, UpdateInterval, true) then
			self:SendUpdateData()
		end
	end)
end

return Extrapolation]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
						<Item class="ModuleScript" referent="RBX73F272FEA9D74975B3F9EA662974E915">
							<Properties>
								<BinaryString name="AttributesSerialize"></BinaryString>
								<Content name="LinkedSource"><null></null></Content>
								<string name="Name">SuperballCollisions</string>
								<string name="ScriptGuid">{E80E8A35-24A1-43D1-BB1B-DAF1A31171C9}</string>
								<ProtectedString name="Source"><![CDATA[-- Thegamboy
-- Handles superball collisions with local character
-- Used to regulate flying via colliding with superball (sb fly)

local CollectionService = game:GetService("CollectionService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local REGION_CORNER = Vector3.new(10, 10, 10)

return function(Humanoid)
	local char = Humanoid.Parent

	Humanoid.StateChanged:Connect(function(state)
		if state == Enum.HumanoidStateType.Landed then
			local headPos = char.Head.Position

			local superballs = workspace:FindPartsInRegion3WithWhiteList(
				Region3.new(headPos - REGION_CORNER, headPos + REGION_CORNER),
				CollectionService:GetTagged("Superball"),
				math.huge
			)

			local hitSuperball = false
			for _, superball in next, superballs do
				if not superball:FindFirstChild("creator") then continue end
				if superball.creator.Value ~= Player then continue end
				hitSuperball = true
			end

			if hitSuperball then
				return
			end

			if _G.BB then
				_G.BB.CanSBFly = true
			end
		end
	end)
end
]]></ProtectedString>
								<int64 name="SourceAssetId">-1</int64>
								<BinaryString name="Tags"></BinaryString>
							</Properties>
						</Item>
					</Item>
					<Item class="ModuleScript" referent="RBXE0106AC35C494D229D3CCD3D6112C09C">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MakePellet</string>
							<string name="ScriptGuid">{A11697F4-8F64-4D9A-A2E6-3CB9592075F5}</string>
							<ProtectedString name="Source"><![CDATA[
local Collections = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

return function (Creator, CollisionGroup, count)

	local Folder, Theme = Aesthetics:GetThemeObject(Creator, "Slingshot")
	local Part = Folder:FindFirstChildWhichIsA("Part"):Clone()

	Part.Name = Creator.Name.."'s pellet"
	Part.CastShadow = true
	Part.Massless = false
	Part.Anchored = false
	Part.CanCollide = true
	Part.Size = Vector3.new(1, 1, 1)
	Part.Shape = Enum.PartType.Ball
	Part.BottomSurface = Enum.SurfaceType.Smooth
	Part.TopSurface = Enum.SurfaceType.Smooth
	Part.Color = Theme == "Team Color" and Creator.TeamColor.Color or Part.Color

	Aesthetics:HandleProjectileVisuals(Creator, Part)

	Collections:AddTag(Part,"Pellet")
	Collections:AddTag(Part,"Projectile")

	_G.BB.ClientObjects.Sounds.SlingshotSounds:Clone().Parent = Part

	local lastUpdateVel = Instance.new("Vector3Value")
	lastUpdateVel.Name = "LastSentVelocity"
	lastUpdateVel.Parent = Part

	local lastUpdateCFrame = Instance.new("Vector3Value")
	lastUpdateCFrame.Name = "LastSentPosition"
	lastUpdateCFrame.Parent = Part

	local lastSentTime = Instance.new("NumberValue")
	lastSentTime.Name = "LastSentTime"
	lastSentTime.Parent = Part

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = _G.BB.Settings.Slingshot.Damage
	Damage.Parent = Part

	local Type = Instance.new("StringValue")
	Type.Name = "ProjectileType"
	Type.Value = "Slingshot"
	Type.Parent = Part

	local c = Instance.new("ObjectValue")
	c.Name = "creator"
	c.Value = Creator
	c.Parent = Part

	local active = Instance.new("BoolValue")
	active.Name = "Active"
	active.Value = true
	active.Parent = Part

	local Ready = Instance.new("BoolValue")
	Ready.Name = "Ready"
	Ready.Value = false
	Ready.Parent = Part

	if count then
		local countVal = Instance.new("NumberValue")
		countVal.Name = "Count"
		countVal.Value = count
		countVal.Parent = Part
	end

	if CollisionGroup then
		Part.CollisionGroup = CollisionGroup
	end

	return Part
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXEBCEEDA1C9C141E890A608B65536A495">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MakePaintball</string>
							<string name="ScriptGuid">{7EB6F69A-2175-447D-B031-ED4728985F3D}</string>
							<ProtectedString name="Source"><![CDATA[
local Collections = game:GetService("CollectionService")
local Physics = game:GetService("PhysicsService")
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

return function(Creator, CollisionGroup, count, color)

	local Folder, Theme = Aesthetics:GetThemeObject(Creator, "PaintballGun")
	local Part = Folder:FindFirstChildWhichIsA("BasePart"):Clone()

	Part.CollisionGroup = "Paintballs"

	Part.Name = Creator.Name.."s Paintball"
	Part.CastShadow = true
	Part.Massless = false
	Part.Anchored = false
	Part.CanCollide = true
	Part.Size = _G.BB.Settings.PaintballGun.Size
	Part.BottomSurface = Enum.SurfaceType.Smooth
	Part.TopSurface = Enum.SurfaceType.Smooth

	if _G.BB.Settings.PaintballGun.Density ~= nil then
		Part.CustomPhysicalProperties = PhysicalProperties.new(_G.BB.Settings.PaintballGun.Density, 0.3, 0.5)
	end

	if Part.ClassName == "Part" then -- rather than WedgePart or others
		Part.Shape = _G.BB.Settings.PaintballGun.Shape
	end

	if color then
		Part.Color = color
	else
		if _G.BB.Settings.Themes.RandomPaintballColors and Theme == "Normal" then
			Part.Color = Aesthetics:RandomColor()
		elseif Theme == "Team Color" then
			Part.Color = Creator.TeamColor.Color
		end
	end

	local Attachment0 = Instance.new("Attachment")
	Attachment0.Parent = Part

	local Force = Instance.new("VectorForce")
	Force.Force = _G.BB.Settings.PaintballGun.VectorForce
	Force.RelativeTo = Enum.ActuatorRelativeTo.World
	Force.Attachment0 = Attachment0
	Force.Parent = Part

	Collections:AddTag(Part, "Paintball")
	Collections:AddTag(Part, "Projectile")

	Aesthetics:HandleProjectileVisuals(Creator, Part)

	-- In order to remove the PhysicsFolder buffer, had to make the projectile
	-- the location of data storage.

	local lastUpdateVel = Instance.new("Vector3Value")
	lastUpdateVel.Name = "LastSentVelocity"
	lastUpdateVel.Parent = Part

	local lastUpdateCFrame = Instance.new("Vector3Value")
	lastUpdateCFrame.Name = "LastSentPosition"
	lastUpdateCFrame.Parent = Part

	local lastSentTime = Instance.new("NumberValue")
	lastSentTime.Name = "LastSentTime"
	lastSentTime.Parent = Part

	local Damage = Instance.new("NumberValue")
	Damage.Name = "Damage"
	Damage.Value = _G.BB.Settings.PaintballGun.Damage
	Damage.Parent = Part

	local Type = Instance.new("StringValue")
	Type.Name = "ProjectileType"
	Type.Value = "PaintballGun"
	Type.Parent = Part

	local c = Instance.new("ObjectValue")
	c.Name = "creator"
	c.Value = Creator
	c.Parent = Part

	local active = Instance.new("BoolValue")
	active.Name = "Active"
	active.Value = true
	active.Parent = Part

	local Ready = Instance.new("BoolValue")
	Ready.Name = "Ready"
	Ready.Value = false
	Ready.Parent = Part

	if count then
		local countVal = Instance.new("NumberValue")
		countVal.Name = "Count"
		countVal.Value = count
		countVal.Parent = Part
	end

	return Part
end

]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4D986D6DED274ED7BCE57A98E8DD3520">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">HandleCrosshair</string>
							<string name="ScriptGuid">{A8FB765E-E6C7-47AA-981C-50C58DF87316}</string>
							<ProtectedString name="Source"><![CDATA[local Players = game:GetService("Players")
local Settings = _G.BB.Settings
local Player = Players.LocalPlayer
local Bindable = _G.BB.IconStateChanged
--[[
	Bindable params (fires with):
	1st param: "NoTools" = no tools equipped,
			   "Equipped" = tool equipped,
			   "Reloaded" = tool reloaded
	2nd: lastTime: the time() at which tool was last fired
	3rd: the reload time of the tool

	Notice how there is no firing when a tool is unequipped.
	This is because all cases are covered when any other tool
	is equipped or when a player unequips and no longer has a tool.
]]
local Mouse = Player:GetMouse()

return function(Tool)
	local Equipped = true
	local lastTime = 0

	local RELOAD_TIME = Settings[Tool.Name].ReloadTime

	local function ToggleCrosshair()
		if Equipped and Settings.NativeCrosshair then
			local NewIcon = (Tool.Enabled and "Regular" or "Reload") .. "Icon"
			Mouse.Icon = Settings.Targeting[NewIcon]
		end
	end

	local function isDead()
		local Character = Player.Character
		if (Character.Humanoid.Health<=0) or not Tool.Parent then
			Bindable:Fire("NoTools", lastTime, RELOAD_TIME)

			if Settings.NativeCrosshair then
				Mouse.Icon = Settings.Targeting.DefaultIcon
			end
			return true
		end;
		return false
	end

	Tool.Equipped:Connect(function()
		if not isDead() then
			Equipped = true
			Bindable:Fire("Equipped", lastTime, RELOAD_TIME)
			ToggleCrosshair()
		end
	end)

	Tool:GetPropertyChangedSignal("Enabled"):Connect(function()
		--local Character = Player.Character
		if not isDead() then
			local String = Tool.Enabled and "Reloaded" or "Fired"
			if String == "Fired" then
				lastTime = time()
			end
			Bindable:Fire("Reloaded", lastTime, RELOAD_TIME)

			ToggleCrosshair()
		end
	end)

	Tool.Unequipped:Connect(function()
		if not isDead() then
			Equipped = false
			if Settings.NativeCrosshair then
				Mouse.Icon = Settings.Targeting.DefaultIcon
			end
			task.wait()
			if (Player.Character ~= nil)
				and (Player.Character:FindFirstChildWhichIsA("Tool")) then
				Bindable:Fire("NoTools", lastTime, RELOAD_TIME)
			end
		end
	end)

	Tool.AncestryChanged:Connect(function()
		local Character = Player.Character
		if (Character == nil) or (Character.Parent == nil)
			or (not (
				(Tool.Parent == Character) or
					((Tool.Parent ~= nil) and (Tool.Parent:IsA("Backpack"))
					)
				)
			) then

			Equipped = false
			Bindable:Fire("NoTools", lastTime, RELOAD_TIME)

			if Settings.NativeCrosshair then
				Mouse.Icon = Settings.Targeting.DefaultIcon
			end
		end
	end)
end

]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBXCD6366645B074CE9955937FA39D703C7">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">MakeBomb</string>
							<string name="ScriptGuid">{F5A83CD0-14B4-429C-9D7A-00415592C78E}</string>
							<ProtectedString name="Source"><![CDATA[local Collections = game:GetService("CollectionService")
local Aesthetics = require(_G.BB.Modules:WaitForChild("Aesthetics"))

-- Create the Rocket
return function(Creator, count)
	local Folder, Theme = Aesthetics:GetThemeObject(Creator, "Bomb")

	local Part = Folder:FindFirstChild("Base"):Clone()
	Collections:AddTag(Part,"Bomb")
	Part.Size = Vector3.new(2, 2, 2)
	Part.Shape = Enum.PartType.Ball
	Part.CastShadow = true
	Part.BottomSurface = Enum.SurfaceType.Smooth
	Part.TopSurface = Enum.SurfaceType.Smooth
	Part.Material = Enum.Material.Plastic
	Part.Massless = false
	Part.Anchored = false
	Part.CanCollide = true
	Part.CustomPhysicalProperties = _G.BB.Settings.Bomb.PhysicsProperties

	_G.BB.ClientObjects.Sounds.BombSounds.Boom:Clone().Parent = Part
	_G.BB.ClientObjects.Sounds.BombSounds.Tick:Clone().Parent = Part

	local Tick = Instance.new("Color3Value")
	Tick.Name = "TickColor"
	Tick.Value = Theme == "Team Color" and Creator.TeamColor.Color or Folder:FindFirstChild("TickColor").Value
	Tick.Parent = Part

	local Base = Instance.new("Color3Value")
	Base.Name = "BaseColor"
	Base.Value = Part.Color
	Base.Parent = Part

	local ld = Instance.new("Vector3Value")
	ld.Name = "LastSentPosition"
	ld.Parent = Part

	local rp = Instance.new("Vector3Value")
	rp.Name = "LatestPosition"
	rp.Parent = Part

	local lastUpdateVel = Instance.new("Vector3Value")
	lastUpdateVel.Name = "LastSentVelocity"
	lastUpdateVel.Parent = Part

	local realOT = Instance.new("NumberValue")
	realOT.Name = "LocalOriginTime"
	realOT.Value = tick()
	realOT.Parent = Part

	local lrt = Instance.new("NumberValue")
	lrt.Name = "LastReceivedTime"
	lrt.Value = 0
	lrt.Parent = Part

	local ActiveTag = Instance.new("BoolValue")
	ActiveTag.Name = "Active"
	ActiveTag.Value = true
	ActiveTag.Parent = Part

	local c = Instance.new("ObjectValue")
	c.Name = "creator"
	c.Value = Creator
	c.Parent = Part

	local AssignedTouch = Instance.new("BoolValue")
	AssignedTouch.Name = "BlownUpClient"
	AssignedTouch.Value = false
	AssignedTouch.Parent = Part

	local Type = Instance.new("StringValue")
	Type.Name = "ProjectileType"
	Type.Value = "Bomb"
	Type.Parent = Part

	local Ready = Instance.new("BoolValue")
	Ready.Name = "Ready"
	Ready.Value = false
	Ready.Parent = Part

	if count then
		local countVal = Instance.new("NumberValue")
		countVal.Name = "Count"
		countVal.Value = count
		countVal.Parent = Part
	end

	Part.Color = Tick.Value

	Part.Name = Creator.Name.."'s Bomb"
	return Part
end
]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX65209B12D8114D9DA744A793E1AC6D6E">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">isInsideSomething</string>
							<string name="ScriptGuid">{1DEA2B26-002C-4D47-9034-E8FCB28D1D8F}</string>
							<ProtectedString name="Source"><![CDATA[-- Thegameboy
-- Used in all projectile client scripts
-- Designed to stop shooting through bricks

local CORNER_MULTIPLIERS = {
	Vector3.new(-1, -1, 1),
	Vector3.new(1, -1, 1),
	Vector3.new(-1, -1, -1),
	Vector3.new(1, -1, -1),

	Vector3.new(-1, 1, 1),
	Vector3.new(1, 1, 1),
	Vector3.new(-1, 1, -1),
	Vector3.new(1, 1, -1),
}

local function getPoints(instance)
	local points = {}
	local CF = instance.CFrame
	local size = instance.Size

	for _, corner in next, CORNER_MULTIPLIERS do
		local point = CF:PointToWorldSpace(corner * (size / 2))
		table.insert(points, point)
	end

	return points
end

local function getFaces(instance)
	local faces = {}
	local CF = instance.CFrame
	local size = instance.Size

	for _, dir in next, Enum.NormalId:GetEnumItems() do
		local v = Vector3.fromNormalId(dir)
		local point = CF:PointToWorldSpace(v * (size / 2))
		table.insert(faces, {point = point, normal = CF:VectorToWorldSpace(v)})
	end

	return faces
end

function isAbove(point, planePoint, normal)
	local relative = point - planePoint
	return relative:Dot(normal) > 0 -- if point is above plane
end

local chars = {}
do
	local function onPlayerAdded(player)
		local function onCharacterAdded(char)
			table.insert(chars, char)
		end
		local function onCharacterRemoving(char)
			local index = table.find(chars, char)
			if index then
				table.remove(chars, index)
			end
		end

		local con1 = player.CharacterAdded:Connect(onCharacterAdded)
		local con2 = player.CharacterRemoving:Connect(onCharacterRemoving)
		if player.Character then
			onCharacterAdded(player.Character)
		end

		local con3
		con3 = player.AncestryChanged:Connect(function()
			con1:Disconnect()
			con2:Disconnect()
			con3:Disconnect()

			if player.Character then
				onCharacterRemoving(player.Character)
			end
		end)
	end

	game:GetService("Players").PlayerAdded:Connect(onPlayerAdded)
	for _, player in pairs(game:GetService("Players"):GetPlayers()) do
		onPlayerAdded(player)
	end
end

local SIZE = Vector3.new(0.1, 0.1, 0.1)
return function(instance, completelyInside)

	local ignore = {instance, unpack(chars)}
	local pos = instance.Position
	local parts = workspace:FindPartsInRegion3WithIgnoreList(Region3.new(pos - SIZE, pos + SIZE), ignore, 1)
	local points = getPoints(instance)

	if completelyInside then
		for _, part in next, parts do
			for _, face in next, getFaces(part) do
				for _, point in next, points do
					if isAbove(point, face.point, face.normal) then
						return false
					end
				end
			end
		end

		return #parts > 0
	end

	for _, part in next, parts do
		for _, face in next, getFaces(part) do
			for _, point in next, points do
				if not isAbove(point, face.point, face.normal) then
					return true
				end
			end
		end
	end

	return false
end]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="ModuleScript" referent="RBX4E38E87AE28D4200ADBEA312C59F6858">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<Content name="LinkedSource"><null></null></Content>
							<string name="Name">Delete</string>
							<string name="ScriptGuid">{AA3EA702-A8F6-4640-B4D0-C9ED6CC762C0}</string>
							<ProtectedString name="Source"><![CDATA[return function (Projectile, DelayTime)
	local DeleteRemote = _G.BB.Remotes:WaitForChild("Delete")

	if not Projectile.Parent then
		--warn("Projectile already deleted:", Projectile)
		return
	end

	local ID_array = {Projectile.ProjectileType.Value, Projectile.Count.Value}

	local function delete()
		if Projectile.Parent ~= nil and Projectile.Active.Value then
			--print("Sending deletion info for",Projectile,PhysicsFolder.ProjectileType.Value)
			if Projectile:FindFirstChild("Active") then
				Projectile.Active.Value = false
			end
			DeleteRemote:FireServer(ID_array)
			game:GetService("Debris"):AddItem(Projectile, 0)
		end
	end

	if DelayTime > 0 then
		task.delay(DelayTime, delete)
	else
		delete()
	end
end

]]></ProtectedString>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX4C23BFF45B574212BA0C0E836259E328">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Workspace</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBX2465B2BC034E4CECB426A93D83A0923A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Projectiles</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="Folder" referent="RBXBCEFF250E4F34538B2D175DE59DCB781">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Active</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBX202EE8429B254C8184070259C009AE1B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Buffers</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
					<Item class="Folder" referent="RBXD455BB20C7784A1BA7C781A51DCC1921">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Extrapolated</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
						</Properties>
					</Item>
				</Item>
			</Item>
			<Item class="Folder" referent="RBXE858139DCF6B45EC964CC493A6CE1B3E">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">StarterPlayer</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="Folder" referent="RBXEB00E5E3CB7B4864AB586E335E7921A8">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">Buffers</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
					<Item class="ObjectValue" referent="RBX897F19DE23D647898E2106467D64FF2B">
						<Properties>
							<BinaryString name="AttributesSerialize"></BinaryString>
							<string name="Name">Wall</string>
							<int64 name="SourceAssetId">-1</int64>
							<BinaryString name="Tags"></BinaryString>
							<Ref name="Value">null</Ref>
						</Properties>
					</Item>
				</Item>
				<Item class="BoolValue" referent="RBXDE6F530F37FC4A87BC935E345F30254F">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<string name="Name">CanDamage</string>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
						<bool name="Value">true</bool>
					</Properties>
				</Item>
			</Item>
			<Item class="Folder" referent="RBX08FF98C93FD64CDB93897F523D885716">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">StarterGui</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="LocalScript" referent="RBX81A467103DDC403D88D8FBA6A8A44844">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<bool name="Disabled">false</bool>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Checker</string>
						<token name="RunContext">0</token>
						<string name="ScriptGuid">{C579C29A-58C5-48F7-A52A-9202FC1BE990}</string>
						<ProtectedString name="Source"><![CDATA[local Player = game.Players.LocalPlayer
local playerScripts = Player.PlayerScripts

local SPS = game:GetService("StarterPlayer") .StarterPlayerScripts
if not playerScripts:FindFirstChild("ToolObjects") then
	--warn("Player spawned without brick battle toolset core objects.")
	SPS:FindFirstChild("ToolObjects"):Clone().Parent = playerScripts
end
--if not Player:FindFirstChild("Buffers") then
--	StarterPlayer:WaitForChild("Buffers"):Clone().Parent = Player
--end
task.wait(1)
script:Destroy()]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBX82DA14991DEF47DAB22AB2BCDECCBA14">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">DefaultSettings</string>
				<string name="ScriptGuid">{1FCB8A4A-FA52-4113-8F41-451E615DB64A}</string>
				<ProtectedString name="Source"><![CDATA[local function getCallback(Callback)
	return script:WaitForChild("Callbacks"):WaitForChild(Callback)
end
local Settings = {

	-- GENERAL WEAPON SETTINGS --
	BombJump = true,
	SuperballJump = true,
	SuperballFly = true,
	SlingClimb = false,
	RocketRiding = true,

	RocketsExplodeSBs = false,
	MaxSafeWait = 0.25,

	-- DAMAGE SETTINGS --
	WeaponsDamageAfterDeath = true, -- You will never be able to shoot after you die.
	InstantDamage = true, -- Does not pair well with security deactivations
	TeamKill = false, -- Whether teammates can kill eachother
	AllowHumanoidChanges = true, -- Prevents admin abuse and exploiting
	TagLifetime = 1,


	-- TEAM SETTINGS --
	AutoTeamColors = true, -- Color projectiles and explosions to team colors
	ThemeOverrides = true, -- themes will override team colors if above is true
	IgnoreCertainTeams = false,
	TeamsFiltered = {"Gladiators"}, -- "neutral" teams
	TeamsFilterType = false,
	SpectatorTeamActive = false,   -- Spectators can't take or deal dmg.
	SpectatorTeamName = "Spectators", -- The name of the spectator team


	-- THEME SETTINGS --
	Themes = {
		ThemePacks = {};
		RandomSuperballColors = true; -- This overrides the Superball Colors setting below.
		RandomPaintballColors = true;
		RandomWallColors = true;
		TrailsOmitted = {"Normal"}; -- Add theme names for them to not have trails
		DefaultTheme = "Normal"; -- The default theme that all normal users have.
		TrailFilterType = true;
		WeaponsFiltered = {"Superball","PaintballGun","Sword"};
		UseRobloxExplosions = false;
	},


	-- DOOMSPIRE SETTINGS --
	Doomspire = {
		SlingFly = true;
		RocketCollisions = true;
		BombSpawnToCam = false;
	},


	-- EXPLOSION SETTINGS --
	Explosions = {
		DestroyParts = false;
		DestroyTrowelWallsOverride = false; --If true, overrides Explosions.DestroyParts
		FlingParts = true;
		FlingBombs = true;
		FlingEnemies = true; -- will fling others' dead body parts
		FlingYou = true; -- Will fling your body parts!
		ForceFactorOnSelf = 1; --How much stronger ExplosionForces are on yourself
		LimbRemoval = true;
		ProtectTeammateWalls = false; -- won't be able to blow ur teammates walls
		ExclusionTag = "BB_NonExplodable"; -- collection service
		DebrisTime = 0; -- must be >0 for parts to be added to debris collection
	},


	-- RICOCHET SETTINGS --
	Ricochet = {
		HalfDamageDelay = 0, -- min is one frame
		ResetStateDelay = 1/30
	},


	-- TARGETING SETTINGS --
	Targeting = { -- whitelist has priority over blacklist
		RegularIcon = "rbxassetid://507449825";
		ReloadIcon = "rbxassetid://507449806";
		DefaultIcon = "";
	},


	-- MOBILE SETTINGS --
	Mobile = {
		DoubleJumpToSwordLunge = true;
		ShootMode = "InWorld";
		--[[
		Can be "InWorld" or "UserInput", case-sensitive

			What's the difference?

			- UserInput triggers weapons at any tap other than the jump button and
			some GUI buttons.It has no input delay.

			- InWorld does not trigger weapons at taps on GUIs or the joystick, but it is
			slightly delayed.
		]]
	},


	-- EXTRAPOLATION SETTINGS --
	Extrapolation = {
		Updates = { -- send regular updates about the object's position and velocity
			Slingshot = false;
			PaintballGun = false;
			Superball = true;
			Rocket = false;
			Bomb = true;
		},
		PingCompensation = {
			Rocket = false;
		}
	},


	-- SPECIFIC WEAPON SETTINGS --
	Bomb = {
		Damage = 101;
		ReloadTime = 5;
		BombJumpReloadTime = 0;
		MaxBombJumpPower = 200; -- in studs
		BombJumpPosWindow = .25; -- click then jump timing, must be positive
		BombJumpNegWindow = -.1; -- jump then click window, must be negative
		--TODO switch these two
		--VariableBombJumpPower = true; --Bomb jump height depends on your timing.
		BombJumpPowerFormula = "Linear";
		WalkingBombJump = false; -- if you can bomb jump as you walk
		PhysicsProperties = PhysicalProperties.new(
			0.7, -- Density
			0.3, -- Friction
			0.6, -- Elasticity
			1,   -- Friction weight
			1.1  -- Elasticity weight
		);
		MaxMassToDestroy = 150;
		ExplosionForce = 1000000;
		SelfDamage = false;
		TeleportOnExplode = false; -- Gameboy...
		Radius = 12;
		TouchExplode = false;
		TouchExplodeSelf = false;
		DespawnTime = 5; -- despawns after x seconds
	},
	Rocket = {
		Damage = 101;
		ReloadTime = 7;
		SpawnDistance = 6; -- increase to 6+ to shoot through walls
		InitialSpeed = 60;
		Speed = 60;
		RampUpDuration = 1;
		SelfDamage = false;
		--FlyThroughList = {
		--	"rocket",
		--	"handle",
		--	"effect",
		--	"water",
		--	"lava",
		--	"invisitouch",
		--	"explosion",
		--	"killbrick"
		--};
		ExplosionForce = 500000;
		MaxMassToDestroy = 75;
		Radius = 4;
		ShootInsideBricks = true;
		DespawnTime = 10; -- despawns after x seconds
	},
	Slingshot = {
		Damage = 16;
		ReloadTime = 0.2;
		SpawnDistance = 3; -- increase to 4+ to shoot  through walls --Default 3
		Speed = 85;
		SelfDamage = false; -- (not recommended) if SelfKill == false will not deal self dmg
		Automatic = true;
		SlingFlyCooldown = 0;
		RicochetDamage = true;
		ShootInsideBricks = true;
		DespawnTime = 7; -- despawns after x seconds
	},
	Superball = {
		Damage = 55;
		ReloadTime = 2;
		SpawnDistance = 4; -- increase to 5+ shoot through walls
		Speed = 200;
		SelfDamage = false; -- (not recommended) if SelfKill == false will not deal self dmg
		RicochetDamage = true;
		ShootInsideBricks = true;
		DespawnTime = 10; -- despawns after x seconds
	},
	Sword = {
		LungeDamage = 30;
		SlashDamage = 10;
		IdleDamage = 5;
		ReloadTime = 0.01;
		DoubleClickTime = 0.2; -- lunge window
		FloatAmount = 5000;
		JumpHeight = 13;
		LungeDelayTime = 0;
		LungeExtensionTime = .95;
	},
	Trowel = {
		ReloadTime = 4;
		BrickSize = Vector3.new(4, 1.2, 2.02);
		ServerBuildSpeed = 0.045;
		ClientBuildSpeed = 0.04;
		BricksPerColumn = 4;
		BricksPerRow = 3;
		Lifetime = 24.54;
		Outlines = false--true; -- the local setting will be overriden by this
	},
	PaintballGun = {
		Damage = 20;
		ReloadTime = .5;
		SpawnDistance = 3; -- increase to 5+ shoot through walls
		Speed = 200;
		SelfDamage = false; -- (not recommended) if SelfKill == false will not deal self dmg
		VectorForce = Vector3.new(0, 60, 0);
		Shape = "Ball",
		Size = Vector3.new(1, 1, 1),
		Density = 0.7,
		DespawnTime = 10; -- despawns after x seconds
		MultiplierPartNames = {
			Head = true,
			Torso = true,
			UpperTorso = true,
			LowerTorso = true,
			HumanoidRootPart = true
		};
		ShootInsideBricks = true;
		ColorResetTime = 25; -- set to 0 for no color resetting
	},


	-- CHOOSE WEAPONS --
	WeaponsFiltered = {},
	WeaponsFilterType = false,
	CustomWeaponsDirectory = nil, -- can be game.ServerStorage.Weapons, for example


	-- SECURIY SETTINGS --
	Security = {
		-- Numbers are thresholds that, if surpassed, will deactivate projectile
		--(cause no dmg and stop replication)
		Master = true, -- If set to false, will have no security logs or repercussions
		Webhook = nil, -- Change to a string of your Discord webhook URL to notify if someone was marked as exploiting
		Initial = { -- Spawn positions and velocities
			Deactivate = true; -- No possible damage and stop replication
			Warn = true; -- Warn in output
			Superball2D = 10; -- (SpawnPosition - Head.Position).Magnitude | X and Z axes
			Superball3D = 50; -- (SpawnPosition - Head.Position).Magnitude
			Rocket2D = 10; -- (SpawnPosition - Handle.Position).Magnitude | X and Z axes
			Rocket3D = 50; -- (SpawnPosition - Handle.Position).Magnitude
			PaintballGun2D = 10;
			PaintballGun3D = 50;
			Bomb3D = 10;
		},
		Update = { -- Physics updates sent from each client on regular intervals
			Deactivate = true; -- No possible damage and stop replication
			Warn = true;
			Rocket = 75; -- NewDistanceFromOrigin-OldDistanceFromOrigin
			Bomb = 100; -- (UpdatePosition - CurrentPosition).Magnitude
			BombVelocity = 500; -- (UpdateVelocity - CurrentVelocity).Magnitude
			BombTime = .5; -- NewTime-OldTime+ DT
		},
		Hit = { -- Either when projectile explodes or hits humanoid (depending on type)
			Deactivate = true; -- No possible damage and stop replication
			Warn = true;
			RocketExplode = 75; -- ExplosionDistanceFromOrigin-OldDistanceFromOrigin
			BombExplode = 30; -- (ExplosionPos - PriorPosition).Magnitude
			BombTime = 2.8;
			SuperballHit = 100; -- (HitCharPart.Position-Superball.Position).Magnitude
			RadiusMultiplier = 5; -- (ExplosionPos-HitPos).Magnitude > RadiusMultiplier*Radius
			MaxSwordKillDistance = 12;

		},
		VerifyParabola = true;
		Fallout = {
			Slingshot = 0.2;
			Superball= 0.25;
			PaintballGun = 0.1;
		},
		PSPV = true; -- Hitbox verification
		FuturePositionApproval = true;
		Ricochet = true; -- secure ricochet damage
		AllowedTime = .2;
		AcceptableDistance = .5;
		ReloadTimeMultiplier = .7 --[[
			ServerReloadCheck = Tool.ReloadTime * ReloadTimeMultiplier
			if TimeSinceLastFire>=ServerReloadCheck then
		]]
	},


	-- LOCAL MISC SETTINGS --
	LocalSettingsDefaults = { -- mostly aesthetic
		NewIcons = false;
		MobileJump = true;
		SlingshotSound = "Modern";
		RocketExplosion = "Classic";
		BombExplosion = "Modern";
		Hit = "Minecraft"; -- None for no sound
		BlockedHit = "Tyzone";
		KillHit = "Robot"; -- NOT ACTIVE AT THE MOMENT
		Themes = true;
		ThemesHighGraphics = true;
		VisualHitIndicators = true;
	},


	-- DEVELOPER SETTINGS --
	NativeCrosshair = true,


	-- Callbacks must simply point to a module that returns a function
	Callbacks = {
		PaintballColor = getCallback("PaintballColor"),
		RocketExplode = getCallback("RocketExplode"),
		Targeting = getCallback("Targeting"),
		BreakJoints = getCallback("BreakJoints"),
		ExplodeMaster = getCallback("ExplosionMaster")
	}
}
return Settings

]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBXA812C4A47CE140E1BEF2A25292A83098">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">ModifiableSettingsArrays</string>
					<string name="ScriptGuid">{E33EFFE5-AF94-4DE0-B3E3-5CD231F8510B}</string>
					<ProtectedString name="Source"><![CDATA[return { -- If you do not know what this does, ask GFink
	TeamsFiltered = "string",
	WeaponsFiltered = "string",
	Themes = {ThemePacks = "Instance", WeaponsFiltered = "string"}
}]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
			<Item class="Folder" referent="RBXEE237E4FDCBB470BB1CF69E00776D9E3">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<string name="Name">Callbacks</string>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="ModuleScript" referent="RBX4ABA230737944DFEB4B6629C34F8841A">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">RocketExplode</string>
						<string name="ScriptGuid">{20E7A189-A718-4588-A066-3F0EC40DDF31}</string>
						<ProtectedString name="Source"><![CDATA[--!strict
return function(Hit: BasePart): boolean
	if game:GetService("CollectionService"):HasTag(Hit, "Projectile") then
		return false
		--return string.find(Hit.Name, "Pellet") ~= nil
	else
		local CharacterModel = Hit:FindFirstAncestorOfClass("Model")
		if CharacterModel and CharacterModel:FindFirstChildOfClass("Humanoid") then
			return Hit.Parent == CharacterModel
		else
			return Hit.CanCollide
		end
	end
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX65C0E641AB5A4878AA1477AA37FC8198">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">Targeting</string>
						<string name="ScriptGuid">{78EDBC8D-7962-4E28-8331-204E3ABA545E}</string>
						<ProtectedString name="Source"><![CDATA[return function(Hit)
	return Hit.Parent:FindFirstChildWhichIsA("Humanoid")
		or (
			not Hit.Parent:IsA("Accoutrement")
			and Hit.CanCollide
			and (Hit.Transparency <= 0.9)
			and not game:GetService("CollectionService"):HasTag(Hit, "Projectile")
		)
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXCE8EA7CCF8D54B81B28BE63C6265E239">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">ExplosionMaster</string>
						<string name="ScriptGuid">{F5AECF14-AD85-454D-A5C7-803C8ED681BF}</string>
						<ProtectedString name="Source"><![CDATA[local MaxFlingMass = 500 -- wil not attempt to fling larger parts

return function(HitPart, Creator)
	return HitPart.Mass < MaxFlingMass
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBX8AF10016C5BD42D38349A3194ED16EB9">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">PaintballColor</string>
						<string name="ScriptGuid">{191D2D2E-1DD2-41C1-8762-68FDB79F897E}</string>
						<ProtectedString name="Source"><![CDATA[return function(HitPart, Creator)
	return HitPart:GetMass() < 240 and not HitPart:IsDescendantOf(Creator.Character) -- and not HitPart.Anchored
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="ModuleScript" referent="RBXC124C1D35E834E1694008EE2B790D63C">
					<Properties>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Content name="LinkedSource"><null></null></Content>
						<string name="Name">BreakJoints</string>
						<string name="ScriptGuid">{9A40AFC1-C617-485D-BFA4-D1286AB12DCB}</string>
						<ProtectedString name="Source"><![CDATA[return function(HitPart, Creator)
	return true
end]]></ProtectedString>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Model" referent="RBXAFB20F550F5343429EEC216FE4E216C8">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<token name="LevelOfDetail">0</token>
				<CoordinateFrame name="ModelMeshCFrame">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<SharedString name="ModelMeshData">yuZpQdnvvUBOTYh1jqZ2cA==</SharedString>
				<Vector3 name="ModelMeshSize">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="ModelStreamingMode">0</token>
				<string name="Name">SecurityDummy</string>
				<bool name="NeedsPivotMigration">false</bool>
				<Ref name="PrimaryPart">RBX0D0E24DA9E2B47C394094E80EFA75D1D</Ref>
				<float name="ScaleFactor">1</float>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
				<OptionalCoordinateFrame name="WorldPivotData">
					<CFrame>
						<X>-20</X>
						<Y>2.5</Y>
						<Z>118.5</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CFrame>
				</OptionalCoordinateFrame>
			</Properties>
			<Item class="Part" referent="RBX0D0E24DA9E2B47C394094E80EFA75D1D">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-273.131836</X>
						<Y>-24.3704491</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">7</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Head</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">0</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
				<Item class="BodyAngularVelocity" referent="RBXE25B56DDF39741F6A7C724C282ECC1D6">
					<Properties>
						<Vector3 name="AngularVelocity">
							<X>0</X>
							<Y>2</Y>
							<Z>0</Z>
						</Vector3>
						<BinaryString name="AttributesSerialize"></BinaryString>
						<Vector3 name="MaxTorque">
							<X>4000</X>
							<Y>4000</Y>
							<Z>4000</Z>
						</Vector3>
						<string name="Name">BodyAngularVelocity</string>
						<float name="P">1250</float>
						<int64 name="SourceAssetId">-1</int64>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
			<Item class="Part" referent="RBX93726A6DA5E64375A4F1BB052EE29981">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-273.131836</X>
						<Y>-25.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">0</float>
					<float name="LeftParamB">0</float>
					<token name="LeftSurface">2</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Torso</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">0</float>
					<float name="RightParamB">0</float>
					<token name="RightSurface">2</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX62C4021BEA8D4F34BD5C98A86DA1D8DA">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-274.631836</X>
						<Y>-25.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Left Arm</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXAA1A6C75CC554F5098710754E90567CD">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-271.631836</X>
						<Y>-25.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Right Arm</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBX84B7930F50764FA9939E2178BA7FC7A4">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-273.631836</X>
						<Y>-27.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Left Leg</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXD7ADC7E446C9403FA268832E2B48E81E">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">0</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-272.631836</X>
						<Y>-27.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">-0.5</float>
					<float name="LeftParamB">0.5</float>
					<token name="LeftSurface">0</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">Right Leg</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">-0.5</float>
					<float name="RightParamB">0.5</float>
					<token name="RightSurface">0</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>1</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
			<Item class="Part" referent="RBXBE232EDAA3DF4045B53D439D80EC7B51">
				<Properties>
					<bool name="Anchored">true</bool>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<float name="BackParamA">-0.5</float>
					<float name="BackParamB">0.5</float>
					<token name="BackSurface">0</token>
					<token name="BackSurfaceInput">0</token>
					<float name="BottomParamA">-0.5</float>
					<float name="BottomParamB">0.5</float>
					<token name="BottomSurface">4</token>
					<token name="BottomSurfaceInput">0</token>
					<CoordinateFrame name="CFrame">
						<X>-273.131836</X>
						<Y>-25.8704643</Y>
						<Z>72.2736588</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<bool name="CanCollide">false</bool>
					<bool name="CanQuery">true</bool>
					<bool name="CanTouch">true</bool>
					<bool name="CastShadow">true</bool>
					<string name="CollisionGroup">Default</string>
					<int name="CollisionGroupId">0</int>
					<Color3uint8 name="Color3uint8">4294901760</Color3uint8>
					<PhysicalProperties name="CustomPhysicalProperties">
						<CustomPhysics>false</CustomPhysics>
					</PhysicalProperties>
					<float name="FrontParamA">-0.5</float>
					<float name="FrontParamB">0.5</float>
					<token name="FrontSurface">0</token>
					<token name="FrontSurfaceInput">0</token>
					<float name="LeftParamA">0</float>
					<float name="LeftParamB">0</float>
					<token name="LeftSurface">2</token>
					<token name="LeftSurfaceInput">0</token>
					<bool name="Locked">false</bool>
					<bool name="Massless">false</bool>
					<token name="Material">256</token>
					<string name="MaterialVariantSerialized"></string>
					<string name="Name">HumanoidRootPart</string>
					<CoordinateFrame name="PivotOffset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
						<R00>1</R00>
						<R01>0</R01>
						<R02>0</R02>
						<R10>0</R10>
						<R11>1</R11>
						<R12>0</R12>
						<R20>0</R20>
						<R21>0</R21>
						<R22>1</R22>
					</CoordinateFrame>
					<float name="Reflectance">0</float>
					<float name="RightParamA">0</float>
					<float name="RightParamB">0</float>
					<token name="RightSurface">2</token>
					<token name="RightSurfaceInput">0</token>
					<int name="RootPriority">0</int>
					<Vector3 name="RotVelocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
					<float name="TopParamA">-0.5</float>
					<float name="TopParamB">0.5</float>
					<token name="TopSurface">3</token>
					<token name="TopSurfaceInput">0</token>
					<float name="Transparency">1</float>
					<Vector3 name="Velocity">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<token name="formFactorRaw">0</token>
					<token name="shape">1</token>
					<Vector3 name="size">
						<X>2</X>
						<Y>2</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="ModuleScript" referent="RBXF7771EFD8B094966A5ED94BAFE34B7E4">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">CustomPhysicsReplicator</string>
				<string name="ScriptGuid">{2376EA40-2FED-4F38-AF54-64A4FC878E43}</string>
				<ProtectedString name="Source"><![CDATA[local CustomPhysicsReplicator = {}

function CustomPhysicsReplicator:Init(Remotes, Modules)

	local Settings = _G.BB.Settings
	local UpdateSet = Settings.Security.Update

	local Security = require(_G.BB.Modules.Security)

	local UpdateRemote = Remotes:WaitForChild("UpdatePhysics")
	local Delete = Remotes:WaitForChild("Delete")

	UpdateRemote.OnServerEvent:Connect(function(RemoteSender, PlayerProjectilePhysicsData)
		for _,InfoArray in pairs(PlayerProjectilePhysicsData) do
			--[[
				InfoArray = {
					PhysicsFolder,
					Projectile CFrame, (or distance)
					Projectile Velocity,
					Projectile Time
				}
			]]

			local ID_array = InfoArray[1]
			local PhysicsFolder = Security:GetPhysicsFolder(ID_array, RemoteSender, true)

			if not PhysicsFolder then
				return
			end

			local ProjectileType = PhysicsFolder.ProjectileType.Value

			local LastUpdateTick = PhysicsFolder.LastUpdateTick.Value

			local Now = tick()
			local DeltaTime = LastUpdateTick and Now - LastUpdateTick or 0
			PhysicsFolder.LastUpdateTick.Value = Now

			if not Security:ApproveUpdate(PhysicsFolder, InfoArray, UpdateSet, DeltaTime) then
				return
			end

			if ProjectileType == "Rocket" then

				--local clientTime = InfoArray[4]
				--local serverTime = _G.BB.ServerTime.Value

				--if _G.BB.Settings.Extrapolation.PingCompensation.Rocket and clientTime then
				--	PhysicsFolder.ServerTime.Value = serverTime
				--	PhysicsFolder.ClientTime.Value = clientTime
				--end

				PhysicsFolder.LatestDistance.Value = InfoArray[2]

				-- No reason to replicate if no change.
				--if _G.BB.Settings.Rocket.Speed ~= _G.BB.Settings.Rocket.InitialSpeed then
				--	LatestVelocity.Value = NewVelocity
				--end

			else
				PhysicsFolder.LatestPosition.Value = InfoArray[2]
				PhysicsFolder.LatestVelocity.Value = InfoArray[3]
				PhysicsFolder.LatestTime.Value = InfoArray[4]
			end

		end
	end)

	Delete.OnServerEvent:Connect(function(RemoteSender, array)
		local PhysicsFolder = _G.BB.ProjectileFolder.Active[RemoteSender.Name]:FindFirstChild(array[1]..array[2])
		if not PhysicsFolder or not PhysicsFolder.Parent then
			--warn("No physics folder sent from "..RemoteSender.Name.."!", array)
			return
		end

		if RemoteSender == PhysicsFolder.creator.Value then
			task.wait(.1)
			--print("making inactive", PhysicsFolder)
			PhysicsFolder.Active.Value = false
		end
	end)
end

return CustomPhysicsReplicator]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBXDA9760C5CAD34582932D6788045958D6">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LoadPlayerModules</string>
				<string name="ScriptGuid">{0DF99DB6-7344-472B-959F-3AF708A012A8}</string>
				<ProtectedString name="Source"><![CDATA[local PlayersService = game:GetService("Players")

local function ApplyFunctionToAll(Function)
	for _,Player in pairs(PlayersService:GetPlayers()) do
		coroutine.wrap(Function)(Player)
		-- If the function has a yield, we don't want every player to have to wait in line for their function call. coroutine.wrap fixes this.
	end
end

return function(PlayerAddedFunction, PlayerRemovingFunction, CharacterAddedFunction)
	-- PlayerAddedFunction = function that we want to run on all joining or existing players
	-- function(Player)
	-- PlayerRemovingFunction = function that want to run on all leaving players
	-- function(Player)
	-- CharacterAddedFunction = function we want to run on all spawning or existing characters
	-- function(Player, Character)

	local AddConnection, RemoveConnection, CharacterConnections
	-- We also want to return 3 things (even though they will likely never need to be used)
	-- 1. RBXScriptConnection
	-- For the PlayerAdded event
	-- 2. RBXScriptConnection
	-- For the PlayerRemoving event/game::BindToClose function
	-- 3. Table of RBXScriptConnections
	-- For each player's CharacterAdded event
			--[[
			{
				[game.Players.GFink] = game.Players.GFink.CharacterAdded:Connect(etc)
				[game.Players.tyzone] = game.Players.tyzone.CharacterAdded:Connect(etc)
			}
			]]

	if PlayerAddedFunction then
		AddConnection = PlayersService.PlayerAdded:Connect(PlayerAddedFunction) -- Joining players
		ApplyFunctionToAll(PlayerAddedFunction) -- Existing players
	end

	if PlayerRemovingFunction then
		local Left = {}
		-- The "Left" table represents the table of Player instances who have already left.
		-- This is to make sure that only a single instance of the PlayerRemovingFunction is run, rather than being run by both the PlayerRemoving event and the game::BindToClose function
		local function RunCheck(Player)
			--[[
				We check if this player's PlayerRemovingFunction has already been run by either PlayerRemoving or ApplyFunctionToAll.
				Again, this prevents the PlayerRemovingFunction from being run twice when the last player leaves, or if the server crashes.
				Note that before making this checker function, I never actually ran into this issue while testing using data stores
				(can't test with basic print statements because the output cannot be read while the game is being closed). It's just here
				to make absolute sure the issue never pops up, and it would also annoy me if it wasn't here. ]]
			if not Left[Player] then -- We use the player's instance rather than their UserId so rejoining doesn't break things
				Left[Player] = true
				PlayerRemovingFunction(Player)
			end
		end
		RemoveConnection = PlayersService.PlayerRemoving:Connect(RunCheck)
		if game:GetService("RunService"):IsServer() then -- If you're requiring the module from the ID, this will never be false.
			-- The module could technically have been required by the client if the module itself was reparented somehow(?)
			-- Hopefully Roblox adds this functionality somehow. See the forum post I made about NOT being able to do this: https://devforum.roblox.com/t/note-to-myself/835748
			game:BindToClose(
				function()
					if RemoveConnection.Connected == true then
						-- Can't "UnbindFromClose", so this is the next-best thing
						-- Why would anyone disconnect that connection on the server anyway?
						-- Again, it would just annoy me if this wasn't here.
						ApplyFunctionToAll(RunCheck)
					end
				end
			)
		end
	end

	if CharacterAddedFunction then
		--[[
			Optional third argument per a friend's request. Personally I don't have a use for it because I'm either yielding for
			information gathered from within the PlayerAddedFunction, or I'm using the CharacterAppearanceLoaded listener instead. ]]
		CharacterConnections = {}
		local function DefaultPlayerAdded(Player)
			CharacterConnections[Player] = Player.CharacterAdded:Connect(
				function(Character)
					CharacterAddedFunction(Player, Character)
				end
			)
			-- Don't have to worry about disconnecting prior connections that may exist at this Player index from prior joins to the same server, because
			-- 1. Previous player instances are completely separate instances from new player instances, even if it's the same user, so it would not occupy the same index anyway.
			-- Using something like Player.UserId or Player.Name would be a different story.
			-- 2. Connections to players who have left are automatically disconnected anyway since the player instance gets destroyed automatically when the user leaves.
			-- RBXScriptConnections are disconnected when the instance it's listening on is destroyed
			local ExistingCharacter = Player.Character
			if ExistingCharacter then -- Only run the CharacterAddedFunction on the existing character IF that character exists
				CharacterAddedFunction(Player, ExistingCharacter)
			end
		end
		PlayersService.PlayerAdded:Connect(DefaultPlayerAdded)
		ApplyFunctionToAll(DefaultPlayerAdded)
	end
	return AddConnection, RemoveConnection, CharacterConnections
	-- If you decide to disconnect all CharacterConnections, this still leaves the door open for players who haven't joined yet to have active CharacterAdded connections.
	-- To solve this, consider a bool value "ListenForCharacterAdded" you make false when you intend to disconnect all CharacterAdded functions. Using this module, you would write your code like this:
	--[[
		local CharacterConnections

		function OnCharacterAdded(Player, Character)
			if ListenForCharacterAdded == false then
				return CharacterConnections[Player]:Disconnect()
				-- Ends the OnCharacterAdded function right here while also disconnecting the CharacterAdded connection from running it in the future
			end
			-- Here would be all your code that usually runs when a character is added
		end

		_, _, CharacterConnections = require(ThisModule)(
			nil, -- PlayerAddedFunction
			nil, -- PlayerRemovingFunction
			OnCharacterAdded
		)
	]]
	-- Again I'm not really sure what the use of this would be, but it's there nonetheless.
end]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="ModuleScript" referent="RBX98F14198EAE7471A9F7BEE4765AF5718">
			<Properties>
				<BinaryString name="AttributesSerialize"></BinaryString>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">DistributeObjects</string>
				<string name="ScriptGuid">{7194AE04-594B-49EF-8A12-B26CBB8F6104}</string>
				<ProtectedString name="Source"><![CDATA[local LoadContents = require(script.LoadContents)

return function(ContainingDirectory)
	for _,ServiceFolder in pairs(ContainingDirectory:GetChildren()) do
		local Success, RespectiveService = pcall(game.GetService, game, ServiceFolder.Name)
		LoadContents(Success and RespectiveService, ServiceFolder)
	end
end]]></ProtectedString>
				<int64 name="SourceAssetId">-1</int64>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="ModuleScript" referent="RBX1F1497F24C2641FEA3F2B929D28B4F1F">
				<Properties>
					<BinaryString name="AttributesSerialize"></BinaryString>
					<Content name="LinkedSource"><null></null></Content>
					<string name="Name">LoadContents</string>
					<string name="ScriptGuid">{EF5D7CCE-FF31-4A64-93D4-0E283BA7A525}</string>
					<ProtectedString name="Source"><![CDATA[local function LoadContents(Service,Folder)
	if Service and typeof(Service)=="Instance" then
		for _,Item in pairs(Folder:GetChildren()) do
			Item.Parent = Service
		end
	else
--		local SPService=game:GetService("StarterPlayer"):FindFirstChildWhichIsA(Folder.Name)
--		if SPService then
--			-- This conditional is to prevent infinite recursion
--			return LoadContents(SPService,Folder)
--		end
		local SubService = game:FindFirstChildWhichIsA(Folder.Name, true)
		if SubService then
			return LoadContents(SubService, Folder)
		end
	end
end

return LoadContents]]></ProtectedString>
					<int64 name="SourceAssetId">-1</int64>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
			</Item>
		</Item>
	</Item>
	<SharedStrings>
		<SharedString md5="DaFjPxYtOjbL2eF+h3ULtQ==">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
AAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAAHgAAAAAAAAAeAAAAGQAA
AAAAAAAZAAAAFAAAAAAAAAAUAAAAEAAAAAAAAAAQAAAACgAAAAAAAAAKAAAABQAAAAAAAAAF
AAAAAQAAAAEAAAAFAAAABgAAAAIAAAAGAAAADAAAAAIAAAAMAAAACwAAAAIAAAALAAAAEQAA
AAIAAAARAAAAFQAAAAIAAAAVAAAAGgAAAAIAAAAaAAAAHwAAAAIAAAAfAAAAIQAAAAIAAAAh
AAAAHQAAAAIAAAAdAAAAGwAAAAIAAAAbAAAAFwAAAAIAAAAXAAAAEwAAAAIAAAATAAAADwAA
AAIAAAAPAAAADQAAAAIAAAANAAAACAAAAAIAAAAIAAAABwAAAAMAAAAHAAAACAAAAAMAAAAI
AAAABAAAAAQAAAAIAAAACQAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAABgAA
AAgAAAANAAAACQAAAAkAAAANAAAADwAAAAkAAAAPAAAADgAAAAoAAAAQAAAACwAAAAsAAAAQ
AAAAEQAAAA4AAAAPAAAAEwAAAA4AAAATAAAAEgAAABAAAAAUAAAAEQAAABEAAAAUAAAAFQAA
ABIAAAATAAAAFgAAABMAAAAXAAAAGAAAABMAAAAYAAAAFgAAABQAAAAZAAAAFQAAABUAAAAZ
AAAAHgAAABUAAAAeAAAAGgAAABcAAAAbAAAAGAAAABgAAAAbAAAAHQAAABgAAAAdAAAAHAAA
ABoAAAAeAAAAHwAAABwAAAAdAAAAIAAAAB0AAAAhAAAAIAAAAB4AAAAgAAAAHwAAAB8AAAAg
AAAAIQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9IAAAABAAA
AMB2hj/ExHQ+4DwtPMB2hj8EYaA+4DwtPHAUqD/ExHQ+4DwtPMB2hj+AYDQ+cwERPsB2hj+U
LJw+IFWVPXAUqD+BmJ8+EP21PHAUqD8EYaA+4DwtPHAUqD+AYDQ+cwERPsB2hj+AYDQ+unRn
PsB2hj+ZGJk+ohezPXAUqD9ZpJo+2jCkPXAUqD+ULJw+IFWVPXAUqD+AYDQ+q2lnPsB2hj9F
HkI+GrZhPnAUqD/ttDQ+Bk5nPnAUqD/iwEM+tgphPsB2hj+f1Y8+/x4GPnAUqD8cd5Q+37Xf
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
AAAAHwAAAAIAAAAfAAAAGgAAAAIAAAAaAAAAFgAAAAIAAAAWAAAAEgAAAAIAAAASAAAADgAA
AAIAAAAOAAAACgAAAAIAAAAKAAAABgAAAAMAAAAGAAAACgAAAAMAAAAKAAAABwAAAAQAAAAI
AAAACQAAAAQAAAAJAAAABQAAAAcAAAAKAAAADgAAAAcAAAAOAAAACwAAAAgAAAAMAAAADQAA
AAgAAAANAAAACQAAAAsAAAAOAAAADwAAAAwAAAAQAAAADQAAAA0AAAAQAAAAEQAAAA4AAAAS
AAAADwAAAA8AAAASAAAAEwAAABAAAAAUAAAAEQAAABEAAAAUAAAAGAAAABEAAAAYAAAAFQAA
ABIAAAAWAAAAFwAAABIAAAAXAAAAEwAAABUAAAAYAAAAGQAAABYAAAAaAAAAGwAAABYAAAAb
AAAAFwAAABgAAAAcAAAAGQAAABkAAAAcAAAAHgAAABkAAAAeAAAAHQAAABoAAAAfAAAAGwAA
ABsAAAAfAAAAIAAAAB0AAAAeAAAAIQAAAB4AAAAiAAAAIQAAAB8AAAAjAAAAIAAAACAAAAAj
AAAAJAAAACEAAAAiAAAAJQAAACIAAAAmAAAAJQAAACMAAAAlAAAAJAAAACQAAAAlAAAAJgAA
ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9sAAAABAAAAMB2hr64
Mia+AOpqPcB2Br/mOCa+AOpqPcB2hr46Rii+UMAsPcB2hr5IE5Q9ANNrvsB2Br9IE5Q9ANNr
vsB2Br/Vsyu+kOiJPMB2hr5KoSu+aNSNPMB2hr60MmQ89PNjvsB2Br+7twg9o5NmvsB2Br8k
jCy+IAUsPMB2hr4kjCy+IAUsPMB2Br9e95E80XhkvsB2hr7IEyQ8t2djvsB2Br/IEyQ8t2dj
vsB2hr7/hCq+wOGRu8B2Br/aEiS+YDhUvcB2hr688gU8zqdivsB2Br+88gU8zqdivsB2hr7a
EiS+YDhUvcB2Br9Jfwu+6wPhvcB2hr53dw6+H6jSvcB2hr4IUd47LxRivsB2Br8UX5S8UH9X
vsB2hr5Jfwu+6wPhvcB2Br8qGt29OUcWvsB2hr7/TSm9+KJNvsB2Br/nKxy94v1OvsB2hr5o
id29av0VvsB2Br/klMi9rqAjvsB2hr7klMi9rqAjvsB2hr5hLdi9h3oZvsB2hr7MRTi9ZBRM
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
6Cw8gMeGOp6RLL4A6Cw8AAAAAAIslD2sNDk+AAAAAIjjIzxFCXk+wHaGPkTKubygJ2s+wHaG
Pr1VJL5nFpI9AAAAANO7Kr6gssU8AAAAAJ6RLL4A6Cw8AAAAAN3qRL2wUGA+wHaGPs8jNr1o
4mE+wHaGPr4RJL6OUpU9AAAAAL4RJL6OUpU9AAAAABpiJL54BpE9AAAAAMOcj73ODU8+wHaG
Pk32ib0HOlE+wHaGPt3qRL2wUGA+wHaGPpxcDr4IY/49AAAAAAR9C75AHwY+AAAAAFbOuL0Z
Sj8+wHaGPpLeqL20ZUU+wHaGPgR9C75AHwY+AAAAAAKZyL2sNDk+wHaGPnuhBL4gFA8+wHaG
Ptq06734VyI+wHaGPgKZyL2sNDk+ogAAAAAAAAABAAAABgAAAAAAAAAGAAAAAgAAAAAAAAAC
AAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAADQAAAAAAAAANAAAAEwAA
AAAAAAATAAAAEgAAAAAAAAASAAAAFwAAAAAAAAAXAAAAHAAAAAAAAAAcAAAAGwAAAAAAAAAb
AAAAGgAAAAAAAAAaAAAAGAAAAAAAAAAYAAAAFAAAAAAAAAAUAAAADgAAAAAAAAAOAAAACQAA
AAAAAAAJAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAEAAAAFAAAACwAAAAEAAAAL
AAAABgAAAAIAAAAGAAAACwAAAAIAAAALAAAACgAAAAIAAAAKAAAAEAAAAAIAAAAQAAAADwAA
AAIAAAAPAAAAFQAAAAIAAAAVAAAAGQAAAAIAAAAZAAAAFgAAAAIAAAAWAAAAEQAAAAIAAAAR
AAAADAAAAAIAAAAMAAAABwAAAAMAAAAHAAAACAAAAAQAAAAJAAAACgAAAAQAAAAKAAAACwAA
AAQAAAALAAAABQAAAAcAAAAMAAAADQAAAAcAAAANAAAACAAAAAkAAAAOAAAADwAAAAkAAAAP
AAAAEAAAAAkAAAAQAAAACgAAAAwAAAARAAAAEgAAAAwAAAASAAAAEwAAAAwAAAATAAAADQAA
AA4AAAAUAAAADwAAAA8AAAAUAAAAFQAAABEAAAAWAAAAEgAAABIAAAAWAAAAFwAAABQAAAAY
AAAAFQAAABUAAAAYAAAAGgAAABUAAAAaAAAAGwAAABUAAAAbAAAAGQAAABYAAAAZAAAAHAAA
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
AAAAHgAAAAAAAAAeAAAAGgAAAAAAAAAaAAAAFQAAAAAAAAAVAAAAEQAAAAAAAAARAAAADQAA
AAAAAAANAAAACQAAAAAAAAAJAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAABgAAAAIAAAAG
AAAACgAAAAIAAAAKAAAADgAAAAIAAAAOAAAAEgAAAAIAAAASAAAAFwAAAAIAAAAXAAAAFgAA
AAIAAAAWAAAAGwAAAAIAAAAbAAAAHwAAAAIAAAAfAAAAHAAAAAIAAAAcAAAAGAAAAAIAAAAY
AAAAEwAAAAIAAAATAAAADwAAAAIAAAAPAAAACwAAAAIAAAALAAAABwAAAAIAAAAHAAAAAwAA
AAMAAAAHAAAACwAAAAMAAAALAAAACAAAAAMAAAAIAAAABAAAAAUAAAAJAAAACgAAAAUAAAAK
AAAABgAAAAgAAAALAAAADwAAAAgAAAAPAAAADAAAAAkAAAANAAAAEgAAAAkAAAASAAAADgAA
AAkAAAAOAAAACgAAAAwAAAAPAAAAEwAAAAwAAAATAAAAEAAAAA0AAAARAAAAEgAAABAAAAAT
AAAAFAAAABEAAAAVAAAAFgAAABEAAAAWAAAAFwAAABEAAAAXAAAAEgAAABMAAAAYAAAAFAAA
ABQAAAAYAAAAGQAAABUAAAAaAAAAGwAAABUAAAAbAAAAFgAAABgAAAAcAAAAGQAAABkAAAAc
AAAAHQAAABoAAAAeAAAAGwAAABsAAAAeAAAAHQAAABsAAAAdAAAAHwAAABwAAAAfAAAAHQAA
ABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9jAAAABAAAAMB2Bj8S
XKA+WL8rPFFOBj8SXKA+AOgsPMB2Bj+tvnQ+AOgsPMB2Bj8y158+YB4xO8B2hj4tG6A+8AbY
O8B2hj4SXKA+WL8rPHg9Bj8SXKA+AOgsPMB2Bj/9HXQ+AOgsPMB2Bj+hOJ0+PHUUvcB2hj6h
OJ0+PHUUvcB2hj6tvnQ+AOgsPMB2Bj+4RJQ9ANNrvsB2hj79HXQ+AOgsPMB2Bj/JK5w+HTFU
vcB2hj7JK5w+HTFUvcB2Bj+V5Ak+RWxjvsB2hj64RJQ9ANNrvsB2Bj+k1Y8+gAThvcB2hj6k
1Y8+gAThvcB2Bj9GEi8+Fv9TvsB2hj6V5Ak+RWxjvsB2hj746iM+sqFYvsB2Bj/UIYE+UdIW
vsB2hj7UIYE+UdIWvsB2Bj/kYEU+sLNKvsB2hj7kYEU+sLNKvsB2Bj9EcHg+rJcjvsB2hj5E
cHg+rJcjvsB2Bj/ihVg+dBI8vsB2hj6vtVs+P6I5vsB2Bj9GS2U+c0syvsB2hj6pEHI+coQo
vsB2hj4Te2g+PtsvvroAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAcAAAAAAAAABwAAAAsAAAAA
AAAACwAAAA8AAAAAAAAADwAAABMAAAAAAAAAEwAAABgAAAAAAAAAGAAAABwAAAAAAAAAHAAA
AB4AAAAAAAAAHgAAABoAAAAAAAAAGgAAABYAAAAAAAAAFgAAABEAAAAAAAAAEQAAAA0AAAAA
AAAADQAAAAgAAAAAAAAACAAAAAMAAAAAAAAAAwAAAAQAAAAAAAAABAAAAAUAAAAAAAAABQAA
AAYAAAAAAAAABgAAAAEAAAABAAAABgAAAAoAAAABAAAACgAAAAwAAAABAAAADAAAAAcAAAAB
AAAABwAAAAIAAAADAAAACAAAAAQAAAAEAAAACAAAAAkAAAAEAAAACQAAAA4AAAAEAAAADgAA
ABIAAAAEAAAAEgAAABcAAAAEAAAAFwAAABsAAAAEAAAAGwAAAB8AAAAEAAAAHwAAACAAAAAE
AAAAIAAAAB0AAAAEAAAAHQAAABkAAAAEAAAAGQAAABUAAAAEAAAAFQAAABQAAAAEAAAAFAAA
ABAAAAAEAAAAEAAAAAwAAAAEAAAADAAAAAoAAAAEAAAACgAAAAUAAAAFAAAACgAAAAYAAAAH
AAAADAAAABAAAAAHAAAAEAAAAAsAAAAIAAAADQAAAA4AAAAIAAAADgAAAAkAAAALAAAAEAAA
ABQAAAALAAAAFAAAAA8AAAANAAAAEQAAABIAAAANAAAAEgAAAA4AAAAPAAAAFAAAABUAAAAP
AAAAFQAAABMAAAARAAAAFgAAABcAAAARAAAAFwAAABIAAAATAAAAFQAAABkAAAATAAAAGQAA
ABgAAAAWAAAAGgAAABsAAAAWAAAAGwAAABcAAAAYAAAAGQAAABwAAAAZAAAAHQAAABwAAAAa
AAAAHgAAAB8AAAAaAAAAHwAAABsAAAAcAAAAHQAAACAAAAAcAAAAIAAAAB4AAAAeAAAAIAAA
AB8AAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/SwAAAAQAAADA
dgZASBOUPQC4gD7AdgZASBOUPXW2OT7QT+s/SBOUPQC4gD7AdgZAyBMkPEUJeT7AdgZAcivU
vQDoLDzQT+s/SBOUPXW2OT7QT+s/yBMkPEUJeT7AdgZAkNNEvbBQYD7QT+s/fPQ1vWjiYT7A
dgZAJIwsvgDoLDzQT+s/civUvQDoLDzAdgZA5JTIvaw0OT7QT+s/kNNEvbBQYD7QT+s/jPNz
vaJVVz7AdgZAJIwsvqgQLjwZMgZAJIwsvgDoLDzQT+s/JIwsvsitLTzAdgZASX8LvkAfBj7Q
T+s/jYSTvaGOTT7QT+s/5JTIvaw0OT7AdgZA2hIkvo5SlT3QT+s/llIovqQUKz3QT+s/SX8L
vkAfBj7QT+s/sjgMvqJuBD7QT+s/2hIkvo5SlT2KAAAAAAAAAAEAAAAFAAAAAAAAAAUAAAAC
AAAAAAAAAAIAAAAGAAAAAAAAAAYAAAADAAAAAAAAAAMAAAAHAAAAAAAAAAcAAAALAAAAAAAA
AAsAAAARAAAAAAAAABEAAAAUAAAAAAAAABQAAAAOAAAAAAAAAA4AAAAJAAAAAAAAAAkAAAAE
AAAAAAAAAAQAAAABAAAAAQAAAAQAAAAKAAAAAQAAAAoAAAAFAAAAAgAAAAUAAAAKAAAAAgAA
AAoAAAAQAAAAAgAAABAAAAAVAAAAAgAAABUAAAAYAAAAAgAAABgAAAAXAAAAAgAAABcAAAAW
AAAAAgAAABYAAAATAAAAAgAAABMAAAASAAAAAgAAABIAAAANAAAAAgAAAA0AAAAMAAAAAgAA
AAwAAAAIAAAAAgAAAAgAAAAGAAAAAwAAAAYAAAAIAAAAAwAAAAgAAAAHAAAABAAAAAkAAAAP
AAAABAAAAA8AAAAKAAAABwAAAAgAAAAMAAAABwAAAAwAAAANAAAABwAAAA0AAAASAAAABwAA
ABIAAAALAAAACQAAAA4AAAAQAAAACQAAABAAAAAPAAAACgAAAA8AAAAQAAAACwAAABIAAAAT
AAAACwAAABMAAAAWAAAACwAAABYAAAARAAAADgAAABQAAAAVAAAADgAAABUAAAAQAAAAEQAA
ABYAAAAXAAAAEQAAABcAAAAUAAAAFAAAABcAAAAYAAAAFAAAABgAAAAVAAAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP0UAAAAEAAAAwHYGQAAslD161SO+wHYG
QAAslD0A02u+0E/rPwAslD161SO+wHYGQI071L0A6Cw8wHYGQAxJJDxFbGO+0E/rPwAslD0A
02u+0E/rP4071L0A6Cw8wHYGQPyQLL4A6Cw8wHYGQJrpRL2ws0q+0E/rP7t5Pb3/i0u+0E/r
PxSGFL25y0++0E/rP2B767vVIVy+0E/rPwxJJDxFbGO+0E/rPyqXLL4A6Cw8wHYGQFAXJL4d
MVS9wHYGQB6YyL2slyO+0E/rP4cltr2rsCq+0E/rP5rpRL2ws0q+0E/rP1AXJL4dMVS9wHYG
QKaCC76ABOG90E/rP0YGIb4x73G90E/rPx6YyL2slyO+0E/rP6aCC76ABOG9fgAAAAAAAAAB
AAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAABgAAAAAAAAAGAAAAAwAAAAAAAAADAAAABwAA
AAAAAAAHAAAADgAAAAAAAAAOAAAAEwAAAAAAAAATAAAADwAAAAAAAAAPAAAACAAAAAAAAAAI
AAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAADAAAAAEAAAAMAAAABQAAAAIAAAAFAAAADAAA
AAIAAAAMAAAACwAAAAIAAAALAAAACgAAAAIAAAAKAAAACQAAAAIAAAAJAAAAEQAAAAIAAAAR
AAAAEAAAAAIAAAAQAAAAFQAAAAIAAAAVAAAAFgAAAAIAAAAWAAAAFAAAAAIAAAAUAAAAEgAA
AAIAAAASAAAADQAAAAIAAAANAAAABgAAAAMAAAAGAAAADQAAAAMAAAANAAAABwAAAAQAAAAI
AAAACQAAAAQAAAAJAAAACgAAAAQAAAAKAAAACwAAAAQAAAALAAAADAAAAAcAAAANAAAADgAA
AAgAAAAPAAAAEAAAAAgAAAAQAAAAEQAAAAgAAAARAAAACQAAAA0AAAASAAAADgAAAA4AAAAS
AAAAFAAAAA4AAAAUAAAAEwAAAA8AAAATAAAAFgAAAA8AAAAWAAAAFQAAAA8AAAAVAAAAEAAA
ABMAAAAUAAAAFgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9F
AAAABAAAAMB2BkBdYaA+AOgsPMB2BkDPLZw+jlKVPcB2BkDSv3Q+AOgsPNBP6z9dYaA+AOgs
PMB2BkAL1I8+QB8GPtBP6z/PLZw+jlKVPdBP6z95ApY+EtvQPcB2BkAALJQ9dbY5PtBP6z/S
v3Q+AOgsPNBP6z8L1I8+QB8GPtBP6z9Xq44+9ikJPsB2BkDAd3g+rDQ5PsB2BkAALJQ9ALiA
PtBP6z8ALJQ9dbY5PtBP6z/5Bns+zN81PsB2BkAAYEU+sFBgPtBP6z/Ad3g+rDQ5PtBP6z93
skk+/gFdPsB2BkAMAAo+RQl5PtBP6z8ALJQ9ALiAPtBP6z8AYEU+sFBgPtBP6z8ElEQ+ZK1g
PtBP6z8MAAo+RQl5Pn4AAAAAAAAAAQAAAAQAAAAAAAAABAAAAAsAAAAAAAAACwAAAA8AAAAA
AAAADwAAABIAAAAAAAAAEgAAAAwAAAAAAAAADAAAAAcAAAAAAAAABwAAAAIAAAAAAAAAAgAA
AAgAAAAAAAAACAAAAAMAAAAAAAAAAwAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAYAAAAB
AAAABgAAAAQAAAACAAAABwAAAA0AAAACAAAADQAAAAgAAAADAAAACAAAAA0AAAADAAAADQAA
ABMAAAADAAAAEwAAABYAAAADAAAAFgAAABUAAAADAAAAFQAAABQAAAADAAAAFAAAABEAAAAD
AAAAEQAAABAAAAADAAAAEAAAAA4AAAADAAAADgAAAAoAAAADAAAACgAAAAkAAAADAAAACQAA
AAYAAAADAAAABgAAAAUAAAAEAAAABgAAAAkAAAAEAAAACQAAAAoAAAAEAAAACgAAAAsAAAAH
AAAADAAAABMAAAAHAAAAEwAAAA0AAAAKAAAADgAAAAsAAAALAAAADgAAABAAAAALAAAAEAAA
ABEAAAALAAAAEQAAAA8AAAAMAAAAEgAAABYAAAAMAAAAFgAAABMAAAAPAAAAEQAAABQAAAAP
AAAAFAAAABUAAAAPAAAAFQAAABIAAAASAAAAFQAAABYAAAAQAAAAAAAAAAAAAAAAAAAAAAAA
ABAAAAAAAAAAAAAAAAAAAAAAAIA/UQAAAAQAAADQT+s/XWGgPgDoLDzQT+s/zy2cPo5SlT3Q
T+s/0r90PgDoLDwgssk/XWGgPgDoLDzQT+s/eQKWPhLb0D0gssk/zy2cPo5SlT3QT+s/ACyU
PXW2OT4gssk/0r90PgDoLDwgssk/eQKWPhLb0D3QT+s/C9SPPkAfBj4gssk/ACyUPXW2OT7Q
T+s/ACyUPQC4gD4gssk/C9SPPkAfBj7QT+s/V6uOPvYpCT4gssk/ACyUPQC4gD7QT+s/DAAK
PkUJeT4gssk/dHyNPts6DD4gssk/wHd4Pqw0OT7QT+s/+QZ7PszfNT4gssk/DAAKPkUJeT7Q
T+s/BJREPmStYD4gssk/tHkSPiKJdT4gssk/AGBFPrBQYD7QT+s/d7JJPv4BXT7QT+s/wHd4
Pqw0OT7QT+s/AGBFPrBQYD4gssk/CMhDPuoDYT6WAAAAAAAAAAEAAAAEAAAAAAAAAAQAAAAJ
AAAAAAAAAAkAAAANAAAAAAAAAA0AAAASAAAAAAAAABIAAAAYAAAAAAAAABgAAAAXAAAAAAAA
ABcAAAAZAAAAAAAAABkAAAAUAAAAAAAAABQAAAAPAAAAAAAAAA8AAAALAAAAAAAAAAsAAAAG
AAAAAAAAAAYAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAADAAAAAAAAAAMAAAAFAAAAAAAA
AAUAAAABAAAAAQAAAAUAAAAIAAAAAQAAAAgAAAAEAAAAAgAAAAYAAAAKAAAAAgAAAAoAAAAH
AAAAAwAAAAcAAAAKAAAAAwAAAAoAAAAOAAAAAwAAAA4AAAATAAAAAwAAABMAAAAVAAAAAwAA
ABUAAAAaAAAAAwAAABoAAAAWAAAAAwAAABYAAAARAAAAAwAAABEAAAAQAAAAAwAAABAAAAAM
AAAAAwAAAAwAAAAIAAAAAwAAAAgAAAAFAAAABAAAAAgAAAAMAAAABAAAAAwAAAAJAAAABgAA
AAsAAAAOAAAABgAAAA4AAAAKAAAACQAAAAwAAAANAAAACwAAAA8AAAATAAAACwAAABMAAAAO
AAAADAAAABAAAAANAAAADQAAABAAAAARAAAADQAAABEAAAASAAAADwAAABQAAAAVAAAADwAA
ABUAAAATAAAAEQAAABYAAAAXAAAAEQAAABcAAAAYAAAAEQAAABgAAAASAAAAFAAAABkAAAAW
AAAAFAAAABYAAAAaAAAAFAAAABoAAAAVAAAAFgAAABkAAAAXAAAAEAAAAAAAAAAAAAAAAAAA
AAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP04AAAAEAAAAwHYGQBJcoD5Yvys8wHYGQMkrnD4d
MVS90E/rPy0boD7wBtg70E/rPxJcoD5Yvys89nIGQBJcoD4A6Cw8wHYGQM1SoD4A6Cw8wHYG
QKTVjz6ABOG90E/rP2qbkD4Qutm90E/rP8krnD4dMVS95D0GQBJcoD4A6Cw80E/rP62+dD4A
6Cw8wHYGQK2+dD4A6Cw8wHYGQERweD6slyO+0E/rP6jmej4PbiC+0E/rP6TVjz6ABOG90E/r
P7hElD161SO+wHYGQLhElD161SO+wHYGQORgRT6ws0q+0E/rP37ASz512UW+0E/rP0RweD6s
lyO+0E/rP7hElD0A02u+wHYGQLhElD0A02u+wHYGQJXkCT5FbGO+0E/rP/jqIz6yoVi+0E/r
P+RgRT6ws0q+0E/rP5XkCT5FbGO+kAAAAAAAAAABAAAAAgAAAAAAAAACAAAAAwAAAAAAAAAD
AAAACQAAAAAAAAAJAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAACwAAAAAAAAALAAAAEAAA
AAAAAAAQAAAAFQAAAAAAAAAVAAAAFgAAAAAAAAAWAAAAEQAAAAAAAAARAAAADAAAAAAAAAAM
AAAABgAAAAAAAAAGAAAAAQAAAAEAAAAGAAAABwAAAAEAAAAHAAAACAAAAAEAAAAIAAAAAgAA
AAIAAAAIAAAABwAAAAIAAAAHAAAADgAAAAIAAAAOAAAADQAAAAIAAAANAAAAEwAAAAIAAAAT
AAAAEgAAAAIAAAASAAAAGAAAAAIAAAAYAAAAFwAAAAIAAAAXAAAAGQAAAAIAAAAZAAAAFAAA
AAIAAAAUAAAADwAAAAIAAAAPAAAACgAAAAIAAAAKAAAAAwAAAAMAAAAKAAAACQAAAAQAAAAJ
AAAACgAAAAQAAAAKAAAACwAAAAQAAAALAAAABQAAAAYAAAAMAAAADQAAAAYAAAANAAAADgAA
AAYAAAAOAAAABwAAAAoAAAAPAAAAEAAAAAoAAAAQAAAACwAAAAwAAAARAAAAEgAAAAwAAAAS
AAAAEwAAAAwAAAATAAAADQAAAA8AAAAUAAAAFQAAAA8AAAAVAAAAEAAAABEAAAAWAAAAFwAA
ABEAAAAXAAAAGAAAABEAAAAYAAAAEgAAABQAAAAZAAAAFgAAABQAAAAWAAAAFQAAABYAAAAZ
AAAAFwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9UAAAABAAA
ANBP6z8SXKA+WL8rPNBP6z8tG6A+8AbYOyCyyT8SXKA+WL8rPIgW6z8SXKA+AOgsPNBP6z+t
vnQ+AOgsPNBP6z/JK5w+HTFUvSCyyT/JK5w+HTFUvSCyyT8y158+YB4xOyCyyT+tvnQ+AOgs
PNBP6z+4RJQ9etUjvtBP6z9qm5A+ELrZvSCyyT+k1Y8+gAThvSCyyT+4RJQ9etUjvtBP6z+4
RJQ9ANNrvtBP6z+k1Y8+gAThvSCyyT8NXX0+RD4dviCyyT+4RJQ9ANNrvtBP6z+V5Ak+RWxj
vtBP6z+o5no+D24gviCyyT9EcHg+rJcjviCyyT+V5Ak+RWxjvtBP6z/46iM+sqFYvtBP6z9E
cHg+rJcjviCyyT9+wEs+ddlFviCyyT9a8T0+8dBNvtBP6z/kYEU+sLNKvtBP6z9+wEs+ddlF
viCyyT/kYEU+sLNKvpwAAAAAAAAAAQAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAAAAQAAAAA
AAAABAAAAAkAAAAAAAAACQAAAA0AAAAAAAAADQAAABEAAAAAAAAAEQAAABUAAAAAAAAAFQAA
ABkAAAAAAAAAGQAAABoAAAAAAAAAGgAAABYAAAAAAAAAFgAAABIAAAAAAAAAEgAAAA4AAAAA
AAAADgAAAAoAAAAAAAAACgAAAAUAAAAAAAAABQAAAAEAAAABAAAABQAAAAYAAAABAAAABgAA
AAcAAAABAAAABwAAAAIAAAACAAAABwAAAAYAAAACAAAABgAAAAsAAAACAAAACwAAAA8AAAAC
AAAADwAAABMAAAACAAAAEwAAABcAAAACAAAAFwAAABsAAAACAAAAGwAAABgAAAACAAAAGAAA
ABQAAAACAAAAFAAAABAAAAACAAAAEAAAAAwAAAACAAAADAAAAAgAAAACAAAACAAAAAMAAAAD
AAAACAAAAAQAAAAEAAAACAAAAAwAAAAEAAAADAAAAAkAAAAFAAAACgAAAAYAAAAGAAAACgAA
AAsAAAAJAAAADAAAABAAAAAJAAAAEAAAAA0AAAAKAAAADgAAAAsAAAALAAAADgAAAA8AAAAN
AAAAEAAAABQAAAANAAAAFAAAABEAAAAOAAAAEgAAAA8AAAAPAAAAEgAAABMAAAARAAAAFAAA
ABUAAAASAAAAFgAAABMAAAATAAAAFgAAABoAAAATAAAAGgAAABcAAAAUAAAAGAAAABUAAAAV
AAAAGAAAABkAAAAXAAAAGgAAABkAAAAXAAAAGQAAABsAAAAYAAAAGwAAABkAAAAQAAAAAAAA
AAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/UQAAAAQAAAAgskk/XWGgPgDoLDwg
skk/zy2cPo5SlT0gskk/Gx90PgDoLDzAdgY/XWGgPgDoLDzAdgY/zy2cPo5SlT3AdgY/FI6X
Pgj8wT0gskk/4lOYPieAuj0gskk/ACyUPaw0OT7AdgY/Gx90PgDoLDzAdgY/C9SPPkAfBj4g
skk/C9SPPkAfBj4gskk/ACyUPQC4gD7AdgY/ACyUPaw0OT7AdgY/wHd4Pqw0OT4gskk/dHyN
Pts6DD4gskk/DAAKPkUJeT7AdgY/HSS0PVFWfz7AdgY/ACyUPQC4gD7AdgY/AGBFPrBQYD4g
skk/wHd4Pqw0OT4gskk/Qq0WPijMcz7AdgY/DAAKPkUJeT7AdgY/jIVAPo1wYj4gskk/AGBF
PrBQYD4gskk/pOgjPg5Lbj7AdgY/SlQjPgqPbj4gskk/r+9CPp5gYT6WAAAAAAAAAAEAAAAG
AAAAAAAAAAYAAAAKAAAAAAAAAAoAAAAOAAAAAAAAAA4AAAATAAAAAAAAABMAAAAXAAAAAAAA
ABcAAAAaAAAAAAAAABoAAAAYAAAAAAAAABgAAAAUAAAAAAAAABQAAAAPAAAAAAAAAA8AAAAL
AAAAAAAAAAsAAAAHAAAAAAAAAAcAAAACAAAAAAAAAAIAAAAIAAAAAAAAAAgAAAADAAAAAAAA
AAMAAAAEAAAAAAAAAAQAAAABAAAAAQAAAAQAAAAFAAAAAQAAAAUAAAAGAAAAAgAAAAcAAAAM
AAAAAgAAAAwAAAAIAAAAAwAAAAgAAAAMAAAAAwAAAAwAAAARAAAAAwAAABEAAAAQAAAAAwAA
ABAAAAAVAAAAAwAAABUAAAAZAAAAAwAAABkAAAAWAAAAAwAAABYAAAASAAAAAwAAABIAAAAN
AAAAAwAAAA0AAAAJAAAAAwAAAAkAAAAFAAAAAwAAAAUAAAAEAAAABQAAAAkAAAAKAAAABQAA
AAoAAAAGAAAABwAAAAsAAAARAAAABwAAABEAAAAMAAAACQAAAA0AAAAOAAAACQAAAA4AAAAK
AAAACwAAAA8AAAAQAAAACwAAABAAAAARAAAADQAAABIAAAAXAAAADQAAABcAAAATAAAADQAA
ABMAAAAOAAAADwAAABQAAAAVAAAADwAAABUAAAAQAAAAEgAAABYAAAAXAAAAFAAAABgAAAAW
AAAAFAAAABYAAAAZAAAAFAAAABkAAAAVAAAAFgAAABgAAAAaAAAAFgAAABoAAAAXAAAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP1oAAAAEAAAAwHYGP11hoD4A
6Cw8wHYGP88tnD6OUpU9wHYGPxsfdD4A6Cw8wHaGPl1hoD4A6Cw8wHaGPrF+nT7UyFo9wHYG
PxSOlz4I/ME9wHaGPs8tnD6OUpU9wHYGPwAslD2sNDk+wHaGPhsfdD4A6Cw8wHYGPwvUjz5A
HwY+wHaGPhSOlz4I/ME9wHaGPowokj6qCPY9wHaGPr5ikT4veP09wHYGPwAslD0AuIA+wHaG
PgAslD2sNDk+wHYGP8B3eD6sNDk+wHaGPgvUjz5AHwY+wHYGPx0ktD1RVn8+wHaGPgAslD0A
uIA+wHYGPwBgRT6wUGA+wHaGPsB3eD6sNDk+wHaGPneyST7+AV0+wHYGPwwACj5FCXk+wHaG
PgwACj5FCXk+wHYGP4yFQD6NcGI+wHaGPgBgRT6wUGA+wHYGP0pUIz4Kj24+wHaGPkKtFj4o
zHM+wHaGPoyFQD6NcGI+wHaGPvvxKT5+zms+qAAAAAAAAAABAAAABQAAAAAAAAAFAAAACQAA
AAAAAAAJAAAADwAAAAAAAAAPAAAAEwAAAAAAAAATAAAAGAAAAAAAAAAYAAAAGgAAAAAAAAAa
AAAAFgAAAAAAAAAWAAAAEQAAAAAAAAARAAAADQAAAAAAAAANAAAABwAAAAAAAAAHAAAAAgAA
AAAAAAACAAAACAAAAAAAAAAIAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAE
AAAABgAAAAEAAAAGAAAACgAAAAEAAAAKAAAABQAAAAIAAAAHAAAADgAAAAIAAAAOAAAACAAA
AAMAAAAIAAAADgAAAAMAAAAOAAAAEgAAAAMAAAASAAAAFwAAAAMAAAAXAAAAGwAAAAMAAAAb
AAAAHQAAAAMAAAAdAAAAHAAAAAMAAAAcAAAAGQAAAAMAAAAZAAAAFQAAAAMAAAAVAAAAFAAA
AAMAAAAUAAAAEAAAAAMAAAAQAAAADAAAAAMAAAAMAAAACwAAAAMAAAALAAAACgAAAAMAAAAK
AAAABgAAAAMAAAAGAAAABAAAAAUAAAAKAAAACwAAAAUAAAALAAAADAAAAAUAAAAMAAAACQAA
AAcAAAANAAAAEgAAAAcAAAASAAAADgAAAAkAAAAMAAAAEAAAAAkAAAAQAAAAFAAAAAkAAAAU
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
AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP10AAAAEAAAAAAAAAIo1nT4A6mo9AAAA
AG/ybD4A6mo9AAAAAHlFnj5kyio9wHaGvqE4nT70rmo9wHaGvkndbT4A6mo9wHaGvm/ybD4A
6mo9AAAAALhElD0A02u+wHaGvjLXnz4c55U8wHaGvlUOnz5soPU8AAAAABJcoD4gBSw8wHaG
vrhElD0A02u+wHaGviL84z2jk2a+AAAAAJXkCT63Z2O+wHaGvhJcoD4gBSw8AAAAAHlFnj6g
VKm8wHaGvlFSnz5AGqe7wHaGvpXkCT63Z2O+wHaGvlqcDT6E4GG+AAAAAORgRT56uUq+AAAA
AMkrnD5gOFS9wHaGvskrnD5gOFS9wHaGvoFaKz5miVW+wHaGvuRgRT56uUq+AAAAAERweD6u
oCO+AAAAALYAlj6UraW9wHaGvnzGlj5APZ69wHaGvkRweD6uoCO+AAAAAG8Ihj4DFQq+AAAA
AKTVjz7rA+G9wHaGvqTVjz7rA+G9wHaGvgrvij5anvq9rgAAAAAAAAABAAAABgAAAAAAAAAG
AAAADAAAAAAAAAAMAAAAEgAAAAAAAAASAAAAFwAAAAAAAAAXAAAAGwAAAAAAAAAbAAAAHAAA
AAAAAAAcAAAAGAAAAAAAAAAYAAAAEwAAAAAAAAATAAAADgAAAAAAAAAOAAAACQAAAAAAAAAJ
AAAAAgAAAAAAAAACAAAAAwAAAAAAAAADAAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAAAQAA
AAEAAAAFAAAACgAAAAEAAAAKAAAABgAAAAIAAAAHAAAACAAAAAIAAAAIAAAAAwAAAAIAAAAJ
AAAABwAAAAMAAAAIAAAABwAAAAMAAAAHAAAADQAAAAMAAAANAAAADwAAAAMAAAAPAAAAFAAA
AAMAAAAUAAAAGQAAAAMAAAAZAAAAHQAAAAMAAAAdAAAAHgAAAAMAAAAeAAAAGgAAAAMAAAAa
AAAAFgAAAAMAAAAWAAAAFQAAAAMAAAAVAAAAEQAAAAMAAAARAAAAEAAAAAMAAAAQAAAACwAA
AAMAAAALAAAACgAAAAMAAAAKAAAABQAAAAMAAAAFAAAABAAAAAYAAAAKAAAACwAAAAYAAAAL
AAAADAAAAAcAAAAJAAAADQAAAAkAAAAOAAAADwAAAAkAAAAPAAAADQAAAAsAAAAQAAAADAAA
AAwAAAAQAAAAEQAAAAwAAAARAAAAFQAAAAwAAAAVAAAAEgAAAA4AAAATAAAAFAAAAA4AAAAU
AAAADwAAABIAAAAVAAAAFgAAABIAAAAWAAAAGgAAABIAAAAaAAAAFwAAABMAAAAYAAAAGQAA
ABMAAAAZAAAAFAAAABcAAAAaAAAAGwAAABgAAAAcAAAAHQAAABgAAAAdAAAAGQAAABoAAAAe
AAAAGwAAABsAAAAeAAAAHAAAABwAAAAeAAAAHQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAgD9mAAAABAAAAMB2hr5J3W0+AOpqPcB2hr5v8mw+AOpqPcB2hr6h
OJ0+9K5qPVDphr6KNZ0+AOpqPcB2Br9v8mw+AOpqPcB2hr64RJQ9ANNrvsB2hr5VDp8+bKD1
PMB2Br9RUp8+rMvVPMB2Br+hOJ0+9K5qPcB2Br9J3W0+AOpqPcB2Br+4RJQ9ANNrvsB2hr4i
/OM9o5NmvsB2hr4y158+HOeVPMB2Br8SXKA+IAUsPMB2Br8i/OM9o5NmvsB2hr6V5Ak+t2dj
vsB2hr4SXKA+IAUsPMB2Br9RUp8+QBqnu8B2Br+V5Ak+t2djvsB2hr5anA0+hOBhvsB2hr5R
Up8+QBqnu8B2Br/JK5w+YDhUvcB2Br/kYEU+erlKvsB2hr6BWis+ZolVvsB2hr7JK5w+YDhU
vcB2hr58xpY+QD2evcB2Br+k1Y8+6wPhvcB2Br9+wEs+EtpFvsB2hr7kYEU+erlKvsB2hr6k
1Y8+6wPhvcB2Br8K74o+Wp76vcB2Br9EcHg+rqAjvsB2hr5EcHg+rqAjvsB2hr4K74o+Wp76
vcAAAAAAAAAAAQAAAAUAAAAAAAAABQAAAAsAAAAAAAAACwAAAA8AAAAAAAAADwAAABMAAAAA
AAAAEwAAABcAAAAAAAAAFwAAABwAAAAAAAAAHAAAACAAAAAAAAAAIAAAACEAAAAAAAAAIQAA
AB0AAAAAAAAAHQAAABkAAAAAAAAAGQAAABgAAAAAAAAAGAAAABQAAAAAAAAAFAAAABAAAAAA
AAAAEAAAAAwAAAAAAAAADAAAAAYAAAAAAAAABgAAAAIAAAAAAAAAAgAAAAMAAAAAAAAAAwAA
AAkAAAAAAAAACQAAAAQAAAAAAAAABAAAAAEAAAABAAAABAAAAAoAAAABAAAACgAAAAUAAAAC
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
jFU+wHaGP+gYJL6OUpU9ILJJP+gYJL6OUpU9wHaGP3KayL2sNDk+ILJJP7Yejr0iok8+wHaG
PxSEC75AHwY+ILJJPzyqDb6t9AA+ILJJPwK0vr0nBT0+ILJJP3KayL2sNDk+ILJJPxSEC75A
HwY+ogAAAAAAAAABAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAAAgAAAAAAAAACAAAABwAA
AAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAADQAAAAAAAAANAAAAEgAAAAAAAAAS
AAAAFgAAAAAAAAAWAAAAGAAAAAAAAAAYAAAAFAAAAAAAAAAUAAAADwAAAAAAAAAPAAAACgAA
AAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAIAAAAGAAAADAAAAAIAAAAM
AAAAEQAAAAIAAAARAAAAEAAAAAIAAAAQAAAAFQAAAAIAAAAVAAAAGQAAAAIAAAAZAAAAHAAA
AAIAAAAcAAAAGwAAAAIAAAAbAAAAGgAAAAIAAAAaAAAAFwAAAAIAAAAXAAAAEwAAAAIAAAAT
AAAADgAAAAIAAAAOAAAACQAAAAIAAAAJAAAABwAAAAMAAAAHAAAACQAAAAMAAAAJAAAACAAA
AAQAAAAKAAAACwAAAAQAAAALAAAABQAAAAUAAAALAAAABgAAAAYAAAALAAAADAAAAAgAAAAJ
AAAADgAAAAgAAAAOAAAADQAAAAoAAAAPAAAAEAAAAAoAAAAQAAAAEQAAAAoAAAARAAAACwAA
AAsAAAARAAAADAAAAA0AAAAOAAAAEwAAAA0AAAATAAAAEgAAAA8AAAAUAAAAEAAAABAAAAAU
AAAAFQAAABIAAAATAAAAFwAAABIAAAAXAAAAFgAAABQAAAAYAAAAGQAAABQAAAAZAAAAFQAA
ABYAAAAXAAAAGgAAABYAAAAaAAAAGwAAABYAAAAbAAAAHAAAABYAAAAcAAAAGAAAABgAAAAc
AAAAGQAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAgD9jAAAABAAA
AMB2hj8SXKA+WL8rPAJghj8SXKA+AOgsPMB2hj+tvnQ+AOgsPMB2hj9RUp8+UGCmuyCyST8S
XKA+WL8rPHg9hj8SXKA+AOgsPMB2hj+4RJQ9etUjvnRYWT+4RJQ9AOgsPMB2hj+hOJ0+PHUU
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
AA8AAAAPAAAAIwAAACQAAAAPAAAAJAAAABAAAAAQAAAAJQAAABEAAAAQAAAAJAAAACYAAAAQ
AAAAJgAAACUAAAARAAAAJQAAACcAAAARAAAAJwAAABIAAAASAAAAFQAAABQAAAASAAAAJwAA
ABUAAAAVAAAAJwAAACgAAAAVAAAAKAAAABYAAAAWAAAAGAAAABcAAAAWAAAAKAAAACkAAAAW
AAAAKQAAABgAAAAYAAAAKgAAACsAAAAYAAAAKwAAABkAAAAYAAAAKQAAACwAAAAYAAAALAAA
AC0AAAAYAAAALQAAAC4AAAAYAAAALgAAACoAAAAZAAAAKwAAAC8AAAAaAAAAMAAAABsAAAAb
AAAAMAAAADEAAAAbAAAAMQAAABwAAAAcAAAAMQAAADMAAAAcAAAAMwAAADQAAAAcAAAANAAA
ADUAAAAcAAAANQAAADYAAAAcAAAANgAAADcAAAAcAAAANwAAADgAAAAcAAAAOAAAADkAAAAc
AAAAOQAAADoAAAAcAAAAOgAAADIAAAAdAAAAOwAAAB4AAAAeAAAAOwAAADwAAAAeAAAAPAAA
ADoAAAAeAAAAOgAAAB8AAAAfAAAAPQAAAD4AAAAfAAAAPgAAACIAAAAfAAAAIgAAACAAAAAf
AAAAOgAAAD0AAAAiAAAAPgAAAD8AAAAiAAAAPwAAACMAAAAjAAAAPwAAACQAAAAkAAAAPwAA
AEAAAAAkAAAAQAAAAEEAAAAkAAAAQQAAACYAAAAlAAAAJgAAACcAAAAmAAAAQQAAAEIAAAAm
AAAAQgAAACcAAAAnAAAAQgAAAEMAAAAnAAAAQwAAACgAAAAoAAAAQwAAACkAAAApAAAAQwAA
AEQAAAApAAAARAAAAC0AAAApAAAALQAAACwAAAAqAAAARQAAACsAAAAqAAAALgAAAEUAAAAr
AAAARQAAAEYAAAArAAAARgAAAEcAAAArAAAARwAAAEgAAAArAAAASAAAAEkAAAArAAAASQAA
AEoAAAArAAAASgAAAC8AAAAtAAAARAAAAEsAAAAtAAAASwAAAC4AAAAuAAAASwAAAEwAAAAu
AAAATAAAAEUAAAAwAAAATQAAAEYAAAAwAAAARgAAAE4AAAAwAAAATgAAAE8AAAAwAAAATwAA
AFAAAAAwAAAAUAAAAFEAAAAwAAAAUQAAAFIAAAAwAAAAUgAAAFMAAAAwAAAAUwAAADEAAAAx
AAAAUwAAAFIAAAAxAAAAUgAAAFQAAAAxAAAAVAAAADQAAAAxAAAANAAAADMAAAAyAAAAOgAA
AFUAAAA0AAAAVAAAAFYAAAA0AAAAVgAAAFcAAAA0AAAAVwAAADUAAAA1AAAAVwAAADYAAAA2
AAAAVwAAAFgAAAA2AAAAWAAAAFkAAAA2AAAAWQAAADcAAAA3AAAAWQAAADgAAAA4AAAAWQAA
AFoAAAA4AAAAWgAAAFsAAAA4AAAAWwAAAFwAAAA4AAAAXAAAADkAAAA5AAAAXAAAAF0AAAA5
AAAAXQAAADoAAAA6AAAAPAAAAFUAAAA6AAAAXQAAAFwAAAA6AAAAXAAAAD0AAAA9AAAAXAAA
AD4AAAA+AAAAXgAAAF8AAAA+AAAAXwAAAD8AAAA+AAAAXAAAAF4AAAA/AAAAXwAAAEAAAABA
AAAAXwAAAEEAAABBAAAAXwAAAGAAAABBAAAAYAAAAGEAAABBAAAAYQAAAGIAAABBAAAAYgAA
AEIAAABCAAAAYgAAAEQAAABCAAAARAAAAEMAAABEAAAAYgAAAGEAAABEAAAAYQAAAEsAAABF
AAAATgAAAEYAAABFAAAATAAAAGMAAABFAAAAYwAAAGQAAABFAAAAZAAAAE4AAABGAAAATQAA
AGUAAABGAAAAZQAAAEcAAABLAAAAYQAAAGYAAABLAAAAZgAAAGMAAABLAAAAYwAAAEwAAABO
AAAAZAAAAE8AAABPAAAAZAAAAGMAAABPAAAAYwAAAGcAAABPAAAAZwAAAGgAAABPAAAAaAAA
AGkAAABPAAAAaQAAAFAAAABQAAAAagAAAFEAAABQAAAAaQAAAGoAAABRAAAAagAAAGsAAABR
AAAAawAAAFIAAABSAAAAawAAAGwAAABSAAAAbAAAAFQAAABUAAAAbAAAAG0AAABUAAAAbQAA
AFYAAABWAAAAbQAAAG4AAABWAAAAbgAAAG8AAABWAAAAbwAAAFcAAABXAAAAbwAAAHAAAABX
AAAAcAAAAFkAAABXAAAAWQAAAFgAAABZAAAAWwAAAFoAAABZAAAAcAAAAF4AAABZAAAAXgAA
AFsAAABbAAAAXgAAAFwAAABeAAAAcAAAAG8AAABeAAAAbwAAAHEAAABeAAAAcQAAAF8AAABf
AAAAcQAAAHIAAABfAAAAcgAAAGAAAABgAAAAcgAAAGEAAABhAAAAcgAAAHMAAABhAAAAcwAA
AGYAAABjAAAAZgAAAGcAAABmAAAAcwAAAHQAAABmAAAAdAAAAHUAAABmAAAAdQAAAHYAAABm
AAAAdgAAAGkAAABmAAAAaQAAAGcAAABnAAAAaQAAAGgAAABpAAAAawAAAGoAAABpAAAAdgAA
AGsAAABrAAAAdgAAAHUAAABrAAAAdQAAAGwAAABsAAAAdQAAAG4AAABsAAAAbgAAAG0AAABu
AAAAdQAAAHIAAABuAAAAcgAAAG8AAABvAAAAcgAAAHEAAAByAAAAdAAAAHMAAAByAAAAdQAA
AHQAAAAQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/PwAAAAQAAADe
w7W/el2xvg8C0j4gssm/el2xvg8C0j4gssm/3APMvghRsj7ew7W/gBLTvpjoqT5wFKi/a6jI
vVxFOT5wFKi/yDuwvRiqQj5wFKi/wOBmvc7qWT5wFKi/SPFEvYZiYD5wFKi/3DMYvREJZT5w
FKi//PAFvQPqZj4gssm//PAFvQPqZj4gssm/gBLTvpjoqT5wFKi/GWwXvlDS0j1wFKi/WqIV
vraB2z1wFKi/b40LviwtBj5wFKi/NfncvfYOLD5wFKi//PAFvYpkFz4gssm//PAFvYpkFz4g
ssm/GWwXvlDS0j1wFKi/QAGbvVDS0j0gssm/QAGbvVDS0j1yAAAAAAAAAAEAAAACAAAAAAAA
AAIAAAADAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAFAAAAAAAAAAUAAAAGAAAAAAAAAAYAAAAH
AAAAAAAAAAcAAAAIAAAAAAAAAAgAAAAJAAAAAAAAAAkAAAAKAAAAAAAAAAoAAAABAAAAAQAA
AAoAAAARAAAAAQAAABEAAAAUAAAAAQAAABQAAAASAAAAAQAAABIAAAALAAAAAQAAAAsAAAAC
AAAAAgAAAAsAAAADAAAAAwAAAAwAAAANAAAAAwAAAA0AAAAOAAAAAwAAAA4AAAAPAAAAAwAA
AA8AAAAEAAAAAwAAAAsAAAASAAAAAwAAABIAAAAMAAAABAAAAA8AAAAOAAAABAAAAA4AAAAN
AAAABAAAAA0AAAAMAAAABAAAAAwAAAATAAAABAAAABMAAAAQAAAABAAAABAAAAAJAAAABAAA
AAkAAAAIAAAABAAAAAgAAAAHAAAABAAAAAcAAAAGAAAABAAAAAYAAAAFAAAACQAAABAAAAAR
AAAACQAAABEAAAAKAAAADAAAABIAAAAUAAAADAAAABQAAAATAAAAEAAAABMAAAAUAAAAEAAA
ABQAAAARAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP5kAAAAE
AAAAwHaGvnztvD1Xu34+wHYGv3ztvD1Xu34+wHaGvnztvD3IlzY+wHaGvs8fxD0+RX4+dIWV
vmpdjz4ApLA+dIWVvnGChj5ygK8+dIWVvoeIfD4YEqw+wHYGv3ztvD3IlzY+wHYGv4eIfD4Y
Eqw+wHaGvlz3bD4A6mo9wHaGviAWzD1iwH0+dIWVvmM4mD5ygK8+wHYGv2pdjz4ApLA+wHYG
v3GChj5ygK8+wHYGvw/dhD7+0q4+wHYGv09Lfj4Mcqw+wHYGv1z3bD4A6mo9wHaGvt44nT4A
6mo9wHaGvkgQ/D3Xm3o+wHYGv2M4mD5ygK8+wHaGvq4GCj7hBXk+wHaGvpgPPj4vfGM+dIWV
vtV5oD4YEqw+wHYGvwnhmT7+0q4+wHYGv944nT4A6mo9dIWVvjJjsD5NlIU+dIWVvkCWsT5O
bo4+wHaGvgMtnD6EWJU9wHaGvkbVQj4gcGE+wHYGv9V5oD4YEqw+wHaGvpRiRT5CUGA+wHaG
vhrpUj7S/VU+wHaGvoU2ZD5FyUg+wHaGvjaSdD57Pjw+dIWVvn6Lpz7AoqY+wHYGv2vkoT5N
/ao+wHYGvzJjsD5NlIU+wHYGvzHFsD7RTYg+wHYGv0CWsT5Obo4+wHYGv9yDsD5sWJY+dIWV
vjJjsD5OSJc+wHaGvsXdmT6Aqas9dIWVvtUErT6eg58+wHaGvrRseD7YPjk+wHYGv36Lpz7A
oqY+wHaGvqx8ez5ARDU+wHYGvzJjsD5OSJc+wHYGvwALsD4fLZg+wHaGvgd4lD4Krd89wHYG
v9UErT6eg58+wHaGvkfWjz6BJwY+JgEAAAAAAAABAAAABwAAAAAAAAAHAAAAAgAAAAAAAAAC
AAAACQAAAAAAAAAJAAAAEQAAAAAAAAARAAAAGwAAAAAAAAAbAAAAKQAAAAAAAAApAAAAMAAA
AAAAAAAwAAAAMgAAAAAAAAAyAAAALQAAAAAAAAAtAAAAKwAAAAAAAAArAAAAIQAAAAAAAAAh
AAAAIAAAAAAAAAAgAAAAHwAAAAAAAAAfAAAAHgAAAAAAAAAeAAAAHAAAAAAAAAAcAAAAFQAA
AAAAAAAVAAAAFAAAAAAAAAAUAAAAEgAAAAAAAAASAAAACgAAAAAAAAAKAAAAAwAAAAAAAAAD
AAAABAAAAAAAAAAEAAAABQAAAAAAAAAFAAAABgAAAAAAAAAGAAAACAAAAAAAAAAIAAAAAQAA
AAEAAAAIAAAADwAAAAEAAAAPAAAADgAAAAEAAAAOAAAADQAAAAEAAAANAAAADAAAAAEAAAAM
AAAAEwAAAAEAAAATAAAAFwAAAAEAAAAXAAAAHQAAAAEAAAAdAAAAIwAAAAEAAAAjAAAALAAA
AAEAAAAsAAAAMQAAAAEAAAAxAAAALwAAAAEAAAAvAAAALgAAAAEAAAAuAAAAJwAAAAEAAAAn
AAAAJgAAAAEAAAAmAAAAJQAAAAEAAAAlAAAAJAAAAAEAAAAkAAAAGAAAAAEAAAAYAAAAEAAA
AAEAAAAQAAAABwAAAAIAAAAHAAAAEAAAAAIAAAAQAAAACQAAAAMAAAAKAAAACwAAAAMAAAAL
AAAABAAAAAQAAAAMAAAADQAAAAQAAAANAAAABQAAAAQAAAALAAAAEwAAAAQAAAATAAAADAAA
AAUAAAANAAAADgAAAAUAAAAOAAAADwAAAAUAAAAPAAAABgAAAAYAAAAPAAAACAAAAAkAAAAQ
AAAAGAAAAAkAAAAYAAAAEQAAAAoAAAASAAAACwAAAAsAAAASAAAAFAAAAAsAAAAUAAAAFQAA
AAsAAAAVAAAAFgAAAAsAAAAWAAAAFwAAAAsAAAAXAAAAEwAAABEAAAAYAAAAJAAAABEAAAAk
AAAAGQAAABEAAAAZAAAAGgAAABEAAAAaAAAAGwAAABUAAAAcAAAAFgAAABYAAAAdAAAAFwAA
ABYAAAAcAAAAHgAAABYAAAAeAAAAHwAAABYAAAAfAAAAIAAAABYAAAAgAAAAIQAAABYAAAAh
AAAAIgAAABYAAAAiAAAAIwAAABYAAAAjAAAAHQAAABkAAAAkAAAAJQAAABkAAAAlAAAAGgAA
ABoAAAAlAAAAJgAAABoAAAAmAAAAJwAAABoAAAAnAAAAKAAAABoAAAAoAAAAGwAAABsAAAAo
AAAAKgAAABsAAAAqAAAAKQAAACEAAAArAAAAIgAAACIAAAAqAAAAMQAAACIAAAAxAAAALAAA
ACIAAAAsAAAAIwAAACIAAAArAAAALQAAACIAAAAtAAAAKgAAACcAAAAuAAAAKAAAACgAAAAu
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
v+xXFj4O63M+0E/rv4dJJT67tm0+ILLJv4+OQD4CXmI+0E/rvzhbRT6wUGA+ILLJvzhbRT6w
UGA+0E/rv+T0Qj5wWmE+AgEAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAACAAAABgAA
AAAAAAAGAAAACgAAAAAAAAAKAAAADgAAAAAAAAAOAAAAEgAAAAAAAAASAAAAFgAAAAAAAAAW
AAAAGgAAAAAAAAAaAAAAHgAAAAAAAAAeAAAAIgAAAAAAAAAiAAAAJwAAAAAAAAAnAAAAKAAA
AAAAAAAoAAAALAAAAAAAAAAsAAAAKgAAAAAAAAAqAAAAJQAAAAAAAAAlAAAAIwAAAAAAAAAj
AAAAHwAAAAAAAAAfAAAAGwAAAAAAAAAbAAAAFwAAAAAAAAAXAAAAEwAAAAAAAAATAAAADwAA
AAAAAAAPAAAACwAAAAAAAAALAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAABQAAAAAAAAAF
AAAAAQAAAAEAAAAFAAAACQAAAAEAAAAJAAAADQAAAAEAAAANAAAAEQAAAAEAAAARAAAAFQAA
AAEAAAAVAAAAGQAAAAEAAAAZAAAAHQAAAAEAAAAdAAAAIQAAAAEAAAAhAAAAJgAAAAEAAAAm
AAAAKwAAAAEAAAArAAAAKQAAAAEAAAApAAAAJAAAAAEAAAAkAAAAIAAAAAEAAAAgAAAAHAAA
AAEAAAAcAAAAGAAAAAEAAAAYAAAAFAAAAAEAAAAUAAAAEAAAAAEAAAAQAAAADAAAAAEAAAAM
AAAACAAAAAEAAAAIAAAABAAAAAIAAAAEAAAACAAAAAIAAAAIAAAABgAAAAMAAAAHAAAACQAA
AAMAAAAJAAAABQAAAAYAAAAIAAAACgAAAAcAAAALAAAADQAAAAcAAAANAAAACQAAAAgAAAAM
AAAACgAAAAoAAAAMAAAADgAAAAsAAAAPAAAAEQAAAAsAAAARAAAADQAAAAwAAAAQAAAADgAA
AA4AAAAQAAAAEgAAAA8AAAATAAAAFQAAAA8AAAAVAAAAEQAAABAAAAAUAAAAFgAAABAAAAAW
AAAAEgAAABMAAAAXAAAAGQAAABMAAAAZAAAAFQAAABQAAAAYAAAAGgAAABQAAAAaAAAAFgAA
ABcAAAAbAAAAHQAAABcAAAAdAAAAGQAAABgAAAAcAAAAHgAAABgAAAAeAAAAGgAAABsAAAAf
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
P6QflD11tjk++LDJP6QflD0AuIA+0E/rP7QPJDxFCXk+0E/rP+Is1L0A6Cw8+LDJP6QflD11
tjk+zAZPP06TLL4A6Cw8+LDJP7QPJDxFCXk+0E/rP2X2Nb1o4mE++LDJP0IXJ73xbWM+0E/r
P06TLL7IrS08qxfrP06TLL4A6Cw8+LDJP+Is1L0A6Cw8+LDJP1cmJL6gQpQ9+LDJP58NJL6O
UpU9+LDJPwXVIb5QI6A9+LDJP11pD76KXfk9+LDJPyOAC75AHwY++LDJP8gw3L1Rbyw++LDJ
P+yJyL2sNDk++LDJP7KgxL02wDo++LDJP4jVRL2wUGA+0E/rP4jVRL2wUGA+0E/rP/sZJL70
1pQ90E/rP58NJL6OUpU90E/rP1LxIr7vupo90E/rP8B0Db5IcAE+0E/rPyOAC75AHwY+0E/r
P8gw3L1Rbyw+0E/rP/Jtzr0xZDU+0E/rP+yJyL2sNDk+0E/rP36bxr1x+jk+0E/rP7uFk72h
jk0+0E/rP7P1c72iVVc+wAAAAAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAABwAA
AAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAIAAAAFgAAAAAAAAAWAAAAIQAAAAAAAAAh
AAAAIAAAAAAAAAAgAAAAHwAAAAAAAAAfAAAAHgAAAAAAAAAeAAAAHQAAAAAAAAAdAAAAHAAA
AAAAAAAcAAAAGwAAAAAAAAAbAAAAGgAAAAAAAAAaAAAAGQAAAAAAAAAZAAAAGAAAAAAAAAAY
AAAAFwAAAAAAAAAXAAAACgAAAAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAADAAA
AAEAAAAMAAAABQAAAAIAAAAFAAAABgAAAAIAAAAGAAAABwAAAAMAAAAHAAAACQAAAAMAAAAJ
AAAACAAAAAQAAAAKAAAACwAAAAQAAAALAAAABgAAAAQAAAAGAAAADAAAAAUAAAAMAAAABgAA
AAYAAAANAAAADgAAAAYAAAAOAAAADwAAAAYAAAAPAAAAEAAAAAYAAAAQAAAAEQAAAAYAAAAR
AAAAEgAAAAYAAAASAAAAEwAAAAYAAAATAAAAFAAAAAYAAAAUAAAAFQAAAAYAAAAVAAAACQAA
AAYAAAAJAAAABwAAAAYAAAALAAAACgAAAAYAAAAKAAAADQAAAAgAAAAJAAAAFQAAAAgAAAAV
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
AAAAMQAAAAAAAAAxAAAAMAAAAAAAAAAwAAAAKwAAAAAAAAArAAAAJQAAAAAAAAAlAAAAIQAA
AAAAAAAhAAAAHgAAAAAAAAAeAAAAGAAAAAAAAAAYAAAAFAAAAAAAAAAUAAAAEAAAAAAAAAAQ
AAAADAAAAAAAAAAMAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAAAQAAAAEAAAADAAAABQAA
AAEAAAAFAAAACAAAAAEAAAAIAAAACwAAAAEAAAALAAAADwAAAAEAAAAPAAAAEwAAAAEAAAAT
AAAAFwAAAAEAAAAXAAAAHQAAAAEAAAAdAAAAIgAAAAEAAAAiAAAAJgAAAAEAAAAmAAAALAAA
AAEAAAAsAAAALQAAAAEAAAAtAAAAKQAAAAEAAAApAAAAIwAAAAEAAAAjAAAAHwAAAAEAAAAf
AAAAGQAAAAEAAAAZAAAAFQAAAAEAAAAVAAAAEQAAAAEAAAARAAAADQAAAAEAAAANAAAACQAA
AAEAAAAJAAAABAAAAAIAAAAEAAAACQAAAAIAAAAJAAAABgAAAAMAAAAHAAAACAAAAAMAAAAI
AAAABQAAAAYAAAAJAAAACgAAAAcAAAALAAAACAAAAAcAAAAMAAAADwAAAAcAAAAPAAAACwAA
AAkAAAANAAAACgAAAAoAAAANAAAADgAAAAwAAAAQAAAADwAAAA0AAAARAAAAEgAAAA0AAAAS
AAAADgAAAA8AAAAQAAAAEwAAABAAAAAUAAAAEwAAABEAAAAVAAAAFgAAABEAAAAWAAAAEgAA
ABMAAAAUAAAAGAAAABMAAAAYAAAAFwAAABUAAAAZAAAAGgAAABUAAAAaAAAAGwAAABUAAAAb
AAAAHAAAABUAAAAcAAAAFgAAABcAAAAYAAAAHgAAABcAAAAeAAAAHQAAABkAAAAfAAAAIAAA
ABkAAAAgAAAAGgAAAB0AAAAeAAAAIQAAAB0AAAAhAAAAIgAAAB8AAAAjAAAAIAAAACAAAAAj
AAAAJAAAACEAAAAlAAAAIgAAACIAAAAlAAAAJgAAACMAAAAnAAAAKAAAACMAAAAoAAAAJAAA
ACMAAAApAAAAKgAAACMAAAAqAAAAJwAAACUAAAArAAAAJgAAACYAAAArAAAALAAAACkAAAAt
AAAALgAAACkAAAAuAAAALwAAACkAAAAvAAAAKgAAACsAAAAwAAAALAAAACwAAAAxAAAALQAA
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
ABUAAAAGAAAAFQAAABYAAAAGAAAAFgAAABcAAAAGAAAAFwAAABgAAAAGAAAAGAAAAAcAAAAH
AAAAGAAAABcAAAAHAAAAFwAAABkAAAAHAAAAGQAAABoAAAAHAAAAGgAAAAgAAAAIAAAAGgAA
ABsAAAAIAAAAGwAAAAkAAAAJAAAAGwAAABwAAAAJAAAAHAAAAAoAAAAKAAAAHAAAAB0AAAAK
AAAAHQAAAB4AAAAKAAAAHgAAAB8AAAAKAAAAHwAAAAwAAAAKAAAADAAAAAsAAAANAAAAEwAA
ABIAAAANAAAAEgAAACEAAAANAAAAIQAAACIAAAANAAAAIgAAACAAAAAOAAAAIwAAAA8AAAAO
AAAAJAAAACMAAAAPAAAAIwAAABAAAAAQAAAAIwAAACUAAAAQAAAAJQAAABEAAAARAAAAJQAA
ACYAAAARAAAAJgAAACcAAAARAAAAJwAAABIAAAASAAAAJwAAACgAAAASAAAAKAAAACkAAAAS
AAAAKQAAACEAAAAUAAAAKgAAABUAAAAVAAAAKwAAABcAAAAVAAAAFwAAABYAAAAVAAAAKgAA
ACwAAAAVAAAALAAAAC0AAAAVAAAALQAAAC4AAAAVAAAALgAAAC8AAAAVAAAALwAAACsAAAAX
AAAAKwAAADAAAAAXAAAAMAAAABkAAAAZAAAAMAAAABoAAAAaAAAAMAAAADEAAAAaAAAAMQAA
ADIAAAAaAAAAMgAAABsAAAAbAAAAMgAAAB0AAAAbAAAAHQAAABwAAAAdAAAAMgAAADMAAAAd
AAAAMwAAADQAAAAdAAAANAAAADUAAAAdAAAANQAAAB4AAAAgAAAAIgAAADcAAAAgAAAANwAA
ADgAAAAgAAAAOAAAADYAAAAhAAAAKQAAADcAAAAhAAAANwAAACIAAAAjAAAAJAAAADkAAAAj
AAAAOQAAACUAAAAkAAAAOgAAADkAAAAlAAAAOQAAACYAAAAmAAAAOQAAADsAAAAmAAAAOwAA
ADwAAAAmAAAAPAAAACcAAAAnAAAAPAAAAD0AAAAnAAAAPQAAAD4AAAAnAAAAPgAAACgAAAAo
AAAAPgAAACkAAAApAAAAPgAAAD8AAAApAAAAPwAAAEAAAAApAAAAQAAAADcAAAAqAAAALgAA
AC0AAAAqAAAALQAAACwAAAAqAAAAQQAAAC4AAAArAAAALwAAAEIAAAArAAAAQgAAAEMAAAAr
AAAAQwAAADAAAAAuAAAARAAAAC8AAAAuAAAAQQAAAEUAAAAuAAAARQAAAEQAAAAvAAAARAAA
AEYAAAAvAAAARgAAAEcAAAAvAAAARwAAAEIAAAAwAAAAQwAAADEAAAAxAAAAQwAAAEgAAAAx
AAAASAAAADMAAAAxAAAAMwAAADIAAAAzAAAASQAAAEoAAAAzAAAASgAAAEsAAAAzAAAASwAA
AEwAAAAzAAAATAAAADQAAAAzAAAASAAAAEkAAAA0AAAATAAAAE0AAAA0AAAATQAAAE4AAAA0
AAAATgAAADUAAAA2AAAAOAAAAFAAAAA2AAAAUAAAAFEAAAA2AAAAUQAAAE8AAAA3AAAAQAAA
ADgAAAA4AAAAQAAAAFIAAAA4AAAAUgAAAFAAAAA5AAAAOgAAADsAAAA6AAAAUwAAAFQAAAA6
AAAAVAAAADsAAAA7AAAAVAAAAFUAAAA7AAAAVQAAADwAAAA8AAAAVQAAAFYAAAA8AAAAVgAA
AD0AAAA9AAAAVgAAAFcAAAA9AAAAVwAAAD4AAAA+AAAAVwAAAFgAAAA+AAAAWAAAAFkAAAA+
AAAAWQAAAD8AAAA/AAAAWQAAAFoAAAA/AAAAWgAAAEAAAABAAAAAWgAAAFEAAABAAAAAUQAA
AFAAAABAAAAAUAAAAFIAAABCAAAARwAAAFsAAABCAAAAWwAAAEMAAABDAAAAWwAAAEkAAABD
AAAASQAAAEgAAABEAAAAXAAAAEYAAABEAAAARQAAAFwAAABFAAAAXQAAAFwAAABGAAAAXAAA
AF4AAABGAAAAXgAAAFEAAABGAAAAUQAAAFoAAABGAAAAWgAAAEcAAABHAAAAWgAAAFkAAABH
AAAAWQAAAFsAAABJAAAAWwAAAFgAAABJAAAAWAAAAFcAAABJAAAAVwAAAFYAAABJAAAAVgAA
AEoAAABKAAAAXwAAAEsAAABKAAAAVgAAAFUAAABKAAAAVQAAAF8AAABLAAAAXwAAAE0AAABL
AAAATQAAAEwAAABNAAAAXwAAAGAAAABPAAAAUQAAAF4AAABPAAAAXgAAAFwAAABPAAAAXAAA
AGEAAABTAAAAYgAAAGMAAABTAAAAYwAAAFQAAABTAAAAYAAAAF8AAABTAAAAXwAAAGIAAABU
AAAAYwAAAFUAAABVAAAAYgAAAF8AAABVAAAAYwAAAGIAAABYAAAAWwAAAFkAAABcAAAAXQAA
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
ACMAAAAlAAAAIAAAACUAAAAmAAAAIAAAACYAAAAkAAAAIQAAACcAAAAiAAAAIQAAACgAAAAn
AAAAJAAAACYAAAAqAAAAJAAAACoAAAApAAAAJwAAACgAAAAsAAAAJwAAACwAAAArAAAAKQAA
ACoAAAAtAAAAKgAAAC4AAAAtAAAAKwAAACwAAAAvAAAAKwAAAC8AAAAwAAAALQAAAC4AAAAy
AAAALQAAADIAAAAxAAAALwAAADMAAAAwAAAALwAAADQAAAAzAAAAMQAAADIAAAA2AAAAMQAA
ADYAAAA1AAAAMwAAADQAAAA3AAAANAAAADUAAAA4AAAANAAAADgAAAA5AAAANAAAADkAAAA3
AAAANQAAADYAAAA4AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACA
P4QAAAAEAAAAcBSov79djz4ApLA+cBSovwE7mD5ygK8+hH26v79djz4ApLA+cBSov1uFhj5y
gK8+cBSov/ghmj4oua4+hH26vwE7mD5ygK8+ILLJvwgqtD1YVn8+ILLJvwM1lD00sYA+hH26
v1uFhj5ygK8+cBSovwDbJDzhBXk+cBSov5pwnz7PgKw+hH26v5B3oD4YEqw+ILLJv7WSQD5S
XGI+ILLJv0/cIj7Sum4+ILLJv4oECj7hBXk+ILLJv6jz0TyzIHs+ILLJvwDbJDzhBXk+cBSo
v6Bn0juufnc+cBSov5B3oD4YEqw+hH26vxOLpz7AoqY+ILLJv8B1eD7YPjk+ILLJv+/kXj4B
2kw+ILLJv9xdRT5CUGA+ILLJvwTxBb3G22Y+cBSovwTxBb3G22Y+cBSovxOLpz7AoqY+cBSo
v2I6qD5SxaU+hH26v4kFrT6eg58+ILLJv57Sjz6BJwY+ILLJvwTxBb0IXhc+cBSovwTxBb0I
Xhc+cBSov4kFrT6eg58+hH26v1VosD5OSJc+ILLJvwYrnD6EWJU9ILLJv3vYbT4A6mo9cBSo
v3vYbT4A6mo9cBSov1VosD5OSJc+hH26v0CWsT5Obo4+ILLJv1+znD5gX4U9ILLJv9o2nT4A
6mo9cBSov9o2nT4A6mo9cBSov0CWsT5Obo4+hH26v1VosD5NlIU+cBSov1VosD5NlIU+/AAA
AAAAAAABAAAABQAAAAAAAAAFAAAAAgAAAAAAAAACAAAACAAAAAAAAAAIAAAAAwAAAAAAAAAD
AAAACQAAAAAAAAAJAAAAEQAAAAAAAAARAAAAGAAAAAAAAAAYAAAAHgAAAAAAAAAeAAAAIwAA
AAAAAAAjAAAAKAAAAAAAAAAoAAAAKwAAAAAAAAArAAAAKQAAAAAAAAApAAAAJAAAAAAAAAAk
AAAAHwAAAAAAAAAfAAAAGgAAAAAAAAAaAAAAGQAAAAAAAAAZAAAAEgAAAAAAAAASAAAACgAA
AAAAAAAKAAAABAAAAAAAAAAEAAAAAQAAAAEAAAAEAAAABQAAAAIAAAAGAAAABwAAAAIAAAAH
AAAACAAAAAIAAAAFAAAABgAAAAMAAAAIAAAAEAAAAAMAAAAQAAAACQAAAAQAAAAKAAAACwAA
AAQAAAALAAAABQAAAAUAAAALAAAADAAAAAUAAAAMAAAADQAAAAUAAAANAAAADgAAAAUAAAAO
AAAABgAAAAYAAAAOAAAADQAAAAYAAAANAAAADAAAAAYAAAAMAAAAFgAAAAYAAAAWAAAAFQAA
AAYAAAAVAAAAFAAAAAYAAAAUAAAAHAAAAAYAAAAcAAAAIQAAAAYAAAAhAAAAJgAAAAYAAAAm
AAAAJwAAAAYAAAAnAAAAIgAAAAYAAAAiAAAAHQAAAAYAAAAdAAAAFwAAAAYAAAAXAAAAEAAA
AAYAAAAQAAAADwAAAAYAAAAPAAAABwAAAAcAAAAPAAAACAAAAAgAAAAPAAAAEAAAAAkAAAAQ
AAAAEQAAAAoAAAASAAAACwAAAAsAAAASAAAAGQAAAAsAAAAZAAAAEwAAAAsAAAATAAAAFAAA
AAsAAAAUAAAAFQAAAAsAAAAVAAAAFgAAAAsAAAAWAAAADAAAABAAAAAXAAAAEQAAABEAAAAX
AAAAGAAAABMAAAAZAAAAGgAAABMAAAAaAAAAGwAAABMAAAAbAAAAFAAAABQAAAAbAAAAHAAA
ABcAAAAdAAAAHgAAABcAAAAeAAAAGAAAABoAAAAfAAAAGwAAABsAAAAfAAAAJAAAABsAAAAk
AAAAIAAAABsAAAAgAAAAIQAAABsAAAAhAAAAHAAAAB0AAAAiAAAAIwAAAB0AAAAjAAAAHgAA
ACAAAAAkAAAAKQAAACAAAAApAAAAJQAAACAAAAAlAAAAJgAAACAAAAAmAAAAIQAAACIAAAAn
AAAAKAAAACIAAAAoAAAAIwAAACUAAAApAAAAKwAAACUAAAArAAAAKgAAACUAAAAqAAAAJwAA
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
AAAABQAAAAoAAAAGAAAABgAAAAoAAAALAAAACAAAAAwAAAAJAAAACQAAAAwAAAANAAAACQAA
AA0AAAAOAAAACgAAAA8AAAAQAAAACgAAABAAAAALAAAADQAAABEAAAAOAAAADgAAABEAAAAS
AAAADwAAABMAAAAQAAAADwAAABQAAAAVAAAADwAAABUAAAATAAAAEQAAABYAAAAXAAAAEQAA
ABcAAAASAAAAFAAAABgAAAAVAAAAFQAAABgAAAAcAAAAFQAAABwAAAAZAAAAFgAAABoAAAAX
AAAAFwAAABoAAAAbAAAAGQAAABwAAAAgAAAAGQAAACAAAAAdAAAAGgAAAB4AAAAfAAAAGgAA
AB8AAAAbAAAAHQAAACAAAAAkAAAAHQAAACQAAAAhAAAAHgAAACIAAAAfAAAAHwAAACIAAAAj
AAAAIQAAACQAAAApAAAAIQAAACkAAAAlAAAAIgAAACYAAAAnAAAAIgAAACcAAAAoAAAAIgAA
ACgAAAAjAAAAJQAAACkAAAAtAAAAJQAAAC0AAAAqAAAAJgAAACsAAAAsAAAAJgAAACwAAAAn
AAAAKgAAAC0AAAAsAAAAKgAAACwAAAArAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAA
AAAAAAAAAAAAAACAP4cAAAAEAAAAILJJv2pijz4ApLA+wHaGv2pijz4ApLA+ILJJv1qDhj5y
gK8+ILJJv+k7mD5ygK8+wHaGv1qDhj5ygK8+wHaGv+k7mD5ygK8+ILJJvyAoJTzhBXk+ILJJ
v24PmT6QK68+wHaGvyAoJTzhBXk+wHaGv/xzoD4YEqw+ILJJvwCWWrrmaHQ+ILJJv/xzoD4Y
Eqw+wHaGv+CrRL1CUGA+ILJJvz0xoT6Lias+wHaGvwwQpT7oiag+ILJJvwgkGL2f9GQ+wHaG
v+Qspr3HekY+ILJJv1KcqL2VjkU+ILJJv+CrRL1CUGA+ILJJv5yKpz7AoqY+wHaGv5yKpz7A
oqY+wHaGv4Atsr0u5UE+ILJJv4Atsr0u5UE+ILJJv868qT5nz6M+wHaGv3J0qT76J6Q+wHaG
v/AplrwMpCI+ILJJv/AplrwMpCI+wHaGv1IFrT6eg58+ILJJv1IFrT6eg58+wHaGv6rjbD4A
6mo9ILJJv6rjbD4A6mo9ILJJv0ihrz7FK5k+wHaGv4Y3rz5rKpo+wHaGv5o2nT4A6mo9ILJJ
v5o2nT4A6mo9ILJJvxpksD5OSJc+wHaGvxpksD5OSJc+wHaGvxpksD5NlIU+ILJJvxpksD5N
lIU+ILJJv3essD6hQ5U+wHaGv0CWsT5Obo4+wHaGv34ssT7VVIs+ILJJv0zIsD5qdog+ILJJ
v0CWsT5Obo4+ILJJv34ssT43XIs+AgEAAAAAAAABAAAABAAAAAAAAAAEAAAAAgAAAAAAAAAC
AAAABgAAAAAAAAAGAAAACgAAAAAAAAAKAAAADwAAAAAAAAAPAAAAEgAAAAAAAAASAAAAEQAA
AAAAAAARAAAAFgAAAAAAAAAWAAAAGgAAAAAAAAAaAAAAHgAAAAAAAAAeAAAAIgAAAAAAAAAi
AAAAJgAAAAAAAAAmAAAAKgAAAAAAAAAqAAAALAAAAAAAAAAsAAAAKwAAAAAAAAArAAAAJwAA
AAAAAAAnAAAAIwAAAAAAAAAjAAAAHwAAAAAAAAAfAAAAHAAAAAAAAAAcAAAAFwAAAAAAAAAX
AAAAEwAAAAAAAAATAAAADQAAAAAAAAANAAAACwAAAAAAAAALAAAABwAAAAAAAAAHAAAAAwAA
AAAAAAADAAAABQAAAAAAAAAFAAAAAQAAAAEAAAAFAAAACQAAAAEAAAAJAAAADgAAAAEAAAAO
AAAAFAAAAAEAAAAUAAAAGAAAAAEAAAAYAAAAGwAAAAEAAAAbAAAAIAAAAAEAAAAgAAAAJAAA
AAEAAAAkAAAAKAAAAAEAAAAoAAAAKQAAAAEAAAApAAAAJQAAAAEAAAAlAAAAIQAAAAEAAAAh
AAAAHQAAAAEAAAAdAAAAGQAAAAEAAAAZAAAAFQAAAAEAAAAVAAAAEAAAAAEAAAAQAAAADAAA
AAEAAAAMAAAACAAAAAEAAAAIAAAABAAAAAIAAAAEAAAACAAAAAIAAAAIAAAABgAAAAMAAAAH
AAAABQAAAAUAAAAHAAAACQAAAAYAAAAIAAAACgAAAAcAAAALAAAACQAAAAgAAAAMAAAACgAA
AAkAAAALAAAADQAAAAkAAAANAAAADgAAAAoAAAAMAAAADwAAAAwAAAAQAAAAEQAAAAwAAAAR
AAAAEgAAAAwAAAASAAAADwAAAA0AAAATAAAAFAAAAA0AAAAUAAAADgAAABAAAAAVAAAAEQAA
ABEAAAAVAAAAFgAAABMAAAAXAAAAFAAAABQAAAAXAAAAGAAAABUAAAAZAAAAGgAAABUAAAAa
AAAAFgAAABcAAAAbAAAAGAAAABcAAAAcAAAAGwAAABkAAAAdAAAAHgAAABkAAAAeAAAAGgAA
ABsAAAAcAAAAHwAAABsAAAAfAAAAIAAAAB0AAAAhAAAAIgAAAB0AAAAiAAAAHgAAAB8AAAAj
AAAAJAAAAB8AAAAkAAAAIAAAACEAAAAlAAAAJgAAACEAAAAmAAAAIgAAACMAAAAnAAAAJAAA
ACQAAAAnAAAAKAAAACUAAAApAAAAJgAAACYAAAApAAAAKgAAACcAAAArAAAAKAAAACgAAAAr
AAAAKQAAACkAAAArAAAALAAAACkAAAAsAAAAKgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAEAAA
AAAAAAAAAAAAAAAAAAAAgD+EAAAABAAAAMB2Br9qYo8+AKSwPiCySb9qYo8+AKSwPsB2Br9a
g4Y+coCvPsB2Br/pO5g+coCvPiCySb9ag4Y+coCvPiCySb/pO5g+coCvPsB2Br8gKCU84QV5
PsB2Br/04pk+/tKuPiCySb9uD5k+kCuvPiCySb8gKCU84QV5PiCySb8Allq65mh0PsB2Br/g
q0S9QlBgPsB2Br/8c6A+GBKsPiCySb/8c6A+GBKsPiCySb8IJBi9n/RkPiCySb/gq0S9QlBg
PiCySb9SnKi9lY5FPsB2Br+ALbK9LuVBPsB2Br9c46E+Tf2qPiCySb89MaE+i4mrPiCySb+A
LbK9LuVBPsB2Br/wKZa8DKQiPsB2Br+ciqc+wKKmPiCySb+ciqc+wKKmPiCySb/wKZa8DKQi
PsB2Br+q42w+AOpqPcB2Br9SBa0+noOfPiCySb/OvKk+Z8+jPiCySb+q42w+AOpqPcB2Br+a
Np0+AOpqPSCySb9SBa0+noOfPsB2Br8aZLA+TkiXPiCySb9Ioa8+xSuZPiCySb+aNp0+AOpq
PcB2Br8aZLA+TZSFPsB2Br+AhbA+bFiWPiCySb93rLA+oUOVPiCySb8aZLA+TkiXPiCySb8a
ZLA+TZSFPiCySb9MyLA+anaIPsB2Br+7wrA+0U2IPsB2Br9AlrE+Tm6OPiCySb9AlrE+Tm6O
PiCySb9+LLE+N1yLPvwAAAAAAAAAAQAAAAQAAAAAAAAABAAAAAIAAAAAAAAAAgAAAAYAAAAA
AAAABgAAAAsAAAAAAAAACwAAABEAAAAAAAAAEQAAABUAAAAAAAAAFQAAABkAAAAAAAAAGQAA
AB0AAAAAAAAAHQAAACIAAAAAAAAAIgAAACgAAAAAAAAAKAAAACkAAAAAAAAAKQAAACMAAAAA
AAAAIwAAAB8AAAAAAAAAHwAAABoAAAAAAAAAGgAAABYAAAAAAAAAFgAAABIAAAAAAAAAEgAA
AAwAAAAAAAAADAAAAAcAAAAAAAAABwAAAAMAAAAAAAAAAwAAAAUAAAAAAAAABQAAAAEAAAAB
AAAABQAAAAgAAAABAAAACAAAAA0AAAABAAAADQAAABMAAAABAAAAEwAAABcAAAABAAAAFwAA
ABsAAAABAAAAGwAAAB4AAAABAAAAHgAAACAAAAABAAAAIAAAACUAAAABAAAAJQAAACQAAAAB
AAAAJAAAACoAAAABAAAAKgAAACsAAAABAAAAKwAAACcAAAABAAAAJwAAACYAAAABAAAAJgAA
ACEAAAABAAAAIQAAABwAAAABAAAAHAAAABgAAAABAAAAGAAAABQAAAABAAAAFAAAABAAAAAB
AAAAEAAAAA8AAAABAAAADwAAAA4AAAABAAAADgAAAAoAAAABAAAACgAAAAkAAAABAAAACQAA
AAQAAAACAAAABAAAAAkAAAACAAAACQAAAAYAAAADAAAABwAAAAgAAAADAAAACAAAAAUAAAAG
AAAACQAAAAoAAAAGAAAACgAAAAsAAAAHAAAADAAAAA0AAAAHAAAADQAAAAgAAAAKAAAADgAA
AAsAAAALAAAADgAAAA8AAAALAAAADwAAABAAAAALAAAAEAAAABEAAAAMAAAAEgAAABMAAAAM
AAAAEwAAAA0AAAAQAAAAFAAAABEAAAARAAAAFAAAABgAAAARAAAAGAAAABUAAAASAAAAFgAA
ABMAAAATAAAAFgAAABcAAAAVAAAAGAAAABwAAAAVAAAAHAAAABkAAAAWAAAAGgAAABsAAAAW
AAAAGwAAABcAAAAZAAAAHAAAACEAAAAZAAAAIQAAAB0AAAAaAAAAHgAAABsAAAAaAAAAHwAA
ACAAAAAaAAAAIAAAAB4AAAAdAAAAIQAAACYAAAAdAAAAJgAAACIAAAAfAAAAIwAAACQAAAAf
AAAAJAAAACUAAAAfAAAAJQAAACAAAAAiAAAAJgAAACcAAAAiAAAAJwAAACgAAAAjAAAAKQAA
ACQAAAAkAAAAKQAAACoAAAAnAAAAKwAAACgAAAAoAAAAKwAAACkAAAApAAAAKwAAACoAAAAQ
AAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAIA/bAAAAAQAAADAdoa/bjqd
PgDqaj3Adoa/QGKgPiAFLDxwFKi/bjqdPgDqaj3Adoa/mutsPgDqaj1wFKi/QGKgPiAFLDzA
doa/bjqdPlhxFL1wFKi/w4uePtBEibxwFKi/KeRtPgDqaj2uzae//PAFvQDqaj3Adoa//PAF
vf5EUb7Adoa/riucPmA4VL1wFKi/2vecPrhbJL1wFKi//PAFvepfAb5wFKi//PAFvf5EUb7A
doa/CMqqvLBQVr5wFKi/Wt2ZPixtgL1wFKi/riucPmA4VL3Adoa/3NePPusD4b1wFKi/IP4V
PMIHY77Adoa/MHUGPM6nYr5wFKi/3NePPusD4b3Adoa/sHd4Pq6gI75wFKi/4iqMPr439L1w
FKi/EPkkPLdnY77Adoa/EPkkPLdnY75wFKi/sHd4Pq6gI77Adoa/zFpFPnq5Sr5wFKi/8MZk
PPTzY77Adoa/9zqUPQDTa75wFKi/zFpFPnq5Sr7Adoa/ZusJPrdnY75wFKi/QKENPoTgYb5w
FKi/9zqUPQDTa75wFKi/YBTcPX8YZ75wFKi/yOgBPtF4ZL5wFKi/ZusJPrdnY77MAAAAAAAA
AAEAAAAEAAAAAAAAAAQAAAACAAAAAAAAAAIAAAAHAAAAAAAAAAcAAAAIAAAAAAAAAAgAAAAD
AAAAAAAAAAMAAAAJAAAAAAAAAAkAAAAOAAAAAAAAAA4AAAATAAAAAAAAABMAAAAYAAAAAAAA
ABgAAAAcAAAAAAAAABwAAAAeAAAAAAAAAB4AAAAaAAAAAAAAABoAAAAVAAAAAAAAABUAAAAR
AAAAAAAAABEAAAAKAAAAAAAAAAoAAAAFAAAAAAAAAAUAAAABAAAAAQAAAAUAAAALAAAAAQAA
AAsAAAAGAAAAAQAAAAYAAAAEAAAAAgAAAAQAAAAGAAAAAgAAAAYAAAALAAAAAgAAAAsAAAAQ
AAAAAgAAABAAAAAPAAAAAgAAAA8AAAAUAAAAAgAAABQAAAAWAAAAAgAAABYAAAAZAAAAAgAA
ABkAAAAdAAAAAgAAAB0AAAAfAAAAAgAAAB8AAAAjAAAAAgAAACMAAAAiAAAAAgAAACIAAAAh
AAAAAgAAACEAAAAgAAAAAgAAACAAAAAbAAAAAgAAABsAAAAXAAAAAgAAABcAAAASAAAAAgAA
ABIAAAANAAAAAgAAAA0AAAAMAAAAAgAAAAwAAAAHAAAAAwAAAAgAAAAJAAAABQAAAAoAAAAL
AAAABwAAAAwAAAAIAAAACAAAAAwAAAANAAAACAAAAA0AAAAJAAAACQAAAA0AAAAOAAAACgAA
AA8AAAAQAAAACgAAABAAAAALAAAACgAAABEAAAAPAAAADQAAABIAAAATAAAADQAAABMAAAAO
AAAADwAAABEAAAAUAAAAEQAAABUAAAAWAAAAEQAAABYAAAAUAAAAEgAAABcAAAATAAAAEwAA
ABcAAAAYAAAAFQAAABkAAAAWAAAAFQAAABoAAAAdAAAAFQAAAB0AAAAZAAAAFwAAABsAAAAY
AAAAGAAAABsAAAAcAAAAGgAAAB4AAAAfAAAAGgAAAB8AAAAdAAAAGwAAACAAAAAcAAAAHAAA
ACEAAAAeAAAAHAAAACAAAAAhAAAAHgAAACEAAAAiAAAAHgAAACIAAAAjAAAAHgAAACMAAAAf
AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAACAP2kAAAAEAAAAwHaG
v79djz4ApLA+wHaGvwE7mD5ygK8+cBSov79djz4ApLA+wHaGv1uFhj5ygK8+cBSov/ghmj4o
ua4+cBSovwE7mD5ygK8+wHaGv5B3oD4YEqw+cBSov1uFhj5ygK8+wHaGvwDbJDzhBXk+cBSo
v5pwnz7PgKw+wHaGvxOLpz7AoqY+cBSov5B3oD4YEqw+cBSovwDbJDzhBXk+cBSov6Bn0juu
fnc+wHaGvyBMkrtS2nI+cBSov2I6qD5SxaU+cBSovxOLpz7AoqY+wHaGv4kFrT6eg58+cBSo
vwTxBb3G22Y+wHaGvwTxBb3G22Y+cBSov4kFrT6eg58+wHaGv2o6rz5rKpo+cBSovwTxBb0I
Xhc+rs2nvwTxBb0A6mo9wHaGvyAZlrwMpCI+cBSov1VosD5OSJc+wHaGv1VosD5OSJc+cBSo
v3vYbT4A6mo9wHaGv73ubD4A6mo9cBSov0CWsT5Obo4+wHaGv0CWsT5Obo4+cBSov9o2nT4A
6mo9wHaGv9o2nT4A6mo9cBSov1VosD5NlIU+wHaGv1VosD5NlIU+xgAAAAAAAAABAAAABQAA
AAAAAAAFAAAAAgAAAAAAAAACAAAABwAAAAAAAAAHAAAAAwAAAAAAAAADAAAACAAAAAAAAAAI
AAAADgAAAAAAAAAOAAAAEwAAAAAAAAATAAAAGAAAAAAAAAAYAAAAHAAAAAAAAAAcAAAAIAAA
AAAAAAAgAAAAIgAAAAAAAAAiAAAAHgAAAAAAAAAeAAAAGgAAAAAAAAAaAAAAFQAAAAAAAAAV
AAAAEQAAAAAAAAARAAAACgAAAAAAAAAKAAAABgAAAAAAAAAGAAAAAQAAAAEAAAAEAAAABQAA
AAEAAAAGAAAABAAAAAIAAAAFAAAABAAAAAIAAAAEAAAACQAAAAIAAAAJAAAACwAAAAIAAAAL
AAAAEAAAAAIAAAAQAAAADwAAAAIAAAAPAAAAFAAAAAIAAAAUAAAAGQAAAAIAAAAZAAAAHQAA
AAIAAAAdAAAAIQAAAAIAAAAhAAAAHwAAAAIAAAAfAAAAGwAAAAIAAAAbAAAAFgAAAAIAAAAW
AAAAEgAAAAIAAAASAAAADQAAAAIAAAANAAAADAAAAAIAAAAMAAAABwAAAAMAAAAHAAAADAAA
AAMAAAAMAAAACAAAAAQAAAAGAAAACQAAAAYAAAAKAAAAEAAAAAYAAAAQAAAACwAAAAYAAAAL
AAAACQAAAAgAAAAMAAAADQAAAAgAAAANAAAADgAAAAoAAAAPAAAAEAAAAAoAAAARAAAADwAA
AA0AAAASAAAAEwAAAA0AAAATAAAADgAAAA8AAAARAAAAFAAAABEAAAAVAAAAFAAAABIAAAAW
AAAAFwAAABIAAAAXAAAAEwAAABMAAAAXAAAAGAAAABQAAAAVAAAAGQAAABUAAAAaAAAAGQAA
ABYAAAAbAAAAFwAAABcAAAAcAAAAGAAAABcAAAAbAAAAHwAAABcAAAAfAAAAIAAAABcAAAAg
AAAAHAAAABkAAAAaAAAAHgAAABkAAAAeAAAAHQAAAB0AAAAeAAAAIgAAAB0AAAAiAAAAIQAA
AB8AAAAhAAAAIgAAAB8AAAAiAAAAIAAAAA==</SharedString>
		<SharedString md5="yuZpQdnvvUBOTYh1jqZ2cA=="></SharedString>
	</SharedStrings>
</roblox>